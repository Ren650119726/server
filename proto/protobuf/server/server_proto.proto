syntax = "proto3";
package protomsg;
option go_package = "root/protomsg/inner";

import "protobuf/data.proto";

enum SERVERMSG {
	UNKNOW = 0;
	HD_HELLO_DB     	 = 100; // 大厅向db建立链接
	SS_TEST_NETWORK      = 101; // 网络测试
	SS_CLOSE_SERVER      = 102; // 关闭服务器消息
	SS_RELOAD_CONFIG     = 103; // 更新配置
	HD_ALL_DATA          = 105; // 开服获取所有数据
	DH_ALL_ACCOUNT_RESP  = 106; // db返回所有 账号 给大厅
	DH_ALL_EMAIL_RESP    = 107; // db返回所有 邮件 给大厅
	DH_ALL_WATER_LINE    = 108; // db返回所有水位线
	DH_ALL_ROOM_BONUS    = 109; // db返回所有房间水池
	DH_FINISH_DATA       = 120; // db通知大厅,所有数据发送完成
	
	HD_SQL_SYNTAX        = 131; // 大厅发送sql语句给db执行
	HD_SAVE_ACCOUNT 	 = 135; // 大厅回存玩家数据
	HD_SAVE_EMAIL_PERSON = 136; // 通知DB回存玩家邮件
	HD_SAVE_WATER_LINE   = 137; // 回存水位线
	HD_SAVE_ROOM_BONUS   = 138; // 回存房间水池
	HD_SAVE_ALL          = 150; // 通知DB回存的所有数据发送完成
	
	GH_GAME_CONNECT_HALL = 170; // 游戏连接大厅
	GH_ROOM_INFO         = 171; // 游戏上报房间信息给大厅
	
	GH_SERVERFEE_LOG     = 175;// 回存服务费
	HG_NOTIFY_ALTER_DATE = 176;// 大厅通知游戏，修改玩家数据
	GH_MONEYCHANGE       = 177;// 游戏改变金币，通知大厅
	
	HG_PLAYER_DATA_REQ   = 180; // 大厅给游戏发送玩家数据
	GH_PLAYER_DATA_RES   = 181; // 游戏回复大厅，收到玩家数据，大厅通知玩家进入
	GH_PLAYER_ENTER_ROOM = 182; // 游戏通知大厅，玩家进入房间
	GH_PLAYER_LEAVE_ROOM = 183; // 游戏通知大厅，玩家退出房间

	GH_ROOM_BONUS_REQ    = 185; // 请求房间水池金额
	HG_ROOM_BONUS_RES    = 186; //
	GH_ROOM_BONUS_SAVE   = 187; // 回存房间水池金额
}

// 发送到db执行 sql syntax
message SQL_SYNTAX {
	 uint32 DataBaseType = 1;  // 0 inst 1 log 
	 string SQLSyntax = 2; // sql语句
}
// 请求账号信息
message ALL_ACCOUNT_RESP {
	repeated AccountStorageData AllAccount = 1;
}
// db返回所有水位线
message ALL_WATER_LINE {
	repeated SAVE_WATER_LINE Line = 1;
}

// db返回所有房间水池
message ALL_ROOM_BONUS {
	repeated SAVE_ROOM_BONUS Bonus = 1;
}

// 请求邮件信息
message ALL_EMAIL_RESP {
	repeated SAVE_EMAIL_PERSON AcccountMail = 1;
}

// 回存玩家
message SAVE_ACCOUNT {
	AccountStorageData AccData = 1;
}
// 回存邮件
message SAVE_EMAIL_PERSON {
	 uint32 AccountId = 1;
	 repeated Email Emails = 2;
}
// 回存水位线
message SAVE_WATER_LINE {
	 uint32 ServerID = 1;
	 uint32  GameType = 2;
	 string WaterLine = 3;
}
// 水池
message SAVE_ROOM_BONUS {
	 uint32 RoomID = 1;
	 uint64 Value  = 2;
}

// 游戏连接大厅 170
message GAME_CONNECT_HALL {
	 uint32 ServerID = 1;
	 uint32 GameType = 2;
}

// 游戏上报房间信息给大厅 171
message ROOM_INFO {
	uint32 ServerID = 1; // 服务器id
	repeated uint32 RoomsID = 2; // 房间ID
}

// 回存服务费 175
message SERVERFEE_LOG {
	 uint32 AccountID = 1;
	 uint32 ServerFee = 2;
	 uint32 GameType  = 3;
	 string Time      = 4;
	 uint32 RoomID    = 5;
}

// 大厅通知游戏，修改玩家数据 176
message NOTIFY_ALTER_DATE {
	 uint32 AccountID   = 1;
	 int32  Type        = 2; // 1金币 2杀数
	 int64  AlterValue  = 3; // 改变值
	 uint32 RoomID      = 4; // 玩家所在房间
	 int32  operateType = 5; // 操作
}

// 游戏改变金币，通知大厅 177
message MONEYCHANGE {
	 uint32 AccountID   = 1;
	 int64  ChangeValue = 2;
	 int64  Value 		= 3;
	 uint32 Operate     = 4;
	 string Time        = 6;
	 uint32 RoomID      = 7;
}

// 大厅给游戏发送玩家数据
message PLAYER_DATA_REQ {
	AccountStorageData Account 	   = 1; 	// 玩家基础信息
	AccountGameData    AccountData = 2; 	// 玩家游戏信息
	uint32 RoomID                  = 3;
}

// 游戏回复大厅，收到玩家数据，大厅通知玩家进入
message PLAYER_DATA_RES {
	uint32 Ret       = 1; // 
	uint32 AccountID = 2;
	uint32 RoomID    = 3;
	
}

// 游戏通知大厅，玩家进入房间
message PLAYER_ENTER_ROOM {
	uint32 AccountID = 2;
	uint32 RoomID    = 3;
}

// 游戏通知大厅，玩家退出房间
message PLAYER_LEAVE_ROOM {
	uint32 AccountID = 2;
	uint32 RoomID    = 3;
}

// 请求房间水池金额 185
message ROOM_BONUS_REQ {
	uint32 RoomID    = 1;
}

message ROOM_BONUS_RES {
    uint32 RoomID    = 1;
	uint64 Value     = 2;// 房间水池金额
}

// 回存房间水池金额
message ROOM_BONUS_SAVE {
    uint32 RoomID    = 1;
	uint64 Value     = 2;// 房间水池金额
}

