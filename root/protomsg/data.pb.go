// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/data.proto

/*
Package protomsg is a generated protocol buffer package.

It is generated from these files:
	protobuf/data.proto
	protobuf/dfdc.proto
	protobuf/fruitmary.proto
	protobuf/hall.proto
	protobuf/jpm.proto
	protobuf/luckfruit.proto
	protobuf/red2black.proto

It has these top-level messages:
	AccountStorageData
	AccountGameData
	Email
	RoomInfo
	GameInfo
	Card
	ENTER_GAME_DFDC_REQ
	ENTER_GAME_DFDC_RES
	LEAVE_GAME_DFDC_REQ
	LEAVE_GAME_DFDC_RES
	START_DFDC_REQ
	START_DFDC_RES
	DFDCPosition
	UPDATE_DFDC_BONUS
	PLAYERS_DFDC_LIST_RES
	ENTER_GAME_FRUITMARY_REQ
	ENTER_GAME_FRUITMARY_RES
	LEAVE_GAME_FRUITMARY_REQ
	LEAVE_GAME_FRUITMARY_RES
	START_MARY_REQ
	START_MARY_RES
	FRUITMARYPosition
	FRUITMARY_Result
	UPDATE_MARY_BONUS
	START_MARY2_REQ
	START_MARY2_RES
	Mary2_Result
	NEXT_MARY_RESULT
	PLAYERS_LIST_RES
	SYNC_SERVER_TIME
	KICK_OUT_HALL
	LOGIN_HALL_REQ
	LOGIN_HALL_RES
	SAFEMONEY_OPERATE_REQ
	SAFEMONEY_OPERATE_RES
	BIND_PHONE_REQ
	BIND_PHONE_RES
	ENTER_ROOM_REQ
	ENTER_ROOM_RES
	EMAILS_REQ
	EMAILS_RES
	EMAIL_READ_REQ
	EMAIL_READ_RES
	EMAIL_REWARD_REQ
	EMAIL_REWARD_RES
	EMAIL_DEL_REQ
	EMAIL_DEL_RES
	UPDATE_MONEY
	EMAIL_NEW
	BROADCAST_MSG
	UPDATE_ROOMLIST
	ENTER_GAME_JPM_REQ
	ENTER_GAME_JPM_RES
	LEAVE_GAME_JPM_REQ
	LEAVE_GAME_JPM_RES
	START_JPM_REQ
	START_JPM_RES
	JPMPosition
	JPM_Result
	UPDATE_JPM_BONUS
	PLAYERS_JPM_LIST_RES
	ENTER_GAME_LUCKFRUIT_REQ
	ENTER_GAME_LUCKFRUIT_RES
	LEAVE_GAME_LUCKFRUIT_REQ
	LEAVE_GAME_LUCKFRUIT_RES
	START_LUCKFRUIT_REQ
	START_LUCKFRUIT_RES
	LUCKFRUITPosition
	LUCKFRUIT_Result
	UPDATE_LUCKFRUIT_BONUS
	PLAYERS_LUCKFRUIT_LIST_RES
	ENTER_GAME_RED2BLACK_REQ
	ENTER_GAME_RED2BLACK_RES
	LEAVE_GAME_RED2BLACK_REQ
	LEAVE_GAME_RED2BLACK_RES
	SWITCH_GAME_STATUS_BROADCAST
	StatusMsg
	Status_Wait
	Status_Bet
	Status_Stop
	Status_Settle
	BET_RED2BLACK_REQ
	BET_RED2BLACK_RES
	CLEAN_BET_RED2BLACK_REQ
	CLEAN_BET_RED2BLACK_RES
	PLAYERS_RED2BLACK_LIST_RES
*/
package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 花色
type Card_CARDCOLOR int32

const (
	Card_CARDCOLOR_Unknow Card_CARDCOLOR = 0
	Card_CARDCOLOR_1      Card_CARDCOLOR = 1
	Card_CARDCOLOR_2      Card_CARDCOLOR = 2
	Card_CARDCOLOR_3      Card_CARDCOLOR = 3
	Card_CARDCOLOR_4      Card_CARDCOLOR = 4
	Card_CARDCOLOR_5      Card_CARDCOLOR = 5
)

var Card_CARDCOLOR_name = map[int32]string{
	0: "CARDCOLOR_Unknow",
	1: "CARDCOLOR_1",
	2: "CARDCOLOR_2",
	3: "CARDCOLOR_3",
	4: "CARDCOLOR_4",
	5: "CARDCOLOR_5",
}
var Card_CARDCOLOR_value = map[string]int32{
	"CARDCOLOR_Unknow": 0,
	"CARDCOLOR_1":      1,
	"CARDCOLOR_2":      2,
	"CARDCOLOR_3":      3,
	"CARDCOLOR_4":      4,
	"CARDCOLOR_5":      5,
}

func (x Card_CARDCOLOR) String() string {
	return proto.EnumName(Card_CARDCOLOR_name, int32(x))
}
func (Card_CARDCOLOR) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

// 玩家基础信息
type AccountStorageData struct {
	AccountId  uint32 `protobuf:"varint,1,opt,name=AccountId" json:"AccountId,omitempty"`
	UnDevice   string `protobuf:"bytes,2,opt,name=UnDevice" json:"UnDevice,omitempty"`
	Phone      string `protobuf:"bytes,3,opt,name=Phone" json:"Phone,omitempty"`
	WeiXin     string `protobuf:"bytes,4,opt,name=WeiXin" json:"WeiXin,omitempty"`
	Name       string `protobuf:"bytes,5,opt,name=Name" json:"Name,omitempty"`
	HeadURL    string `protobuf:"bytes,6,opt,name=HeadURL" json:"HeadURL,omitempty"`
	Money      uint64 `protobuf:"varint,7,opt,name=Money" json:"Money,omitempty"`
	SafeMoney  uint64 `protobuf:"varint,8,opt,name=SafeMoney" json:"SafeMoney,omitempty"`
	ActiveTime string `protobuf:"bytes,9,opt,name=ActiveTime" json:"ActiveTime,omitempty"`
	ActiveIP   string `protobuf:"bytes,10,opt,name=ActiveIP" json:"ActiveIP,omitempty"`
	FrozenTime uint64 `protobuf:"varint,11,opt,name=FrozenTime" json:"FrozenTime,omitempty"`
	Salesman   int32  `protobuf:"varint,12,opt,name=Salesman" json:"Salesman,omitempty"`
	SalesTime  string `protobuf:"bytes,13,opt,name=SalesTime" json:"SalesTime,omitempty"`
	Special    uint32 `protobuf:"varint,14,opt,name=Special" json:"Special,omitempty"`
	OSType     uint32 `protobuf:"varint,15,opt,name=OSType" json:"OSType,omitempty"`
	LoginTime  int64  `protobuf:"varint,16,opt,name=LoginTime" json:"LoginTime,omitempty"`
	LogoutTime int64  `protobuf:"varint,17,opt,name=LogoutTime" json:"LogoutTime,omitempty"`
	Robot      uint32 `protobuf:"varint,18,opt,name=Robot" json:"Robot,omitempty"`
	Kill       int32  `protobuf:"varint,19,opt,name=Kill" json:"Kill,omitempty"`
}

func (m *AccountStorageData) Reset()                    { *m = AccountStorageData{} }
func (m *AccountStorageData) String() string            { return proto.CompactTextString(m) }
func (*AccountStorageData) ProtoMessage()               {}
func (*AccountStorageData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AccountStorageData) GetAccountId() uint32 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *AccountStorageData) GetUnDevice() string {
	if m != nil {
		return m.UnDevice
	}
	return ""
}

func (m *AccountStorageData) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AccountStorageData) GetWeiXin() string {
	if m != nil {
		return m.WeiXin
	}
	return ""
}

func (m *AccountStorageData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AccountStorageData) GetHeadURL() string {
	if m != nil {
		return m.HeadURL
	}
	return ""
}

func (m *AccountStorageData) GetMoney() uint64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *AccountStorageData) GetSafeMoney() uint64 {
	if m != nil {
		return m.SafeMoney
	}
	return 0
}

func (m *AccountStorageData) GetActiveTime() string {
	if m != nil {
		return m.ActiveTime
	}
	return ""
}

func (m *AccountStorageData) GetActiveIP() string {
	if m != nil {
		return m.ActiveIP
	}
	return ""
}

func (m *AccountStorageData) GetFrozenTime() uint64 {
	if m != nil {
		return m.FrozenTime
	}
	return 0
}

func (m *AccountStorageData) GetSalesman() int32 {
	if m != nil {
		return m.Salesman
	}
	return 0
}

func (m *AccountStorageData) GetSalesTime() string {
	if m != nil {
		return m.SalesTime
	}
	return ""
}

func (m *AccountStorageData) GetSpecial() uint32 {
	if m != nil {
		return m.Special
	}
	return 0
}

func (m *AccountStorageData) GetOSType() uint32 {
	if m != nil {
		return m.OSType
	}
	return 0
}

func (m *AccountStorageData) GetLoginTime() int64 {
	if m != nil {
		return m.LoginTime
	}
	return 0
}

func (m *AccountStorageData) GetLogoutTime() int64 {
	if m != nil {
		return m.LogoutTime
	}
	return 0
}

func (m *AccountStorageData) GetRobot() uint32 {
	if m != nil {
		return m.Robot
	}
	return 0
}

func (m *AccountStorageData) GetKill() int32 {
	if m != nil {
		return m.Kill
	}
	return 0
}

// 玩家游戏信息
type AccountGameData struct {
	RoomID uint32 `protobuf:"varint,2,opt,name=RoomID" json:"RoomID,omitempty"`
}

func (m *AccountGameData) Reset()                    { *m = AccountGameData{} }
func (m *AccountGameData) String() string            { return proto.CompactTextString(m) }
func (*AccountGameData) ProtoMessage()               {}
func (*AccountGameData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AccountGameData) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type Email struct {
	EmailID   uint32 `protobuf:"varint,1,opt,name=EmailID" json:"EmailID,omitempty"`
	EmailType uint32 `protobuf:"varint,2,opt,name=EmailType" json:"EmailType,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=Content" json:"Content,omitempty"`
	Money     uint64 `protobuf:"varint,4,opt,name=Money" json:"Money,omitempty"`
	SendTime  int64  `protobuf:"varint,5,opt,name=SendTime" json:"SendTime,omitempty"`
	IsRead    uint32 `protobuf:"varint,6,opt,name=IsRead" json:"IsRead,omitempty"`
}

func (m *Email) Reset()                    { *m = Email{} }
func (m *Email) String() string            { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()               {}
func (*Email) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Email) GetEmailID() uint32 {
	if m != nil {
		return m.EmailID
	}
	return 0
}

func (m *Email) GetEmailType() uint32 {
	if m != nil {
		return m.EmailType
	}
	return 0
}

func (m *Email) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Email) GetMoney() uint64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *Email) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *Email) GetIsRead() uint32 {
	if m != nil {
		return m.IsRead
	}
	return 0
}

type RoomInfo struct {
	RoomID   uint32   `protobuf:"varint,1,opt,name=RoomID" json:"RoomID,omitempty"`
	MinMoney uint64   `protobuf:"varint,2,opt,name=MinMoney" json:"MinMoney,omitempty"`
	Bets     []uint64 `protobuf:"varint,3,rep,packed,name=Bets" json:"Bets,omitempty"`
	Type     uint32   `protobuf:"varint,4,opt,name=type" json:"type,omitempty"`
	Order    uint32   `protobuf:"varint,5,opt,name=Order" json:"Order,omitempty"`
}

func (m *RoomInfo) Reset()                    { *m = RoomInfo{} }
func (m *RoomInfo) String() string            { return proto.CompactTextString(m) }
func (*RoomInfo) ProtoMessage()               {}
func (*RoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RoomInfo) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RoomInfo) GetMinMoney() uint64 {
	if m != nil {
		return m.MinMoney
	}
	return 0
}

func (m *RoomInfo) GetBets() []uint64 {
	if m != nil {
		return m.Bets
	}
	return nil
}

func (m *RoomInfo) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *RoomInfo) GetOrder() uint32 {
	if m != nil {
		return m.Order
	}
	return 0
}

type GameInfo struct {
	GameType uint32      `protobuf:"varint,1,opt,name=GameType" json:"GameType,omitempty"`
	Rooms    []*RoomInfo `protobuf:"bytes,2,rep,name=rooms" json:"rooms,omitempty"`
}

func (m *GameInfo) Reset()                    { *m = GameInfo{} }
func (m *GameInfo) String() string            { return proto.CompactTextString(m) }
func (*GameInfo) ProtoMessage()               {}
func (*GameInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GameInfo) GetGameType() uint32 {
	if m != nil {
		return m.GameType
	}
	return 0
}

func (m *GameInfo) GetRooms() []*RoomInfo {
	if m != nil {
		return m.Rooms
	}
	return nil
}

// 牌信息
type Card struct {
	Number int32          `protobuf:"varint,1,opt,name=Number" json:"Number,omitempty"`
	Color  Card_CARDCOLOR `protobuf:"varint,2,opt,name=Color,enum=protomsg.Card_CARDCOLOR" json:"Color,omitempty"`
}

func (m *Card) Reset()                    { *m = Card{} }
func (m *Card) String() string            { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()               {}
func (*Card) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Card) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Card) GetColor() Card_CARDCOLOR {
	if m != nil {
		return m.Color
	}
	return Card_CARDCOLOR_Unknow
}

func init() {
	proto.RegisterType((*AccountStorageData)(nil), "protomsg.AccountStorageData")
	proto.RegisterType((*AccountGameData)(nil), "protomsg.AccountGameData")
	proto.RegisterType((*Email)(nil), "protomsg.Email")
	proto.RegisterType((*RoomInfo)(nil), "protomsg.RoomInfo")
	proto.RegisterType((*GameInfo)(nil), "protomsg.GameInfo")
	proto.RegisterType((*Card)(nil), "protomsg.Card")
	proto.RegisterEnum("protomsg.Card_CARDCOLOR", Card_CARDCOLOR_name, Card_CARDCOLOR_value)
}

func init() { proto.RegisterFile("protobuf/data.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 618 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x93, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0x86, 0x3f, 0x27, 0x76, 0x9a, 0x6c, 0xbf, 0x34, 0x66, 0x5b, 0x55, 0xab, 0x0a, 0x21, 0xcb,
	0x47, 0xe6, 0x24, 0x15, 0x2d, 0x5c, 0x40, 0x9b, 0xf0, 0x13, 0x91, 0x36, 0xd5, 0xa6, 0x15, 0x88,
	0x13, 0xb4, 0x89, 0xb7, 0xc1, 0xc2, 0xde, 0xad, 0xec, 0x4d, 0x51, 0x11, 0xd7, 0xc0, 0x4d, 0x70,
	0x2f, 0x5c, 0x17, 0x9a, 0x59, 0xff, 0xe5, 0x28, 0xf3, 0xbc, 0xe3, 0x99, 0x9d, 0x77, 0x76, 0x43,
	0x0e, 0x1f, 0x72, 0x6d, 0xf4, 0x6a, 0x7b, 0x7f, 0x1a, 0x0b, 0x23, 0xc6, 0x48, 0xb4, 0x8f, 0x3f,
	0x59, 0xb1, 0x09, 0x7f, 0xbb, 0x84, 0x5e, 0xac, 0xd7, 0x7a, 0xab, 0xcc, 0xd2, 0xe8, 0x5c, 0x6c,
	0xe4, 0x54, 0x18, 0x41, 0x9f, 0x93, 0x41, 0xa9, 0xce, 0x62, 0xe6, 0x04, 0x4e, 0x34, 0xe4, 0x8d,
	0x40, 0x4f, 0x48, 0xff, 0x4e, 0x4d, 0xe5, 0x63, 0xb2, 0x96, 0xac, 0x13, 0x38, 0xd1, 0x80, 0xd7,
	0x4c, 0x8f, 0x88, 0x77, 0xf3, 0x4d, 0x2b, 0xc9, 0xba, 0x98, 0xb0, 0x40, 0x8f, 0x49, 0xef, 0x93,
	0x4c, 0x3e, 0x27, 0x8a, 0xb9, 0x28, 0x97, 0x44, 0x29, 0x71, 0xaf, 0x45, 0x26, 0x99, 0x87, 0x2a,
	0xc6, 0x94, 0x91, 0xbd, 0x0f, 0x52, 0xc4, 0x77, 0x7c, 0xce, 0x7a, 0x28, 0x57, 0x08, 0xbd, 0xaf,
	0xb4, 0x92, 0x4f, 0x6c, 0x2f, 0x70, 0x22, 0x97, 0x5b, 0x80, 0x59, 0x97, 0xe2, 0x5e, 0xda, 0x4c,
	0x1f, 0x33, 0x8d, 0x40, 0x5f, 0x10, 0x72, 0xb1, 0x36, 0xc9, 0xa3, 0xbc, 0x4d, 0x32, 0xc9, 0x06,
	0xd8, 0xb0, 0xa5, 0x80, 0x17, 0x4b, 0xb3, 0x1b, 0x46, 0xac, 0x97, 0x8a, 0xa1, 0xf6, 0x5d, 0xae,
	0x7f, 0x4a, 0x85, 0xb5, 0xfb, 0xd8, 0xba, 0xa5, 0x40, 0xed, 0x52, 0xa4, 0xb2, 0xc8, 0x84, 0x62,
	0xff, 0x07, 0x4e, 0xe4, 0xf1, 0x9a, 0xed, 0x54, 0xa9, 0x2c, 0xb0, 0x74, 0x88, 0x8d, 0x1b, 0x01,
	0x3c, 0x2e, 0x1f, 0xe4, 0x3a, 0x11, 0x29, 0x3b, 0xc0, 0xed, 0x56, 0x08, 0x9b, 0x5a, 0x2c, 0x6f,
	0x9f, 0x1e, 0x24, 0x1b, 0x61, 0xa2, 0x24, 0xe8, 0x37, 0xd7, 0x9b, 0xc4, 0x8e, 0xe2, 0x07, 0x4e,
	0xd4, 0xe5, 0x8d, 0x00, 0x93, 0xce, 0xf5, 0x46, 0x6f, 0x0d, 0xa6, 0x9f, 0x61, 0xba, 0xa5, 0xc0,
	0xe6, 0xb8, 0x5e, 0x69, 0xc3, 0x28, 0x36, 0xb5, 0x00, 0xdb, 0xff, 0x98, 0xa4, 0x29, 0x3b, 0xc4,
	0xd9, 0x31, 0x0e, 0x5f, 0x92, 0x51, 0x79, 0xd1, 0xef, 0x45, 0x66, 0x1f, 0xc3, 0x31, 0xe9, 0x71,
	0xad, 0xb3, 0xd9, 0x14, 0x2f, 0x7b, 0xc8, 0x4b, 0x0a, 0xff, 0x38, 0xc4, 0x7b, 0x9b, 0x89, 0x24,
	0x05, 0x3b, 0x18, 0xcc, 0xa6, 0xe5, 0x63, 0xa9, 0x10, 0xc6, 0xc6, 0x10, 0x1d, 0xd9, 0xf2, 0x46,
	0x80, 0xba, 0x89, 0x56, 0x46, 0x2a, 0x53, 0x3e, 0x97, 0x0a, 0x9b, 0xab, 0x76, 0xdb, 0x57, 0x0d,
	0x0b, 0x97, 0x2a, 0x46, 0x93, 0x1e, 0x9a, 0xac, 0x19, 0xa6, 0x9c, 0x15, 0x5c, 0x8a, 0x18, 0x5f,
	0xcd, 0x90, 0x97, 0x14, 0xfe, 0x22, 0x7d, 0x9c, 0x57, 0xdd, 0xeb, 0x96, 0x13, 0xa7, 0xed, 0x04,
	0xfa, 0x5e, 0x25, 0xca, 0x1e, 0xd8, 0xc1, 0x03, 0x6b, 0x86, 0x25, 0x5d, 0x4a, 0x53, 0xb0, 0x6e,
	0xd0, 0x8d, 0x5c, 0x8e, 0x31, 0x68, 0x06, 0x0c, 0xb9, 0xd8, 0x05, 0x63, 0x98, 0x78, 0x91, 0xc7,
	0x32, 0xc7, 0xc1, 0x86, 0xdc, 0x42, 0x78, 0x43, 0xfa, 0xb0, 0x47, 0x3c, 0xfd, 0xc4, 0xc6, 0xb8,
	0x0a, 0x7b, 0x7e, 0xcd, 0x34, 0x22, 0x5e, 0xae, 0x75, 0x56, 0xb0, 0x4e, 0xd0, 0x8d, 0xf6, 0xcf,
	0xe8, 0xb8, 0xfa, 0x87, 0x8e, 0xab, 0xe1, 0xb9, 0xfd, 0x20, 0xfc, 0xeb, 0x10, 0x77, 0x22, 0xf2,
	0x18, 0xcc, 0x5c, 0x6f, 0xb3, 0x95, 0xcc, 0xb1, 0x99, 0xc7, 0x4b, 0xa2, 0x63, 0xe2, 0x4d, 0x74,
	0xaa, 0x73, 0x74, 0x72, 0x70, 0xc6, 0x9a, 0x56, 0x50, 0x36, 0x9e, 0x5c, 0xf0, 0xe9, 0x64, 0x31,
	0x5f, 0x70, 0x6e, 0x3f, 0x0b, 0x1f, 0xc9, 0xa0, 0xd6, 0xe8, 0x11, 0xf1, 0x6b, 0xf8, 0x7a, 0xa7,
	0xbe, 0x2b, 0xfd, 0xc3, 0xff, 0x8f, 0x8e, 0xc8, 0x7e, 0xa3, 0xbe, 0xf2, 0x9d, 0x5d, 0xe1, 0xcc,
	0xef, 0xec, 0x0a, 0xe7, 0x7e, 0x77, 0x57, 0x78, 0xed, 0xbb, 0xbb, 0xc2, 0x1b, 0xdf, 0xbb, 0x1c,
	0x7d, 0x19, 0xe6, 0x5a, 0x9b, 0xd3, 0x6a, 0xbc, 0x55, 0x0f, 0xa3, 0xf3, 0x7f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xbe, 0x5a, 0xfa, 0x59, 0xb3, 0x04, 0x00, 0x00,
}
