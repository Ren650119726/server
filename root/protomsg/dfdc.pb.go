// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: protobuf/dfdc.proto

package protomsg

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 网络消息
type DFDCMSG int32

const (
	DFDCMSG_UNKNOW_DFDC              DFDCMSG = 0
	DFDCMSG_CS_ENTER_GAME_DFDC_REQ   DFDCMSG = 13001 // 玩家请求进入房间
	DFDCMSG_SC_ENTER_GAME_DFDC_RES   DFDCMSG = 13002
	DFDCMSG_CS_LEAVE_GAME_DFDC_REQ   DFDCMSG = 13003 // 玩家请求退出房间
	DFDCMSG_SC_LEAVE_GAME_DFDC_RES   DFDCMSG = 13004
	DFDCMSG_CS_START_DFDC_REQ        DFDCMSG = 13008 // 请求开始游戏1
	DFDCMSG_SC_START_DFDC_RES        DFDCMSG = 13009
	DFDCMSG_SC_UPDATE_DFDC_BONUS     DFDCMSG = 13010 // 通知更新奖金池
	DFDCMSG_CS_PLAYERS_DFDC_LIST_REQ DFDCMSG = 13015 // 请求在线玩家列表
	DFDCMSG_SC_PLAYERS_DFDC_LIST_RES DFDCMSG = 13016
)

// Enum value maps for DFDCMSG.
var (
	DFDCMSG_name = map[int32]string{
		0:     "UNKNOW_DFDC",
		13001: "CS_ENTER_GAME_DFDC_REQ",
		13002: "SC_ENTER_GAME_DFDC_RES",
		13003: "CS_LEAVE_GAME_DFDC_REQ",
		13004: "SC_LEAVE_GAME_DFDC_RES",
		13008: "CS_START_DFDC_REQ",
		13009: "SC_START_DFDC_RES",
		13010: "SC_UPDATE_DFDC_BONUS",
		13015: "CS_PLAYERS_DFDC_LIST_REQ",
		13016: "SC_PLAYERS_DFDC_LIST_RES",
	}
	DFDCMSG_value = map[string]int32{
		"UNKNOW_DFDC":              0,
		"CS_ENTER_GAME_DFDC_REQ":   13001,
		"SC_ENTER_GAME_DFDC_RES":   13002,
		"CS_LEAVE_GAME_DFDC_REQ":   13003,
		"SC_LEAVE_GAME_DFDC_RES":   13004,
		"CS_START_DFDC_REQ":        13008,
		"SC_START_DFDC_RES":        13009,
		"SC_UPDATE_DFDC_BONUS":     13010,
		"CS_PLAYERS_DFDC_LIST_REQ": 13015,
		"SC_PLAYERS_DFDC_LIST_RES": 13016,
	}
)

func (x DFDCMSG) Enum() *DFDCMSG {
	p := new(DFDCMSG)
	*p = x
	return p
}

func (x DFDCMSG) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DFDCMSG) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_dfdc_proto_enumTypes[0].Descriptor()
}

func (DFDCMSG) Type() protoreflect.EnumType {
	return &file_protobuf_dfdc_proto_enumTypes[0]
}

func (x DFDCMSG) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DFDCMSG.Descriptor instead.
func (DFDCMSG) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_dfdc_proto_rawDescGZIP(), []int{0}
}

// 游戏1 图案枚举
type DFDCID int32

const (
	DFDCID_DFDCUnknow DFDCID = 0
	DFDCID_DFDC1      DFDCID = 1  // 福字
	DFDCID_DFDC2      DFDCID = 2  // 铜锣
	DFDCID_DFDC3      DFDCID = 3  // 金鸟
	DFDCID_DFDC4      DFDCID = 4  // 帆船
	DFDCID_DFDC5      DFDCID = 5  // 金龟
	DFDCID_DFDC6      DFDCID = 6  // 元宝
	DFDCID_DFDC7      DFDCID = 7  // 通宝
	DFDCID_DFDC8      DFDCID = 8  // A
	DFDCID_DFDC9      DFDCID = 9  // K
	DFDCID_DFDC10     DFDCID = 10 // Q
	DFDCID_DFDC11     DFDCID = 11 // J
	DFDCID_DFDC12     DFDCID = 12 // 10
	DFDCID_DFDC13     DFDCID = 13 // 9
)

// Enum value maps for DFDCID.
var (
	DFDCID_name = map[int32]string{
		0:  "DFDCUnknow",
		1:  "DFDC1",
		2:  "DFDC2",
		3:  "DFDC3",
		4:  "DFDC4",
		5:  "DFDC5",
		6:  "DFDC6",
		7:  "DFDC7",
		8:  "DFDC8",
		9:  "DFDC9",
		10: "DFDC10",
		11: "DFDC11",
		12: "DFDC12",
		13: "DFDC13",
	}
	DFDCID_value = map[string]int32{
		"DFDCUnknow": 0,
		"DFDC1":      1,
		"DFDC2":      2,
		"DFDC3":      3,
		"DFDC4":      4,
		"DFDC5":      5,
		"DFDC6":      6,
		"DFDC7":      7,
		"DFDC8":      8,
		"DFDC9":      9,
		"DFDC10":     10,
		"DFDC11":     11,
		"DFDC12":     12,
		"DFDC13":     13,
	}
)

func (x DFDCID) Enum() *DFDCID {
	p := new(DFDCID)
	*p = x
	return p
}

func (x DFDCID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DFDCID) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_dfdc_proto_enumTypes[1].Descriptor()
}

func (DFDCID) Type() protoreflect.EnumType {
	return &file_protobuf_dfdc_proto_enumTypes[1]
}

func (x DFDCID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DFDCID.Descriptor instead.
func (DFDCID) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_dfdc_proto_rawDescGZIP(), []int{1}
}

// 请求进入房间
type ENTER_GAME_DFDC_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"` //
	RoomID    uint32 `protobuf:"varint,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"`       // 房间ID
}

func (x *ENTER_GAME_DFDC_REQ) Reset() {
	*x = ENTER_GAME_DFDC_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_dfdc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ENTER_GAME_DFDC_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ENTER_GAME_DFDC_REQ) ProtoMessage() {}

func (x *ENTER_GAME_DFDC_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_dfdc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ENTER_GAME_DFDC_REQ.ProtoReflect.Descriptor instead.
func (*ENTER_GAME_DFDC_REQ) Descriptor() ([]byte, []int) {
	return file_protobuf_dfdc_proto_rawDescGZIP(), []int{0}
}

func (x *ENTER_GAME_DFDC_REQ) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *ENTER_GAME_DFDC_REQ) GetRoomID() uint32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

type ENTER_GAME_DFDC_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID   uint32                                   `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`                                                                                        // 房间ID
	Basics   int64                                    `protobuf:"varint,2,opt,name=Basics,proto3" json:"Basics,omitempty"`                                                                                        // 基础金额
	Bonus    map[int32]int64                          `protobuf:"bytes,3,rep,name=Bonus,proto3" json:"Bonus,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // key 等级  val 奖池
	LastBet  int64                                    `protobuf:"varint,4,opt,name=LastBet,proto3" json:"LastBet,omitempty"`                                                                                      // 最后一次压住
	Bets     []uint64                                 `protobuf:"varint,5,rep,packed,name=Bets,proto3" json:"Bets,omitempty"`                                                                                     // 可以选择的押注金额
	Ratio    map[int32]*ENTER_GAME_DFDC_RES_DfdcRatio `protobuf:"bytes,6,rep,name=Ratio,proto3" json:"Ratio,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`  //  图案连续赔率
	FeeCount int32                                    `protobuf:"varint,8,opt,name=FeeCount,proto3" json:"FeeCount,omitempty"`                                                                                    // 免费次数
}

func (x *ENTER_GAME_DFDC_RES) Reset() {
	*x = ENTER_GAME_DFDC_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_dfdc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ENTER_GAME_DFDC_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ENTER_GAME_DFDC_RES) ProtoMessage() {}

func (x *ENTER_GAME_DFDC_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_dfdc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ENTER_GAME_DFDC_RES.ProtoReflect.Descriptor instead.
func (*ENTER_GAME_DFDC_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_dfdc_proto_rawDescGZIP(), []int{1}
}

func (x *ENTER_GAME_DFDC_RES) GetRoomID() uint32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *ENTER_GAME_DFDC_RES) GetBasics() int64 {
	if x != nil {
		return x.Basics
	}
	return 0
}

func (x *ENTER_GAME_DFDC_RES) GetBonus() map[int32]int64 {
	if x != nil {
		return x.Bonus
	}
	return nil
}

func (x *ENTER_GAME_DFDC_RES) GetLastBet() int64 {
	if x != nil {
		return x.LastBet
	}
	return 0
}

func (x *ENTER_GAME_DFDC_RES) GetBets() []uint64 {
	if x != nil {
		return x.Bets
	}
	return nil
}

func (x *ENTER_GAME_DFDC_RES) GetRatio() map[int32]*ENTER_GAME_DFDC_RES_DfdcRatio {
	if x != nil {
		return x.Ratio
	}
	return nil
}

func (x *ENTER_GAME_DFDC_RES) GetFeeCount() int32 {
	if x != nil {
		return x.FeeCount
	}
	return 0
}

// 请求退出房间
type LEAVE_GAME_DFDC_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"` //
	RoomID    uint32 `protobuf:"varint,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"`       // 房间ID
}

func (x *LEAVE_GAME_DFDC_REQ) Reset() {
	*x = LEAVE_GAME_DFDC_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_dfdc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LEAVE_GAME_DFDC_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LEAVE_GAME_DFDC_REQ) ProtoMessage() {}

func (x *LEAVE_GAME_DFDC_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_dfdc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LEAVE_GAME_DFDC_REQ.ProtoReflect.Descriptor instead.
func (*LEAVE_GAME_DFDC_REQ) Descriptor() ([]byte, []int) {
	return file_protobuf_dfdc_proto_rawDescGZIP(), []int{2}
}

func (x *LEAVE_GAME_DFDC_REQ) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *LEAVE_GAME_DFDC_REQ) GetRoomID() uint32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

type LEAVE_GAME_DFDC_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    uint32 `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`       // 0.可以退出  1.不能退出房间
	RoomID uint32 `protobuf:"varint,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"` // 房间ID
}

func (x *LEAVE_GAME_DFDC_RES) Reset() {
	*x = LEAVE_GAME_DFDC_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_dfdc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LEAVE_GAME_DFDC_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LEAVE_GAME_DFDC_RES) ProtoMessage() {}

func (x *LEAVE_GAME_DFDC_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_dfdc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LEAVE_GAME_DFDC_RES.ProtoReflect.Descriptor instead.
func (*LEAVE_GAME_DFDC_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_dfdc_proto_rawDescGZIP(), []int{3}
}

func (x *LEAVE_GAME_DFDC_RES) GetRet() uint32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *LEAVE_GAME_DFDC_RES) GetRoomID() uint32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

////////////////////////////////////////////// 游戏 /////////////////////////////////////////////
// 请求开始游戏1
type START_DFDC_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bet uint64 `protobuf:"varint,1,opt,name=Bet,proto3" json:"Bet,omitempty"`
}

func (x *START_DFDC_REQ) Reset() {
	*x = START_DFDC_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_dfdc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *START_DFDC_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*START_DFDC_REQ) ProtoMessage() {}

func (x *START_DFDC_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_dfdc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use START_DFDC_REQ.ProtoReflect.Descriptor instead.
func (*START_DFDC_REQ) Descriptor() ([]byte, []int) {
	return file_protobuf_dfdc_proto_rawDescGZIP(), []int{4}
}

func (x *START_DFDC_REQ) GetBet() uint64 {
	if x != nil {
		return x.Bet
	}
	return 0
}

type START_DFDC_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret         uint64          `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`                                                                                              // 0成功
	PictureList []int32         `protobuf:"varint,2,rep,packed,name=PictureList,proto3" json:"PictureList,omitempty"`                                                                       // 图形列表( [0-14] 即15个图形)
	Bonus       map[int32]int64 `protobuf:"bytes,3,rep,name=Bonus,proto3" json:"Bonus,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 水池盈利 (key级别 vale盈利)
	Money       int64           `protobuf:"varint,4,opt,name=Money,proto3" json:"Money,omitempty"`                                                                                          // 身上的钱
	TotalOdds   int64           `protobuf:"varint,5,opt,name=TotalOdds,proto3" json:"TotalOdds,omitempty"`                                                                                  // 总赔率
	FreeCount   int64           `protobuf:"varint,6,opt,name=FreeCount,proto3" json:"FreeCount,omitempty"`                                                                                  // 获得免费次数
	Shows       []*DFDCPosition `protobuf:"bytes,7,rep,name=Shows,proto3" json:"Shows,omitempty"`                                                                                           // 中奖需要展示的坐标
}

func (x *START_DFDC_RES) Reset() {
	*x = START_DFDC_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_dfdc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *START_DFDC_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*START_DFDC_RES) ProtoMessage() {}

func (x *START_DFDC_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_dfdc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use START_DFDC_RES.ProtoReflect.Descriptor instead.
func (*START_DFDC_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_dfdc_proto_rawDescGZIP(), []int{5}
}

func (x *START_DFDC_RES) GetRet() uint64 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *START_DFDC_RES) GetPictureList() []int32 {
	if x != nil {
		return x.PictureList
	}
	return nil
}

func (x *START_DFDC_RES) GetBonus() map[int32]int64 {
	if x != nil {
		return x.Bonus
	}
	return nil
}

func (x *START_DFDC_RES) GetMoney() int64 {
	if x != nil {
		return x.Money
	}
	return 0
}

func (x *START_DFDC_RES) GetTotalOdds() int64 {
	if x != nil {
		return x.TotalOdds
	}
	return 0
}

func (x *START_DFDC_RES) GetFreeCount() int64 {
	if x != nil {
		return x.FreeCount
	}
	return 0
}

func (x *START_DFDC_RES) GetShows() []*DFDCPosition {
	if x != nil {
		return x.Shows
	}
	return nil
}

type DFDCPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Px int32 `protobuf:"varint,1,opt,name=px,proto3" json:"px,omitempty"`
	Py int32 `protobuf:"varint,2,opt,name=py,proto3" json:"py,omitempty"`
}

func (x *DFDCPosition) Reset() {
	*x = DFDCPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_dfdc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DFDCPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DFDCPosition) ProtoMessage() {}

func (x *DFDCPosition) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_dfdc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DFDCPosition.ProtoReflect.Descriptor instead.
func (*DFDCPosition) Descriptor() ([]byte, []int) {
	return file_protobuf_dfdc_proto_rawDescGZIP(), []int{6}
}

func (x *DFDCPosition) GetPx() int32 {
	if x != nil {
		return x.Px
	}
	return 0
}

func (x *DFDCPosition) GetPy() int32 {
	if x != nil {
		return x.Py
	}
	return 0
}

// 通知更新奖金池
type UPDATE_DFDC_BONUS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bonus map[int32]int64 `protobuf:"bytes,1,rep,name=Bonus,proto3" json:"Bonus,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // key 等级  val 奖池
}

func (x *UPDATE_DFDC_BONUS) Reset() {
	*x = UPDATE_DFDC_BONUS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_dfdc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UPDATE_DFDC_BONUS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UPDATE_DFDC_BONUS) ProtoMessage() {}

func (x *UPDATE_DFDC_BONUS) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_dfdc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UPDATE_DFDC_BONUS.ProtoReflect.Descriptor instead.
func (*UPDATE_DFDC_BONUS) Descriptor() ([]byte, []int) {
	return file_protobuf_dfdc_proto_rawDescGZIP(), []int{7}
}

func (x *UPDATE_DFDC_BONUS) GetBonus() map[int32]int64 {
	if x != nil {
		return x.Bonus
	}
	return nil
}

// 请求dfdc玩家列表
type PLAYERS_DFDC_LIST_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*AccountStorageData `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"` // 房间捏所有的玩家
}

func (x *PLAYERS_DFDC_LIST_RES) Reset() {
	*x = PLAYERS_DFDC_LIST_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_dfdc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PLAYERS_DFDC_LIST_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PLAYERS_DFDC_LIST_RES) ProtoMessage() {}

func (x *PLAYERS_DFDC_LIST_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_dfdc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PLAYERS_DFDC_LIST_RES.ProtoReflect.Descriptor instead.
func (*PLAYERS_DFDC_LIST_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_dfdc_proto_rawDescGZIP(), []int{8}
}

func (x *PLAYERS_DFDC_LIST_RES) GetPlayers() []*AccountStorageData {
	if x != nil {
		return x.Players
	}
	return nil
}

type ENTER_GAME_DFDC_RES_DfdcRatio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     DFDCID `protobuf:"varint,1,opt,name=ID,proto3,enum=protomsg.DFDCID" json:"ID,omitempty"`
	Same_3 int32  `protobuf:"varint,4,opt,name=Same_3,json=Same3,proto3" json:"Same_3,omitempty"` // 三连赔率
	Same_4 int32  `protobuf:"varint,5,opt,name=Same_4,json=Same4,proto3" json:"Same_4,omitempty"` // 四连赔率
	Same_5 int32  `protobuf:"varint,6,opt,name=Same_5,json=Same5,proto3" json:"Same_5,omitempty"` // 五连赔率
}

func (x *ENTER_GAME_DFDC_RES_DfdcRatio) Reset() {
	*x = ENTER_GAME_DFDC_RES_DfdcRatio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_dfdc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ENTER_GAME_DFDC_RES_DfdcRatio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ENTER_GAME_DFDC_RES_DfdcRatio) ProtoMessage() {}

func (x *ENTER_GAME_DFDC_RES_DfdcRatio) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_dfdc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ENTER_GAME_DFDC_RES_DfdcRatio.ProtoReflect.Descriptor instead.
func (*ENTER_GAME_DFDC_RES_DfdcRatio) Descriptor() ([]byte, []int) {
	return file_protobuf_dfdc_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ENTER_GAME_DFDC_RES_DfdcRatio) GetID() DFDCID {
	if x != nil {
		return x.ID
	}
	return DFDCID_DFDCUnknow
}

func (x *ENTER_GAME_DFDC_RES_DfdcRatio) GetSame_3() int32 {
	if x != nil {
		return x.Same_3
	}
	return 0
}

func (x *ENTER_GAME_DFDC_RES_DfdcRatio) GetSame_4() int32 {
	if x != nil {
		return x.Same_4
	}
	return 0
}

func (x *ENTER_GAME_DFDC_RES_DfdcRatio) GetSame_5() int32 {
	if x != nil {
		return x.Same_5
	}
	return 0
}

var File_protobuf_dfdc_proto protoreflect.FileDescriptor

var file_protobuf_dfdc_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x66, 0x64, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x1a,
	0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x13, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41,
	0x4d, 0x45, 0x5f, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x22, 0xa0, 0x04, 0x0a, 0x13, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45,
	0x5f, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x73, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x42, 0x61, 0x73, 0x69, 0x63, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x6d, 0x73, 0x67, 0x2e, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x44,
	0x46, 0x44, 0x43, 0x5f, 0x52, 0x45, 0x53, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x61, 0x73,
	0x74, 0x42, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4c, 0x61, 0x73, 0x74,
	0x42, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x04, 0x42, 0x65, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73,
	0x67, 0x2e, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x44, 0x46, 0x44,
	0x43, 0x5f, 0x52, 0x45, 0x53, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x46, 0x65, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x72, 0x0a, 0x09, 0x44, 0x66, 0x64, 0x63, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x12, 0x20, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x44, 0x46, 0x44, 0x43, 0x49, 0x44, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x15, 0x0a, 0x06, 0x53, 0x61, 0x6d, 0x65, 0x5f, 0x33, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x53, 0x61, 0x6d, 0x65, 0x33, 0x12, 0x15, 0x0a, 0x06, 0x53, 0x61, 0x6d,
	0x65, 0x5f, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x61, 0x6d, 0x65, 0x34,
	0x12, 0x15, 0x0a, 0x06, 0x53, 0x61, 0x6d, 0x65, 0x5f, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x53, 0x61, 0x6d, 0x65, 0x35, 0x1a, 0x38, 0x0a, 0x0a, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x61, 0x0a, 0x0a, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x4e, 0x54, 0x45,
	0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x52, 0x45, 0x53, 0x2e,
	0x44, 0x66, 0x64, 0x63, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x4b, 0x0a, 0x13, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x47, 0x41,
	0x4d, 0x45, 0x5f, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x22, 0x3f, 0x0a, 0x13, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f,
	0x44, 0x46, 0x44, 0x43, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x44, 0x22, 0x22, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x44, 0x46, 0x44, 0x43,
	0x5f, 0x52, 0x45, 0x51, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x42, 0x65, 0x74, 0x22, 0xba, 0x02, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x5f, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0b, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a,
	0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x44, 0x46,
	0x44, 0x43, 0x5f, 0x52, 0x45, 0x53, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x64, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x64, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x53, 0x68,
	0x6f, 0x77, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x53, 0x68, 0x6f, 0x77, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x2f, 0x0a, 0x0d, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x70, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x70, 0x79, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f,
	0x44, 0x46, 0x44, 0x43, 0x5f, 0x42, 0x4f, 0x4e, 0x55, 0x53, 0x12, 0x3c, 0x0a, 0x05, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x46, 0x44, 0x43,
	0x5f, 0x42, 0x4f, 0x4e, 0x55, 0x53, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x4f, 0x0a, 0x15, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x53, 0x5f, 0x44, 0x46,
	0x44, 0x43, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x36, 0x0a, 0x07, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x2a, 0x97, 0x02, 0x0a, 0x07, 0x44, 0x46, 0x44, 0x43, 0x4d, 0x53, 0x47, 0x12,
	0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x5f, 0x44, 0x46, 0x44, 0x43, 0x10, 0x00,
	0x12, 0x1b, 0x0a, 0x16, 0x43, 0x53, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d,
	0x45, 0x5f, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xc9, 0x65, 0x12, 0x1b, 0x0a,
	0x16, 0x53, 0x43, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x44,
	0x46, 0x44, 0x43, 0x5f, 0x52, 0x45, 0x53, 0x10, 0xca, 0x65, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x53,
	0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x44, 0x46, 0x44, 0x43,
	0x5f, 0x52, 0x45, 0x51, 0x10, 0xcb, 0x65, 0x12, 0x1b, 0x0a, 0x16, 0x53, 0x43, 0x5f, 0x4c, 0x45,
	0x41, 0x56, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x52, 0x45,
	0x53, 0x10, 0xcc, 0x65, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x5f, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xd0, 0x65, 0x12, 0x16, 0x0a, 0x11,
	0x53, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x52, 0x45,
	0x53, 0x10, 0xd1, 0x65, 0x12, 0x19, 0x0a, 0x14, 0x53, 0x43, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x5f, 0x44, 0x46, 0x44, 0x43, 0x5f, 0x42, 0x4f, 0x4e, 0x55, 0x53, 0x10, 0xd2, 0x65, 0x12,
	0x1d, 0x0a, 0x18, 0x43, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x53, 0x5f, 0x44, 0x46,
	0x44, 0x43, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xd7, 0x65, 0x12, 0x1d,
	0x0a, 0x18, 0x53, 0x43, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x53, 0x5f, 0x44, 0x46, 0x44,
	0x43, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x10, 0xd8, 0x65, 0x2a, 0xab, 0x01,
	0x0a, 0x06, 0x44, 0x46, 0x44, 0x43, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x46, 0x44, 0x43,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x46, 0x44, 0x43,
	0x31, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x46, 0x44, 0x43, 0x32, 0x10, 0x02, 0x12, 0x09,
	0x0a, 0x05, 0x44, 0x46, 0x44, 0x43, 0x33, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x46, 0x44,
	0x43, 0x34, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x46, 0x44, 0x43, 0x35, 0x10, 0x05, 0x12,
	0x09, 0x0a, 0x05, 0x44, 0x46, 0x44, 0x43, 0x36, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x46,
	0x44, 0x43, 0x37, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x46, 0x44, 0x43, 0x38, 0x10, 0x08,
	0x12, 0x09, 0x0a, 0x05, 0x44, 0x46, 0x44, 0x43, 0x39, 0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06, 0x44,
	0x46, 0x44, 0x43, 0x31, 0x30, 0x10, 0x0a, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x46, 0x44, 0x43, 0x31,
	0x31, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x46, 0x44, 0x43, 0x31, 0x32, 0x10, 0x0c, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x46, 0x44, 0x43, 0x31, 0x33, 0x10, 0x0d, 0x42, 0x0f, 0x5a, 0x0d, 0x72,
	0x6f, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_dfdc_proto_rawDescOnce sync.Once
	file_protobuf_dfdc_proto_rawDescData = file_protobuf_dfdc_proto_rawDesc
)

func file_protobuf_dfdc_proto_rawDescGZIP() []byte {
	file_protobuf_dfdc_proto_rawDescOnce.Do(func() {
		file_protobuf_dfdc_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_dfdc_proto_rawDescData)
	})
	return file_protobuf_dfdc_proto_rawDescData
}

var file_protobuf_dfdc_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protobuf_dfdc_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_protobuf_dfdc_proto_goTypes = []interface{}{
	(DFDCMSG)(0),                          // 0: protomsg.DFDCMSG
	(DFDCID)(0),                           // 1: protomsg.DFDCID
	(*ENTER_GAME_DFDC_REQ)(nil),           // 2: protomsg.ENTER_GAME_DFDC_REQ
	(*ENTER_GAME_DFDC_RES)(nil),           // 3: protomsg.ENTER_GAME_DFDC_RES
	(*LEAVE_GAME_DFDC_REQ)(nil),           // 4: protomsg.LEAVE_GAME_DFDC_REQ
	(*LEAVE_GAME_DFDC_RES)(nil),           // 5: protomsg.LEAVE_GAME_DFDC_RES
	(*START_DFDC_REQ)(nil),                // 6: protomsg.START_DFDC_REQ
	(*START_DFDC_RES)(nil),                // 7: protomsg.START_DFDC_RES
	(*DFDCPosition)(nil),                  // 8: protomsg.DFDC_position
	(*UPDATE_DFDC_BONUS)(nil),             // 9: protomsg.UPDATE_DFDC_BONUS
	(*PLAYERS_DFDC_LIST_RES)(nil),         // 10: protomsg.PLAYERS_DFDC_LIST_RES
	(*ENTER_GAME_DFDC_RES_DfdcRatio)(nil), // 11: protomsg.ENTER_GAME_DFDC_RES.DfdcRatio
	nil,                                   // 12: protomsg.ENTER_GAME_DFDC_RES.BonusEntry
	nil,                                   // 13: protomsg.ENTER_GAME_DFDC_RES.RatioEntry
	nil,                                   // 14: protomsg.START_DFDC_RES.BonusEntry
	nil,                                   // 15: protomsg.UPDATE_DFDC_BONUS.BonusEntry
	(*AccountStorageData)(nil),            // 16: protomsg.AccountStorageData
}
var file_protobuf_dfdc_proto_depIdxs = []int32{
	12, // 0: protomsg.ENTER_GAME_DFDC_RES.Bonus:type_name -> protomsg.ENTER_GAME_DFDC_RES.BonusEntry
	13, // 1: protomsg.ENTER_GAME_DFDC_RES.Ratio:type_name -> protomsg.ENTER_GAME_DFDC_RES.RatioEntry
	14, // 2: protomsg.START_DFDC_RES.Bonus:type_name -> protomsg.START_DFDC_RES.BonusEntry
	8,  // 3: protomsg.START_DFDC_RES.Shows:type_name -> protomsg.DFDC_position
	15, // 4: protomsg.UPDATE_DFDC_BONUS.Bonus:type_name -> protomsg.UPDATE_DFDC_BONUS.BonusEntry
	16, // 5: protomsg.PLAYERS_DFDC_LIST_RES.players:type_name -> protomsg.AccountStorageData
	1,  // 6: protomsg.ENTER_GAME_DFDC_RES.DfdcRatio.ID:type_name -> protomsg.DFDCID
	11, // 7: protomsg.ENTER_GAME_DFDC_RES.RatioEntry.value:type_name -> protomsg.ENTER_GAME_DFDC_RES.DfdcRatio
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_protobuf_dfdc_proto_init() }
func file_protobuf_dfdc_proto_init() {
	if File_protobuf_dfdc_proto != nil {
		return
	}
	file_protobuf_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protobuf_dfdc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ENTER_GAME_DFDC_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_dfdc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ENTER_GAME_DFDC_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_dfdc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LEAVE_GAME_DFDC_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_dfdc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LEAVE_GAME_DFDC_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_dfdc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*START_DFDC_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_dfdc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*START_DFDC_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_dfdc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DFDCPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_dfdc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UPDATE_DFDC_BONUS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_dfdc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PLAYERS_DFDC_LIST_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_dfdc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ENTER_GAME_DFDC_RES_DfdcRatio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_dfdc_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_dfdc_proto_goTypes,
		DependencyIndexes: file_protobuf_dfdc_proto_depIdxs,
		EnumInfos:         file_protobuf_dfdc_proto_enumTypes,
		MessageInfos:      file_protobuf_dfdc_proto_msgTypes,
	}.Build()
	File_protobuf_dfdc_proto = out.File
	file_protobuf_dfdc_proto_rawDesc = nil
	file_protobuf_dfdc_proto_goTypes = nil
	file_protobuf_dfdc_proto_depIdxs = nil
}
