// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/dfdc.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 网络消息
type DFDCMSG int32

const (
	DFDCMSG_UNKNOW_DFDC              DFDCMSG = 0
	DFDCMSG_CS_ENTER_GAME_DFDC_REQ   DFDCMSG = 30001
	DFDCMSG_SC_ENTER_GAME_DFDC_RES   DFDCMSG = 30002
	DFDCMSG_CS_LEAVE_GAME_DFDC_REQ   DFDCMSG = 30003
	DFDCMSG_SC_LEAVE_GAME_DFDC_RES   DFDCMSG = 30004
	DFDCMSG_CS_START_DFDC_REQ        DFDCMSG = 30008
	DFDCMSG_SC_START_DFDC_RES        DFDCMSG = 30009
	DFDCMSG_SC_UPDATE_DFDC_BONUS     DFDCMSG = 30010
	DFDCMSG_CS_PLAYERS_DFDC_LIST_REQ DFDCMSG = 30015
	DFDCMSG_SC_PLAYERS_DFDC_LIST_RES DFDCMSG = 30016
)

var DFDCMSG_name = map[int32]string{
	0:     "UNKNOW_DFDC",
	30001: "CS_ENTER_GAME_DFDC_REQ",
	30002: "SC_ENTER_GAME_DFDC_RES",
	30003: "CS_LEAVE_GAME_DFDC_REQ",
	30004: "SC_LEAVE_GAME_DFDC_RES",
	30008: "CS_START_DFDC_REQ",
	30009: "SC_START_DFDC_RES",
	30010: "SC_UPDATE_DFDC_BONUS",
	30015: "CS_PLAYERS_DFDC_LIST_REQ",
	30016: "SC_PLAYERS_DFDC_LIST_RES",
}
var DFDCMSG_value = map[string]int32{
	"UNKNOW_DFDC":              0,
	"CS_ENTER_GAME_DFDC_REQ":   30001,
	"SC_ENTER_GAME_DFDC_RES":   30002,
	"CS_LEAVE_GAME_DFDC_REQ":   30003,
	"SC_LEAVE_GAME_DFDC_RES":   30004,
	"CS_START_DFDC_REQ":        30008,
	"SC_START_DFDC_RES":        30009,
	"SC_UPDATE_DFDC_BONUS":     30010,
	"CS_PLAYERS_DFDC_LIST_REQ": 30015,
	"SC_PLAYERS_DFDC_LIST_RES": 30016,
}

func (x DFDCMSG) String() string {
	return proto.EnumName(DFDCMSG_name, int32(x))
}
func (DFDCMSG) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// 游戏1 图案枚举
type DFDCID int32

const (
	DFDCID_DFDCUnknow DFDCID = 0
	DFDCID_DFDC1      DFDCID = 1
	DFDCID_DFDC2      DFDCID = 2
	DFDCID_DFDC3      DFDCID = 3
	DFDCID_DFDC4      DFDCID = 4
	DFDCID_DFDC5      DFDCID = 5
	DFDCID_DFDC6      DFDCID = 6
	DFDCID_DFDC7      DFDCID = 7
	DFDCID_DFDC8      DFDCID = 8
	DFDCID_DFDC9      DFDCID = 9
	DFDCID_DFDC10     DFDCID = 10
	DFDCID_DFDC11     DFDCID = 11
	DFDCID_DFDC12     DFDCID = 12
	DFDCID_DFDC13     DFDCID = 13
)

var DFDCID_name = map[int32]string{
	0:  "DFDCUnknow",
	1:  "DFDC1",
	2:  "DFDC2",
	3:  "DFDC3",
	4:  "DFDC4",
	5:  "DFDC5",
	6:  "DFDC6",
	7:  "DFDC7",
	8:  "DFDC8",
	9:  "DFDC9",
	10: "DFDC10",
	11: "DFDC11",
	12: "DFDC12",
	13: "DFDC13",
}
var DFDCID_value = map[string]int32{
	"DFDCUnknow": 0,
	"DFDC1":      1,
	"DFDC2":      2,
	"DFDC3":      3,
	"DFDC4":      4,
	"DFDC5":      5,
	"DFDC6":      6,
	"DFDC7":      7,
	"DFDC8":      8,
	"DFDC9":      9,
	"DFDC10":     10,
	"DFDC11":     11,
	"DFDC12":     12,
	"DFDC13":     13,
}

func (x DFDCID) String() string {
	return proto.EnumName(DFDCID_name, int32(x))
}
func (DFDCID) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

// 请求进入房间
type ENTER_GAME_DFDC_REQ struct {
	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	RoomID    uint32 `protobuf:"varint,2,opt,name=RoomID" json:"RoomID,omitempty"`
}

func (m *ENTER_GAME_DFDC_REQ) Reset()                    { *m = ENTER_GAME_DFDC_REQ{} }
func (m *ENTER_GAME_DFDC_REQ) String() string            { return proto.CompactTextString(m) }
func (*ENTER_GAME_DFDC_REQ) ProtoMessage()               {}
func (*ENTER_GAME_DFDC_REQ) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ENTER_GAME_DFDC_REQ) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *ENTER_GAME_DFDC_REQ) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type ENTER_GAME_DFDC_RES struct {
	RoomID   uint32                                   `protobuf:"varint,1,opt,name=RoomID" json:"RoomID,omitempty"`
	Basics   int64                                    `protobuf:"varint,2,opt,name=Basics" json:"Basics,omitempty"`
	Bonus    map[int32]int64                          `protobuf:"bytes,3,rep,name=Bonus" json:"Bonus,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	LastBet  int64                                    `protobuf:"varint,4,opt,name=LastBet" json:"LastBet,omitempty"`
	Bets     []uint64                                 `protobuf:"varint,5,rep,packed,name=Bets" json:"Bets,omitempty"`
	Ratio    map[int32]*ENTER_GAME_DFDC_RES_DfdcRatio `protobuf:"bytes,6,rep,name=Ratio" json:"Ratio,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	FeeCount int32                                    `protobuf:"varint,8,opt,name=FeeCount" json:"FeeCount,omitempty"`
}

func (m *ENTER_GAME_DFDC_RES) Reset()                    { *m = ENTER_GAME_DFDC_RES{} }
func (m *ENTER_GAME_DFDC_RES) String() string            { return proto.CompactTextString(m) }
func (*ENTER_GAME_DFDC_RES) ProtoMessage()               {}
func (*ENTER_GAME_DFDC_RES) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ENTER_GAME_DFDC_RES) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *ENTER_GAME_DFDC_RES) GetBasics() int64 {
	if m != nil {
		return m.Basics
	}
	return 0
}

func (m *ENTER_GAME_DFDC_RES) GetBonus() map[int32]int64 {
	if m != nil {
		return m.Bonus
	}
	return nil
}

func (m *ENTER_GAME_DFDC_RES) GetLastBet() int64 {
	if m != nil {
		return m.LastBet
	}
	return 0
}

func (m *ENTER_GAME_DFDC_RES) GetBets() []uint64 {
	if m != nil {
		return m.Bets
	}
	return nil
}

func (m *ENTER_GAME_DFDC_RES) GetRatio() map[int32]*ENTER_GAME_DFDC_RES_DfdcRatio {
	if m != nil {
		return m.Ratio
	}
	return nil
}

func (m *ENTER_GAME_DFDC_RES) GetFeeCount() int32 {
	if m != nil {
		return m.FeeCount
	}
	return 0
}

type ENTER_GAME_DFDC_RES_DfdcRatio struct {
	ID     DFDCID `protobuf:"varint,1,opt,name=ID,enum=protomsg.DFDCID" json:"ID,omitempty"`
	Same_3 int32  `protobuf:"varint,4,opt,name=Same_3,json=Same3" json:"Same_3,omitempty"`
	Same_4 int32  `protobuf:"varint,5,opt,name=Same_4,json=Same4" json:"Same_4,omitempty"`
	Same_5 int32  `protobuf:"varint,6,opt,name=Same_5,json=Same5" json:"Same_5,omitempty"`
}

func (m *ENTER_GAME_DFDC_RES_DfdcRatio) Reset()         { *m = ENTER_GAME_DFDC_RES_DfdcRatio{} }
func (m *ENTER_GAME_DFDC_RES_DfdcRatio) String() string { return proto.CompactTextString(m) }
func (*ENTER_GAME_DFDC_RES_DfdcRatio) ProtoMessage()    {}
func (*ENTER_GAME_DFDC_RES_DfdcRatio) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 0}
}

func (m *ENTER_GAME_DFDC_RES_DfdcRatio) GetID() DFDCID {
	if m != nil {
		return m.ID
	}
	return DFDCID_DFDCUnknow
}

func (m *ENTER_GAME_DFDC_RES_DfdcRatio) GetSame_3() int32 {
	if m != nil {
		return m.Same_3
	}
	return 0
}

func (m *ENTER_GAME_DFDC_RES_DfdcRatio) GetSame_4() int32 {
	if m != nil {
		return m.Same_4
	}
	return 0
}

func (m *ENTER_GAME_DFDC_RES_DfdcRatio) GetSame_5() int32 {
	if m != nil {
		return m.Same_5
	}
	return 0
}

// 请求退出房间
type LEAVE_GAME_DFDC_REQ struct {
	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	RoomID    uint32 `protobuf:"varint,2,opt,name=RoomID" json:"RoomID,omitempty"`
}

func (m *LEAVE_GAME_DFDC_REQ) Reset()                    { *m = LEAVE_GAME_DFDC_REQ{} }
func (m *LEAVE_GAME_DFDC_REQ) String() string            { return proto.CompactTextString(m) }
func (*LEAVE_GAME_DFDC_REQ) ProtoMessage()               {}
func (*LEAVE_GAME_DFDC_REQ) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *LEAVE_GAME_DFDC_REQ) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *LEAVE_GAME_DFDC_REQ) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type LEAVE_GAME_DFDC_RES struct {
	Ret    uint32 `protobuf:"varint,1,opt,name=Ret" json:"Ret,omitempty"`
	RoomID uint32 `protobuf:"varint,2,opt,name=RoomID" json:"RoomID,omitempty"`
}

func (m *LEAVE_GAME_DFDC_RES) Reset()                    { *m = LEAVE_GAME_DFDC_RES{} }
func (m *LEAVE_GAME_DFDC_RES) String() string            { return proto.CompactTextString(m) }
func (*LEAVE_GAME_DFDC_RES) ProtoMessage()               {}
func (*LEAVE_GAME_DFDC_RES) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *LEAVE_GAME_DFDC_RES) GetRet() uint32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *LEAVE_GAME_DFDC_RES) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

// //////////////////////////////////////////// 游戏 /////////////////////////////////////////////
// 请求开始游戏1
type START_DFDC_REQ struct {
	Bet uint64 `protobuf:"varint,1,opt,name=Bet" json:"Bet,omitempty"`
}

func (m *START_DFDC_REQ) Reset()                    { *m = START_DFDC_REQ{} }
func (m *START_DFDC_REQ) String() string            { return proto.CompactTextString(m) }
func (*START_DFDC_REQ) ProtoMessage()               {}
func (*START_DFDC_REQ) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *START_DFDC_REQ) GetBet() uint64 {
	if m != nil {
		return m.Bet
	}
	return 0
}

type START_DFDC_RES struct {
	Ret         uint64          `protobuf:"varint,1,opt,name=Ret" json:"Ret,omitempty"`
	PictureList []int32         `protobuf:"varint,4,rep,packed,name=PictureList" json:"PictureList,omitempty"`
	Bonus       map[int32]int64 `protobuf:"bytes,5,rep,name=Bonus" json:"Bonus,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Money       int64           `protobuf:"varint,6,opt,name=Money" json:"Money,omitempty"`
	FreeCount   int64           `protobuf:"varint,7,opt,name=FreeCount" json:"FreeCount,omitempty"`
	Shows       []*DFDCPosition `protobuf:"bytes,8,rep,name=Shows" json:"Shows,omitempty"`
}

func (m *START_DFDC_RES) Reset()                    { *m = START_DFDC_RES{} }
func (m *START_DFDC_RES) String() string            { return proto.CompactTextString(m) }
func (*START_DFDC_RES) ProtoMessage()               {}
func (*START_DFDC_RES) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *START_DFDC_RES) GetRet() uint64 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *START_DFDC_RES) GetPictureList() []int32 {
	if m != nil {
		return m.PictureList
	}
	return nil
}

func (m *START_DFDC_RES) GetBonus() map[int32]int64 {
	if m != nil {
		return m.Bonus
	}
	return nil
}

func (m *START_DFDC_RES) GetMoney() int64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *START_DFDC_RES) GetFreeCount() int64 {
	if m != nil {
		return m.FreeCount
	}
	return 0
}

func (m *START_DFDC_RES) GetShows() []*DFDCPosition {
	if m != nil {
		return m.Shows
	}
	return nil
}

type DFDCPosition struct {
	Px int32 `protobuf:"varint,1,opt,name=px" json:"px,omitempty"`
	Py int32 `protobuf:"varint,2,opt,name=py" json:"py,omitempty"`
}

func (m *DFDCPosition) Reset()                    { *m = DFDCPosition{} }
func (m *DFDCPosition) String() string            { return proto.CompactTextString(m) }
func (*DFDCPosition) ProtoMessage()               {}
func (*DFDCPosition) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *DFDCPosition) GetPx() int32 {
	if m != nil {
		return m.Px
	}
	return 0
}

func (m *DFDCPosition) GetPy() int32 {
	if m != nil {
		return m.Py
	}
	return 0
}

// 通知更新奖金池
type UPDATE_DFDC_BONUS struct {
	Bonus map[int32]int64 `protobuf:"bytes,1,rep,name=Bonus" json:"Bonus,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *UPDATE_DFDC_BONUS) Reset()                    { *m = UPDATE_DFDC_BONUS{} }
func (m *UPDATE_DFDC_BONUS) String() string            { return proto.CompactTextString(m) }
func (*UPDATE_DFDC_BONUS) ProtoMessage()               {}
func (*UPDATE_DFDC_BONUS) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *UPDATE_DFDC_BONUS) GetBonus() map[int32]int64 {
	if m != nil {
		return m.Bonus
	}
	return nil
}

// 请求dfdc玩家列表
type PLAYERS_DFDC_LIST_RES struct {
	Players []*AccountStorageData `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
}

func (m *PLAYERS_DFDC_LIST_RES) Reset()                    { *m = PLAYERS_DFDC_LIST_RES{} }
func (m *PLAYERS_DFDC_LIST_RES) String() string            { return proto.CompactTextString(m) }
func (*PLAYERS_DFDC_LIST_RES) ProtoMessage()               {}
func (*PLAYERS_DFDC_LIST_RES) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *PLAYERS_DFDC_LIST_RES) GetPlayers() []*AccountStorageData {
	if m != nil {
		return m.Players
	}
	return nil
}

func init() {
	proto.RegisterType((*ENTER_GAME_DFDC_REQ)(nil), "protomsg.ENTER_GAME_DFDC_REQ")
	proto.RegisterType((*ENTER_GAME_DFDC_RES)(nil), "protomsg.ENTER_GAME_DFDC_RES")
	proto.RegisterType((*ENTER_GAME_DFDC_RES_DfdcRatio)(nil), "protomsg.ENTER_GAME_DFDC_RES.DfdcRatio")
	proto.RegisterType((*LEAVE_GAME_DFDC_REQ)(nil), "protomsg.LEAVE_GAME_DFDC_REQ")
	proto.RegisterType((*LEAVE_GAME_DFDC_RES)(nil), "protomsg.LEAVE_GAME_DFDC_RES")
	proto.RegisterType((*START_DFDC_REQ)(nil), "protomsg.START_DFDC_REQ")
	proto.RegisterType((*START_DFDC_RES)(nil), "protomsg.START_DFDC_RES")
	proto.RegisterType((*DFDCPosition)(nil), "protomsg.DFDC_position")
	proto.RegisterType((*UPDATE_DFDC_BONUS)(nil), "protomsg.UPDATE_DFDC_BONUS")
	proto.RegisterType((*PLAYERS_DFDC_LIST_RES)(nil), "protomsg.PLAYERS_DFDC_LIST_RES")
	proto.RegisterEnum("protomsg.DFDCMSG", DFDCMSG_name, DFDCMSG_value)
	proto.RegisterEnum("protomsg.DFDCID", DFDCID_name, DFDCID_value)
}

func init() { proto.RegisterFile("protobuf/dfdc.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 803 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcd, 0x6e, 0xeb, 0x44,
	0x14, 0xbe, 0xb6, 0xe3, 0xfc, 0x9c, 0x90, 0xdc, 0xb9, 0x73, 0x7b, 0x6f, 0xad, 0xa8, 0x42, 0x51,
	0x90, 0x20, 0xaa, 0x44, 0x4a, 0x93, 0xb6, 0xb4, 0x88, 0x1f, 0x25, 0xb6, 0x5b, 0x45, 0x4d, 0xd3,
	0x76, 0x26, 0x01, 0xc1, 0xc6, 0x72, 0x53, 0xb7, 0x44, 0x6d, 0xe3, 0xc8, 0x76, 0x68, 0xf3, 0x0c,
	0xbc, 0x02, 0x8b, 0xee, 0x59, 0xf1, 0xb3, 0x00, 0x36, 0xf0, 0x3c, 0x79, 0x0a, 0x34, 0x63, 0x8f,
	0x9d, 0x50, 0x83, 0x10, 0xdc, 0x95, 0xbf, 0xf3, 0xf7, 0x9d, 0x33, 0x67, 0x3e, 0x0f, 0xbc, 0x9c,
	0x7a, 0x6e, 0xe0, 0x5e, 0xcc, 0xae, 0xb6, 0x2e, 0xaf, 0x2e, 0x47, 0x0d, 0x6e, 0xe1, 0x3c, 0xff,
	0xdc, 0xf9, 0xd7, 0x95, 0xa5, 0xb0, 0x1d, 0xd8, 0x61, 0xb8, 0x76, 0x0c, 0x2f, 0xcd, 0xfe, 0xc0,
	0x24, 0xd6, 0x51, 0xfb, 0xc4, 0xb4, 0x8c, 0x43, 0x43, 0xb7, 0x88, 0x79, 0x8e, 0x37, 0xa0, 0xd0,
	0x1e, 0x8d, 0xdc, 0xd9, 0x24, 0xe8, 0x1a, 0x9a, 0x54, 0x95, 0xea, 0x25, 0x92, 0x38, 0xf0, 0x6b,
	0xc8, 0x12, 0xd7, 0xbd, 0xeb, 0x1a, 0x9a, 0xcc, 0x43, 0x91, 0x55, 0x7b, 0xcc, 0xa4, 0xb1, 0xd1,
	0xa5, 0x7c, 0x69, 0x39, 0x9f, 0xf9, 0x3b, 0xb6, 0x3f, 0x1e, 0xf9, 0x9c, 0x47, 0x21, 0x91, 0x85,
	0x3f, 0x05, 0xb5, 0xe3, 0x4e, 0x66, 0xbe, 0xa6, 0x54, 0x95, 0x7a, 0xb1, 0x59, 0x6f, 0x88, 0x33,
	0x34, 0x52, 0xd8, 0x1b, 0x3c, 0xd5, 0x9c, 0x04, 0xde, 0x9c, 0x84, 0x65, 0x58, 0x83, 0x5c, 0xcf,
	0xf6, 0x83, 0x8e, 0x13, 0x68, 0x19, 0x4e, 0x2c, 0x4c, 0x8c, 0x21, 0xd3, 0x71, 0x02, 0x5f, 0x53,
	0xab, 0x4a, 0x3d, 0x43, 0x38, 0x66, 0xdd, 0x88, 0x1d, 0x8c, 0x5d, 0x2d, 0xfb, 0x6f, 0xba, 0xf1,
	0xd4, 0xa8, 0x1b, 0xc7, 0xb8, 0x02, 0xf9, 0x43, 0xc7, 0xd1, 0xd9, 0x6e, 0xb4, 0x7c, 0x55, 0xaa,
	0xab, 0x24, 0xb6, 0x2b, 0x1e, 0x14, 0x8c, 0xab, 0xcb, 0x51, 0x98, 0x58, 0x05, 0x39, 0x5a, 0x41,
	0xb9, 0x89, 0x92, 0x2e, 0x8c, 0xba, 0x6b, 0x10, 0xb9, 0x6b, 0xe0, 0x57, 0x90, 0xa5, 0xf6, 0x9d,
	0x63, 0xb5, 0xf8, 0xdc, 0x2a, 0x51, 0x99, 0xd5, 0x8a, 0xdd, 0x3b, 0x9a, 0x9a, 0xb8, 0x77, 0x62,
	0xf7, 0xae, 0x96, 0x4d, 0xdc, 0xbb, 0x95, 0x7d, 0x80, 0x64, 0x25, 0x18, 0x81, 0x72, 0xe3, 0xcc,
	0x79, 0x57, 0x95, 0x30, 0x88, 0xd7, 0x40, 0xfd, 0xc6, 0xbe, 0x9d, 0x39, 0xd1, 0xd2, 0x43, 0xe3,
	0x23, 0x79, 0x5f, 0xaa, 0xd8, 0x00, 0xc9, 0xf1, 0x52, 0x2a, 0x3f, 0x59, 0xae, 0x2c, 0x36, 0xdf,
	0xfb, 0xe7, 0x4d, 0xc5, 0x07, 0x5f, 0x6a, 0xc1, 0xf4, 0xd6, 0x33, 0xdb, 0x9f, 0x9b, 0x6f, 0x44,
	0x6f, 0x9f, 0xa5, 0x91, 0x51, 0x36, 0x38, 0x71, 0x82, 0x88, 0x86, 0xc1, 0xbf, 0x25, 0xa8, 0x41,
	0x99, 0x0e, 0xda, 0x64, 0x90, 0x0c, 0x82, 0x40, 0xe9, 0x44, 0xb5, 0x19, 0xc2, 0x60, 0xed, 0x3b,
	0xf9, 0x2f, 0x49, 0x2b, 0x0d, 0x32, 0x61, 0x83, 0x2a, 0x14, 0xcf, 0xc6, 0xa3, 0x60, 0xe6, 0x39,
	0xbd, 0xb1, 0xcf, 0x54, 0xa7, 0xd4, 0x55, 0xb2, 0xec, 0xc2, 0x07, 0x42, 0xd3, 0x2a, 0x57, 0xd9,
	0x3b, 0xc9, 0xee, 0x56, 0xc9, 0x53, 0xe4, 0xbc, 0x06, 0xea, 0x89, 0x3b, 0x71, 0xe6, 0xfc, 0x9a,
	0x15, 0x12, 0x1a, 0x6c, 0x65, 0x87, 0x9e, 0xd0, 0x5d, 0x8e, 0x47, 0x12, 0x07, 0x7e, 0x1f, 0x54,
	0xfa, 0xb5, 0x7b, 0xef, 0x6b, 0x79, 0xde, 0x6e, 0x7d, 0x55, 0x6e, 0xd6, 0xd4, 0xf5, 0xc7, 0xc1,
	0xd8, 0x9d, 0x90, 0x30, 0xeb, 0xbf, 0x6b, 0xa6, 0xb6, 0x05, 0xa5, 0x15, 0x46, 0x5c, 0x06, 0x79,
	0xfa, 0x10, 0xd5, 0xca, 0xd3, 0x07, 0x6e, 0xcf, 0x79, 0x1d, 0xb3, 0xe7, 0xb5, 0x6f, 0x25, 0x78,
	0x31, 0x3c, 0x33, 0xda, 0x83, 0xe8, 0xc6, 0x3a, 0xa7, 0xfd, 0x21, 0xc5, 0x1f, 0x8b, 0xf5, 0x48,
	0x7c, 0xde, 0x77, 0x93, 0x79, 0x9f, 0xe4, 0x3e, 0xdd, 0xd0, 0xff, 0x18, 0xff, 0x14, 0x5e, 0x9d,
	0xf5, 0xda, 0x5f, 0x9a, 0x84, 0x86, 0x1d, 0x7a, 0x5d, 0x3a, 0xe0, 0x77, 0xbc, 0x07, 0xb9, 0xe9,
	0xad, 0x3d, 0x77, 0x3c, 0x31, 0xd2, 0x46, 0x32, 0x52, 0xa4, 0x4c, 0x1a, 0xb8, 0x9e, 0x7d, 0xed,
	0x18, 0x76, 0x60, 0x13, 0x91, 0xbc, 0xf9, 0x28, 0x43, 0x8e, 0x31, 0x9d, 0xd0, 0x23, 0xfc, 0x1c,
	0x8a, 0xc3, 0xfe, 0x71, 0xff, 0xf4, 0x0b, 0xce, 0x8d, 0x9e, 0xe1, 0x0d, 0x78, 0xad, 0x53, 0x2b,
	0xe5, 0xc1, 0x45, 0x3f, 0x2c, 0x24, 0x16, 0xa5, 0x7a, 0x4a, 0x94, 0xa2, 0x1f, 0xc3, 0xa8, 0x4e,
	0xad, 0x94, 0x9f, 0x07, 0xfd, 0x14, 0xd7, 0xa6, 0xfc, 0x0d, 0xe8, 0xe7, 0x85, 0x84, 0xd7, 0xe1,
	0x85, 0x4e, 0xad, 0x55, 0xa9, 0xa3, 0x5f, 0xc2, 0x00, 0xd5, 0x57, 0x03, 0x14, 0xfd, 0xba, 0x90,
	0x70, 0x05, 0xd6, 0xa8, 0x6e, 0x3d, 0xd9, 0x3d, 0xfa, 0x6d, 0x21, 0xe1, 0xb7, 0x41, 0xd3, 0xa9,
	0x95, 0xb6, 0xb6, 0x73, 0xf4, 0x7b, 0x18, 0xa7, 0x7a, 0x6a, 0x9c, 0xa2, 0x3f, 0x16, 0xd2, 0xe6,
	0xf7, 0x12, 0x64, 0xc3, 0x47, 0x0f, 0x97, 0x01, 0x18, 0x1a, 0x4e, 0x6e, 0x26, 0xee, 0x3d, 0x7a,
	0x86, 0x0b, 0xa0, 0x32, 0x7b, 0x1b, 0x49, 0x02, 0x36, 0x91, 0x2c, 0x60, 0x0b, 0x29, 0x02, 0xee,
	0xa0, 0x8c, 0x80, 0xbb, 0x48, 0x15, 0x70, 0x0f, 0x65, 0x05, 0xfc, 0x10, 0xe5, 0x04, 0xdc, 0x47,
	0x79, 0x01, 0x0f, 0x50, 0x01, 0x43, 0xd8, 0x7c, 0xfb, 0x03, 0x04, 0x31, 0xde, 0x46, 0xc5, 0x18,
	0x37, 0xd1, 0x5b, 0x31, 0x6e, 0xa1, 0x52, 0xe7, 0xf9, 0x57, 0x25, 0xcf, 0x75, 0x83, 0x2d, 0x71,
	0xfb, 0x17, 0x59, 0x8e, 0x5a, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x67, 0x4f, 0x6c, 0x6f,
	0x07, 0x00, 0x00,
}
