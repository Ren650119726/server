// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: protobuf/fruitmary.proto

package protomsg

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 网络消息
type FRUITMARYMSG int32

const (
	FRUITMARYMSG_UNKNOW_FRUITMARY            FRUITMARYMSG = 0
	FRUITMARYMSG_CS_ENTER_GAME_FRUITMARY_REQ FRUITMARYMSG = 12001 // 玩家请求进入房间
	FRUITMARYMSG_SC_ENTER_GAME_FRUITMARY_RES FRUITMARYMSG = 12002
	FRUITMARYMSG_CS_LEAVE_GAME_FRUITMARY_REQ FRUITMARYMSG = 12003 // 玩家请求退出房间
	FRUITMARYMSG_SC_LEAVE_GAME_FRUITMARY_RES FRUITMARYMSG = 12004
	FRUITMARYMSG_CS_START_MARY_REQ           FRUITMARYMSG = 12008 // 请求开始游戏1
	FRUITMARYMSG_SC_START_MARY_RES           FRUITMARYMSG = 12009
	FRUITMARYMSG_SC_UPDATE_MARY_BONUS        FRUITMARYMSG = 12010 // 通知更新奖金池
	FRUITMARYMSG_CS_START_MARY2_REQ          FRUITMARYMSG = 12011 // 请求开始游戏2
	FRUITMARYMSG_SC_START_MARY2_RES          FRUITMARYMSG = 12012
	FRUITMARYMSG_CS_NEXT_MARY_RESULT         FRUITMARYMSG = 12013 // 客户通知服务器播放下一个结果
	FRUITMARYMSG_CS_PLAYERS_LIST_REQ         FRUITMARYMSG = 12015 // 请求在线玩家列表
	FRUITMARYMSG_SC_PLAYERS_LIST_RES         FRUITMARYMSG = 12016
)

// Enum value maps for FRUITMARYMSG.
var (
	FRUITMARYMSG_name = map[int32]string{
		0:     "UNKNOW_FRUITMARY",
		12001: "CS_ENTER_GAME_FRUITMARY_REQ",
		12002: "SC_ENTER_GAME_FRUITMARY_RES",
		12003: "CS_LEAVE_GAME_FRUITMARY_REQ",
		12004: "SC_LEAVE_GAME_FRUITMARY_RES",
		12008: "CS_START_MARY_REQ",
		12009: "SC_START_MARY_RES",
		12010: "SC_UPDATE_MARY_BONUS",
		12011: "CS_START_MARY2_REQ",
		12012: "SC_START_MARY2_RES",
		12013: "CS_NEXT_MARY_RESULT",
		12015: "CS_PLAYERS_LIST_REQ",
		12016: "SC_PLAYERS_LIST_RES",
	}
	FRUITMARYMSG_value = map[string]int32{
		"UNKNOW_FRUITMARY":            0,
		"CS_ENTER_GAME_FRUITMARY_REQ": 12001,
		"SC_ENTER_GAME_FRUITMARY_RES": 12002,
		"CS_LEAVE_GAME_FRUITMARY_REQ": 12003,
		"SC_LEAVE_GAME_FRUITMARY_RES": 12004,
		"CS_START_MARY_REQ":           12008,
		"SC_START_MARY_RES":           12009,
		"SC_UPDATE_MARY_BONUS":        12010,
		"CS_START_MARY2_REQ":          12011,
		"SC_START_MARY2_RES":          12012,
		"CS_NEXT_MARY_RESULT":         12013,
		"CS_PLAYERS_LIST_REQ":         12015,
		"SC_PLAYERS_LIST_RES":         12016,
	}
)

func (x FRUITMARYMSG) Enum() *FRUITMARYMSG {
	p := new(FRUITMARYMSG)
	*p = x
	return p
}

func (x FRUITMARYMSG) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FRUITMARYMSG) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_fruitmary_proto_enumTypes[0].Descriptor()
}

func (FRUITMARYMSG) Type() protoreflect.EnumType {
	return &file_protobuf_fruitmary_proto_enumTypes[0]
}

func (x FRUITMARYMSG) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FRUITMARYMSG.Descriptor instead.
func (FRUITMARYMSG) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{0}
}

// 游戏1 图案枚举
type Fruit1ID int32

const (
	Fruit1ID_Fruit1Unknow     Fruit1ID = 0
	Fruit1ID_Fruit1Wild       Fruit1ID = 1  // Wild图案
	Fruit1ID_Fruit1Bonus      Fruit1ID = 2  // Bonus图案
	Fruit1ID_Fruit1Scatter    Fruit1ID = 3  // Scatter图案
	Fruit1ID_Fruit1Bar        Fruit1ID = 4  // Bar
	Fruit1ID_Fruit1Cherry     Fruit1ID = 5  // 樱桃
	Fruit1ID_Fruit1Bell       Fruit1ID = 6  // 铃铛
	Fruit1ID_Fruit1Pineapple  Fruit1ID = 7  // 菠萝
	Fruit1ID_Fruit1Grap       Fruit1ID = 8  // 葡萄
	Fruit1ID_Fruit1Mango      Fruit1ID = 9  // 芒果
	Fruit1ID_Fruit1Watermelon Fruit1ID = 10 // 西瓜
	Fruit1ID_Fruit1Banana     Fruit1ID = 11 // 香蕉
)

// Enum value maps for Fruit1ID.
var (
	Fruit1ID_name = map[int32]string{
		0:  "Fruit1Unknow",
		1:  "Fruit1Wild",
		2:  "Fruit1Bonus",
		3:  "Fruit1Scatter",
		4:  "Fruit1Bar",
		5:  "Fruit1Cherry",
		6:  "Fruit1Bell",
		7:  "Fruit1Pineapple",
		8:  "Fruit1Grap",
		9:  "Fruit1Mango",
		10: "Fruit1Watermelon",
		11: "Fruit1Banana",
	}
	Fruit1ID_value = map[string]int32{
		"Fruit1Unknow":     0,
		"Fruit1Wild":       1,
		"Fruit1Bonus":      2,
		"Fruit1Scatter":    3,
		"Fruit1Bar":        4,
		"Fruit1Cherry":     5,
		"Fruit1Bell":       6,
		"Fruit1Pineapple":  7,
		"Fruit1Grap":       8,
		"Fruit1Mango":      9,
		"Fruit1Watermelon": 10,
		"Fruit1Banana":     11,
	}
)

func (x Fruit1ID) Enum() *Fruit1ID {
	p := new(Fruit1ID)
	*p = x
	return p
}

func (x Fruit1ID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Fruit1ID) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_fruitmary_proto_enumTypes[1].Descriptor()
}

func (Fruit1ID) Type() protoreflect.EnumType {
	return &file_protobuf_fruitmary_proto_enumTypes[1]
}

func (x Fruit1ID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Fruit1ID.Descriptor instead.
func (Fruit1ID) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{1}
}

// 游戏2 图案枚举
type Fruit2ID int32

const (
	Fruit2ID_Fruit2Unknow     Fruit2ID = 0
	Fruit2ID_Fruit2Watermelon Fruit2ID = 1 // 西瓜
	Fruit2ID_Fruit2Grap       Fruit2ID = 2 // 葡萄
	Fruit2ID_Fruit2Mango      Fruit2ID = 3 // 芒果
	Fruit2ID_Fruit2Cherry     Fruit2ID = 4 // 樱桃
	Fruit2ID_Fruit2Banana     Fruit2ID = 5 // 香蕉
	Fruit2ID_Fruit2Orange     Fruit2ID = 6 // 橘子
	Fruit2ID_Fruit2Pineapple  Fruit2ID = 7 // 菠萝
	Fruit2ID_Fruit2Bomb       Fruit2ID = 8 // 炸弹
)

// Enum value maps for Fruit2ID.
var (
	Fruit2ID_name = map[int32]string{
		0: "Fruit2Unknow",
		1: "Fruit2Watermelon",
		2: "Fruit2Grap",
		3: "Fruit2Mango",
		4: "Fruit2Cherry",
		5: "Fruit2Banana",
		6: "Fruit2Orange",
		7: "Fruit2Pineapple",
		8: "Fruit2Bomb",
	}
	Fruit2ID_value = map[string]int32{
		"Fruit2Unknow":     0,
		"Fruit2Watermelon": 1,
		"Fruit2Grap":       2,
		"Fruit2Mango":      3,
		"Fruit2Cherry":     4,
		"Fruit2Banana":     5,
		"Fruit2Orange":     6,
		"Fruit2Pineapple":  7,
		"Fruit2Bomb":       8,
	}
)

func (x Fruit2ID) Enum() *Fruit2ID {
	p := new(Fruit2ID)
	*p = x
	return p
}

func (x Fruit2ID) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Fruit2ID) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_fruitmary_proto_enumTypes[2].Descriptor()
}

func (Fruit2ID) Type() protoreflect.EnumType {
	return &file_protobuf_fruitmary_proto_enumTypes[2]
}

func (x Fruit2ID) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Fruit2ID.Descriptor instead.
func (Fruit2ID) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{2}
}

// 请求进入房间
type ENTER_GAME_FRUITMARY_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"` //
	RoomID    uint32 `protobuf:"varint,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"`       // 房间ID
}

func (x *ENTER_GAME_FRUITMARY_REQ) Reset() {
	*x = ENTER_GAME_FRUITMARY_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_fruitmary_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ENTER_GAME_FRUITMARY_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ENTER_GAME_FRUITMARY_REQ) ProtoMessage() {}

func (x *ENTER_GAME_FRUITMARY_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_fruitmary_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ENTER_GAME_FRUITMARY_REQ.ProtoReflect.Descriptor instead.
func (*ENTER_GAME_FRUITMARY_REQ) Descriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{0}
}

func (x *ENTER_GAME_FRUITMARY_REQ) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *ENTER_GAME_FRUITMARY_REQ) GetRoomID() uint32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

type ENTER_GAME_FRUITMARY_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID       uint32                                         `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`                                                                                       // 房间ID
	Basics       int64                                          `protobuf:"varint,2,opt,name=Basics,proto3" json:"Basics,omitempty"`                                                                                       // 基础金额
	Bonus        int64                                          `protobuf:"varint,3,opt,name=Bonus,proto3" json:"Bonus,omitempty"`                                                                                         // 奖金池
	LastBet      int64                                          `protobuf:"varint,4,opt,name=LastBet,proto3" json:"LastBet,omitempty"`                                                                                     // 最后一次压住
	Bets         []uint64                                       `protobuf:"varint,5,rep,packed,name=Bets,proto3" json:"Bets,omitempty"`                                                                                    // 可以选择的押注金额
	Ratio        map[int32]*ENTER_GAME_FRUITMARY_RES_FruitRatio `protobuf:"bytes,6,rep,name=Ratio,proto3" json:"Ratio,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 水果赔率
	Mary2_Result *START_MARY2_RES                               `protobuf:"bytes,7,opt,name=Mary2_Result,json=Mary2Result,proto3" json:"Mary2_Result,omitempty"`                                                           // 小玛利结果
	FeeCount     int32                                          `protobuf:"varint,8,opt,name=FeeCount,proto3" json:"FeeCount,omitempty"`                                                                                   // 免费次数
}

func (x *ENTER_GAME_FRUITMARY_RES) Reset() {
	*x = ENTER_GAME_FRUITMARY_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_fruitmary_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ENTER_GAME_FRUITMARY_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ENTER_GAME_FRUITMARY_RES) ProtoMessage() {}

func (x *ENTER_GAME_FRUITMARY_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_fruitmary_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ENTER_GAME_FRUITMARY_RES.ProtoReflect.Descriptor instead.
func (*ENTER_GAME_FRUITMARY_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{1}
}

func (x *ENTER_GAME_FRUITMARY_RES) GetRoomID() uint32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *ENTER_GAME_FRUITMARY_RES) GetBasics() int64 {
	if x != nil {
		return x.Basics
	}
	return 0
}

func (x *ENTER_GAME_FRUITMARY_RES) GetBonus() int64 {
	if x != nil {
		return x.Bonus
	}
	return 0
}

func (x *ENTER_GAME_FRUITMARY_RES) GetLastBet() int64 {
	if x != nil {
		return x.LastBet
	}
	return 0
}

func (x *ENTER_GAME_FRUITMARY_RES) GetBets() []uint64 {
	if x != nil {
		return x.Bets
	}
	return nil
}

func (x *ENTER_GAME_FRUITMARY_RES) GetRatio() map[int32]*ENTER_GAME_FRUITMARY_RES_FruitRatio {
	if x != nil {
		return x.Ratio
	}
	return nil
}

func (x *ENTER_GAME_FRUITMARY_RES) GetMary2_Result() *START_MARY2_RES {
	if x != nil {
		return x.Mary2_Result
	}
	return nil
}

func (x *ENTER_GAME_FRUITMARY_RES) GetFeeCount() int32 {
	if x != nil {
		return x.FeeCount
	}
	return 0
}

// 请求退出房间
type LEAVE_GAME_FRUITMARY_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"` //
	RoomID    uint32 `protobuf:"varint,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"`       // 房间ID
}

func (x *LEAVE_GAME_FRUITMARY_REQ) Reset() {
	*x = LEAVE_GAME_FRUITMARY_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_fruitmary_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LEAVE_GAME_FRUITMARY_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LEAVE_GAME_FRUITMARY_REQ) ProtoMessage() {}

func (x *LEAVE_GAME_FRUITMARY_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_fruitmary_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LEAVE_GAME_FRUITMARY_REQ.ProtoReflect.Descriptor instead.
func (*LEAVE_GAME_FRUITMARY_REQ) Descriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{2}
}

func (x *LEAVE_GAME_FRUITMARY_REQ) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *LEAVE_GAME_FRUITMARY_REQ) GetRoomID() uint32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

type LEAVE_GAME_FRUITMARY_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    uint32 `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`       // 0.可以退出  1.不能退出房间
	RoomID uint32 `protobuf:"varint,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"` // 房间ID
}

func (x *LEAVE_GAME_FRUITMARY_RES) Reset() {
	*x = LEAVE_GAME_FRUITMARY_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_fruitmary_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LEAVE_GAME_FRUITMARY_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LEAVE_GAME_FRUITMARY_RES) ProtoMessage() {}

func (x *LEAVE_GAME_FRUITMARY_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_fruitmary_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LEAVE_GAME_FRUITMARY_RES.ProtoReflect.Descriptor instead.
func (*LEAVE_GAME_FRUITMARY_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{3}
}

func (x *LEAVE_GAME_FRUITMARY_RES) GetRet() uint32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *LEAVE_GAME_FRUITMARY_RES) GetRoomID() uint32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

////////////////////////////////////////////// 游戏1 /////////////////////////////////////////////
// 请求开始游戏1
type START_MARY_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bet uint64 `protobuf:"varint,1,opt,name=Bet,proto3" json:"Bet,omitempty"`
}

func (x *START_MARY_REQ) Reset() {
	*x = START_MARY_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_fruitmary_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *START_MARY_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*START_MARY_REQ) ProtoMessage() {}

func (x *START_MARY_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_fruitmary_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use START_MARY_REQ.ProtoReflect.Descriptor instead.
func (*START_MARY_REQ) Descriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{4}
}

func (x *START_MARY_REQ) GetBet() uint64 {
	if x != nil {
		return x.Bet
	}
	return 0
}

type START_MARY_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret          uint64               `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`                        // 0成功
	SumOdds      int64                `protobuf:"varint,2,opt,name=SumOdds,proto3" json:"SumOdds,omitempty"`                // 9条线总赔率
	Results      []*FRUITMARY_Result  `protobuf:"bytes,3,rep,name=Results,proto3" json:"Results,omitempty"`                 // 中奖线列表
	PictureList  []int32              `protobuf:"varint,4,rep,packed,name=PictureList,proto3" json:"PictureList,omitempty"` // 图形列表( [0-14] 即15个图形)
	Bonus        int64                `protobuf:"varint,5,opt,name=Bonus,proto3" json:"Bonus,omitempty"`                    // 赢得水池里的金币
	Money        int64                `protobuf:"varint,6,opt,name=Money,proto3" json:"Money,omitempty"`                    // 身上的钱
	FreeCount    int64                `protobuf:"varint,7,opt,name=FreeCount,proto3" json:"FreeCount,omitempty"`            // 获得免费次数
	MaryCount    int64                `protobuf:"varint,8,opt,name=MaryCount,proto3" json:"MaryCount,omitempty"`            // 触发小玛丽次数
	FeePositions []*FRUITMARYPosition `protobuf:"bytes,9,rep,name=FeePositions,proto3" json:"FeePositions,omitempty"`       //中免费的坐标
}

func (x *START_MARY_RES) Reset() {
	*x = START_MARY_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_fruitmary_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *START_MARY_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*START_MARY_RES) ProtoMessage() {}

func (x *START_MARY_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_fruitmary_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use START_MARY_RES.ProtoReflect.Descriptor instead.
func (*START_MARY_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{5}
}

func (x *START_MARY_RES) GetRet() uint64 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *START_MARY_RES) GetSumOdds() int64 {
	if x != nil {
		return x.SumOdds
	}
	return 0
}

func (x *START_MARY_RES) GetResults() []*FRUITMARY_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *START_MARY_RES) GetPictureList() []int32 {
	if x != nil {
		return x.PictureList
	}
	return nil
}

func (x *START_MARY_RES) GetBonus() int64 {
	if x != nil {
		return x.Bonus
	}
	return 0
}

func (x *START_MARY_RES) GetMoney() int64 {
	if x != nil {
		return x.Money
	}
	return 0
}

func (x *START_MARY_RES) GetFreeCount() int64 {
	if x != nil {
		return x.FreeCount
	}
	return 0
}

func (x *START_MARY_RES) GetMaryCount() int64 {
	if x != nil {
		return x.MaryCount
	}
	return 0
}

func (x *START_MARY_RES) GetFeePositions() []*FRUITMARYPosition {
	if x != nil {
		return x.FeePositions
	}
	return nil
}

type FRUITMARYPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Px int32 `protobuf:"varint,1,opt,name=px,proto3" json:"px,omitempty"`
	Py int32 `protobuf:"varint,2,opt,name=py,proto3" json:"py,omitempty"`
}

func (x *FRUITMARYPosition) Reset() {
	*x = FRUITMARYPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_fruitmary_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRUITMARYPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRUITMARYPosition) ProtoMessage() {}

func (x *FRUITMARYPosition) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_fruitmary_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRUITMARYPosition.ProtoReflect.Descriptor instead.
func (*FRUITMARYPosition) Descriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{6}
}

func (x *FRUITMARYPosition) GetPx() int32 {
	if x != nil {
		return x.Px
	}
	return 0
}

func (x *FRUITMARYPosition) GetPy() int32 {
	if x != nil {
		return x.Py
	}
	return 0
}

type FRUITMARY_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LineId    int32                `protobuf:"varint,1,opt,name=LineId,proto3" json:"LineId,omitempty"` // 表示第几条线
	Count     int32                `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`   // 图形项连的个数
	Odds      int32                `protobuf:"varint,3,opt,name=Odds,proto3" json:"Odds,omitempty"`     // 该条线的赔率
	Positions []*FRUITMARYPosition `protobuf:"bytes,4,rep,name=Positions,proto3" json:"Positions,omitempty"`
}

func (x *FRUITMARY_Result) Reset() {
	*x = FRUITMARY_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_fruitmary_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FRUITMARY_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FRUITMARY_Result) ProtoMessage() {}

func (x *FRUITMARY_Result) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_fruitmary_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FRUITMARY_Result.ProtoReflect.Descriptor instead.
func (*FRUITMARY_Result) Descriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{7}
}

func (x *FRUITMARY_Result) GetLineId() int32 {
	if x != nil {
		return x.LineId
	}
	return 0
}

func (x *FRUITMARY_Result) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *FRUITMARY_Result) GetOdds() int32 {
	if x != nil {
		return x.Odds
	}
	return 0
}

func (x *FRUITMARY_Result) GetPositions() []*FRUITMARYPosition {
	if x != nil {
		return x.Positions
	}
	return nil
}

// 通知更新奖金池
type UPDATE_MARY_BONUS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bonus int64 `protobuf:"varint,1,opt,name=Bonus,proto3" json:"Bonus,omitempty"`
}

func (x *UPDATE_MARY_BONUS) Reset() {
	*x = UPDATE_MARY_BONUS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_fruitmary_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UPDATE_MARY_BONUS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UPDATE_MARY_BONUS) ProtoMessage() {}

func (x *UPDATE_MARY_BONUS) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_fruitmary_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UPDATE_MARY_BONUS.ProtoReflect.Descriptor instead.
func (*UPDATE_MARY_BONUS) Descriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{8}
}

func (x *UPDATE_MARY_BONUS) GetBonus() int64 {
	if x != nil {
		return x.Bonus
	}
	return 0
}

////////////////////////////////////////////// 游戏2 /////////////////////////////////////////////
// 请求开始游戏2
type START_MARY2_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *START_MARY2_REQ) Reset() {
	*x = START_MARY2_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_fruitmary_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *START_MARY2_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*START_MARY2_REQ) ProtoMessage() {}

func (x *START_MARY2_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_fruitmary_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use START_MARY2_REQ.ProtoReflect.Descriptor instead.
func (*START_MARY2_REQ) Descriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{9}
}

type START_MARY2_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         []*Mary2_Result `protobuf:"bytes,1,rep,name=Result,proto3" json:"Result,omitempty"`                  // 游戏2结果
	MarySpareCount int32           `protobuf:"varint,2,opt,name=MarySpareCount,proto3" json:"MarySpareCount,omitempty"` // 剩余游戏2次数
}

func (x *START_MARY2_RES) Reset() {
	*x = START_MARY2_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_fruitmary_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *START_MARY2_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*START_MARY2_RES) ProtoMessage() {}

func (x *START_MARY2_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_fruitmary_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use START_MARY2_RES.ProtoReflect.Descriptor instead.
func (*START_MARY2_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{10}
}

func (x *START_MARY2_RES) GetResult() []*Mary2_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *START_MARY2_RES) GetMarySpareCount() int32 {
	if x != nil {
		return x.MarySpareCount
	}
	return 0
}

type Mary2_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexId int32   `protobuf:"varint,1,opt,name=IndexId,proto3" json:"IndexId,omitempty"`      // 命中的水果图案(1-8)
	MaryId  []int32 `protobuf:"varint,2,rep,packed,name=MaryId,proto3" json:"MaryId,omitempty"` // 1-4个图案ID
	Profit1 int32   `protobuf:"varint,3,opt,name=Profit1,proto3" json:"Profit1,omitempty"`      // 外面24个中奖金额
	Profit2 int32   `protobuf:"varint,4,opt,name=Profit2,proto3" json:"Profit2,omitempty"`      // 里面4个中将金额
}

func (x *Mary2_Result) Reset() {
	*x = Mary2_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_fruitmary_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mary2_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mary2_Result) ProtoMessage() {}

func (x *Mary2_Result) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_fruitmary_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mary2_Result.ProtoReflect.Descriptor instead.
func (*Mary2_Result) Descriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{11}
}

func (x *Mary2_Result) GetIndexId() int32 {
	if x != nil {
		return x.IndexId
	}
	return 0
}

func (x *Mary2_Result) GetMaryId() []int32 {
	if x != nil {
		return x.MaryId
	}
	return nil
}

func (x *Mary2_Result) GetProfit1() int32 {
	if x != nil {
		return x.Profit1
	}
	return 0
}

func (x *Mary2_Result) GetProfit2() int32 {
	if x != nil {
		return x.Profit2
	}
	return 0
}

type NEXT_MARY_RESULT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NEXT_MARY_RESULT) Reset() {
	*x = NEXT_MARY_RESULT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_fruitmary_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NEXT_MARY_RESULT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NEXT_MARY_RESULT) ProtoMessage() {}

func (x *NEXT_MARY_RESULT) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_fruitmary_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NEXT_MARY_RESULT.ProtoReflect.Descriptor instead.
func (*NEXT_MARY_RESULT) Descriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{12}
}

// 请求小玛利玩家列表
type PLAYERS_LIST_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*AccountStorageData `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"` // 房间捏所有的玩家
}

func (x *PLAYERS_LIST_RES) Reset() {
	*x = PLAYERS_LIST_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_fruitmary_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PLAYERS_LIST_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PLAYERS_LIST_RES) ProtoMessage() {}

func (x *PLAYERS_LIST_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_fruitmary_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PLAYERS_LIST_RES.ProtoReflect.Descriptor instead.
func (*PLAYERS_LIST_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{13}
}

func (x *PLAYERS_LIST_RES) GetPlayers() []*AccountStorageData {
	if x != nil {
		return x.Players
	}
	return nil
}

type ENTER_GAME_FRUITMARY_RES_FruitRatio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     Fruit2ID `protobuf:"varint,1,opt,name=ID,proto3,enum=protomsg.Fruit2ID" json:"ID,omitempty"`
	Single int32    `protobuf:"varint,2,opt,name=Single,proto3" json:"Single,omitempty"`            // 跑灯图案赔率
	Same_2 int32    `protobuf:"varint,3,opt,name=Same_2,json=Same2,proto3" json:"Same_2,omitempty"` // 三连一下的赔率
	Same_3 int32    `protobuf:"varint,4,opt,name=Same_3,json=Same3,proto3" json:"Same_3,omitempty"` // 三连赔率
	Same_4 int32    `protobuf:"varint,5,opt,name=Same_4,json=Same4,proto3" json:"Same_4,omitempty"` // 四连赔率
}

func (x *ENTER_GAME_FRUITMARY_RES_FruitRatio) Reset() {
	*x = ENTER_GAME_FRUITMARY_RES_FruitRatio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_fruitmary_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ENTER_GAME_FRUITMARY_RES_FruitRatio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ENTER_GAME_FRUITMARY_RES_FruitRatio) ProtoMessage() {}

func (x *ENTER_GAME_FRUITMARY_RES_FruitRatio) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_fruitmary_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ENTER_GAME_FRUITMARY_RES_FruitRatio.ProtoReflect.Descriptor instead.
func (*ENTER_GAME_FRUITMARY_RES_FruitRatio) Descriptor() ([]byte, []int) {
	return file_protobuf_fruitmary_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ENTER_GAME_FRUITMARY_RES_FruitRatio) GetID() Fruit2ID {
	if x != nil {
		return x.ID
	}
	return Fruit2ID_Fruit2Unknow
}

func (x *ENTER_GAME_FRUITMARY_RES_FruitRatio) GetSingle() int32 {
	if x != nil {
		return x.Single
	}
	return 0
}

func (x *ENTER_GAME_FRUITMARY_RES_FruitRatio) GetSame_2() int32 {
	if x != nil {
		return x.Same_2
	}
	return 0
}

func (x *ENTER_GAME_FRUITMARY_RES_FruitRatio) GetSame_3() int32 {
	if x != nil {
		return x.Same_3
	}
	return 0
}

func (x *ENTER_GAME_FRUITMARY_RES_FruitRatio) GetSame_4() int32 {
	if x != nil {
		return x.Same_4
	}
	return 0
}

var File_protobuf_fruitmary_proto protoreflect.FileDescriptor

var file_protobuf_fruitmary_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x72, 0x75, 0x69, 0x74,
	0x6d, 0x61, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x6d, 0x73, 0x67, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x50, 0x0a, 0x18, 0x45, 0x4e, 0x54,
	0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x46, 0x52, 0x55, 0x49, 0x54, 0x4d, 0x41, 0x52,
	0x59, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0xa6, 0x04, 0x0a, 0x18,
	0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x46, 0x52, 0x55, 0x49, 0x54,
	0x4d, 0x41, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x73, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x42, 0x61, 0x73, 0x69, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x65, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x04, 0x52, 0x04, 0x42, 0x65, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x05,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d,
	0x45, 0x5f, 0x46, 0x52, 0x55, 0x49, 0x54, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x2e,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x12, 0x3c, 0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x79, 0x32, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d,
	0x73, 0x67, 0x2e, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x52, 0x59, 0x32, 0x5f, 0x52,
	0x45, 0x53, 0x52, 0x0b, 0x4d, 0x61, 0x72, 0x79, 0x32, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x46, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x8d, 0x01, 0x0a, 0x0a,
	0x46, 0x72, 0x75, 0x69, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x22, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73,
	0x67, 0x2e, 0x46, 0x72, 0x75, 0x69, 0x74, 0x32, 0x49, 0x44, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x53, 0x61, 0x6d, 0x65, 0x5f, 0x32,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x61, 0x6d, 0x65, 0x32, 0x12, 0x15, 0x0a,
	0x06, 0x53, 0x61, 0x6d, 0x65, 0x5f, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53,
	0x61, 0x6d, 0x65, 0x33, 0x12, 0x15, 0x0a, 0x06, 0x53, 0x61, 0x6d, 0x65, 0x5f, 0x34, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x61, 0x6d, 0x65, 0x34, 0x1a, 0x67, 0x0a, 0x0a, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45,
	0x5f, 0x46, 0x52, 0x55, 0x49, 0x54, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x2e, 0x46,
	0x72, 0x75, 0x69, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x50, 0x0a, 0x18, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x47, 0x41,
	0x4d, 0x45, 0x5f, 0x46, 0x52, 0x55, 0x49, 0x54, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x51,
	0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x44, 0x0a, 0x18, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f,
	0x47, 0x41, 0x4d, 0x45, 0x5f, 0x46, 0x52, 0x55, 0x49, 0x54, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x52,
	0x45, 0x53, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x22, 0x0a, 0x0e,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x10,
	0x0a, 0x03, 0x42, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x42, 0x65, 0x74,
	0x22, 0xbe, 0x02, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x52, 0x59, 0x5f,
	0x52, 0x45, 0x53, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x4f, 0x64, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x75, 0x6d, 0x4f, 0x64, 0x64, 0x73, 0x12,
	0x34, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x46, 0x52, 0x55, 0x49,
	0x54, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x40, 0x0a, 0x0c, 0x46, 0x65, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67,
	0x2e, 0x46, 0x52, 0x55, 0x49, 0x54, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x46, 0x65, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x34, 0x0a, 0x12, 0x46, 0x52, 0x55, 0x49, 0x54, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x70, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x70, 0x79, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x46, 0x52, 0x55, 0x49,
	0x54, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x4c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4c, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x64,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x4f, 0x64, 0x64, 0x73, 0x12, 0x3a,
	0x0a, 0x09, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x46, 0x52, 0x55,
	0x49, 0x54, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x29, 0x0a, 0x11, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x42, 0x4f, 0x4e, 0x55, 0x53, 0x12,
	0x14, 0x0a, 0x05, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4d,
	0x41, 0x52, 0x59, 0x32, 0x5f, 0x52, 0x45, 0x51, 0x22, 0x69, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x5f, 0x4d, 0x41, 0x52, 0x59, 0x32, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x2e, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x72, 0x79, 0x32, 0x5f, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x4d,
	0x61, 0x72, 0x79, 0x53, 0x70, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x4d, 0x61, 0x72, 0x79, 0x53, 0x70, 0x61, 0x72, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x74, 0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x79, 0x32, 0x5f, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x4d, 0x61, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x4d,
	0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x31,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x31, 0x12,
	0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x32, 0x22, 0x12, 0x0a, 0x10, 0x4e, 0x45, 0x58,
	0x54, 0x5f, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x22, 0x4a, 0x0a,
	0x10, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45,
	0x53, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2a, 0xf7, 0x02, 0x0a, 0x0c, 0x46, 0x52,
	0x55, 0x49, 0x54, 0x4d, 0x41, 0x52, 0x59, 0x4d, 0x53, 0x47, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x5f, 0x46, 0x52, 0x55, 0x49, 0x54, 0x4d, 0x41, 0x52, 0x59, 0x10, 0x00,
	0x12, 0x20, 0x0a, 0x1b, 0x43, 0x53, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d,
	0x45, 0x5f, 0x46, 0x52, 0x55, 0x49, 0x54, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x10,
	0xe1, 0x5d, 0x12, 0x20, 0x0a, 0x1b, 0x53, 0x43, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47,
	0x41, 0x4d, 0x45, 0x5f, 0x46, 0x52, 0x55, 0x49, 0x54, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x52, 0x45,
	0x53, 0x10, 0xe2, 0x5d, 0x12, 0x20, 0x0a, 0x1b, 0x43, 0x53, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45,
	0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x46, 0x52, 0x55, 0x49, 0x54, 0x4d, 0x41, 0x52, 0x59, 0x5f,
	0x52, 0x45, 0x51, 0x10, 0xe3, 0x5d, 0x12, 0x20, 0x0a, 0x1b, 0x53, 0x43, 0x5f, 0x4c, 0x45, 0x41,
	0x56, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x46, 0x52, 0x55, 0x49, 0x54, 0x4d, 0x41, 0x52,
	0x59, 0x5f, 0x52, 0x45, 0x53, 0x10, 0xe4, 0x5d, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x53, 0x5f, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xe8, 0x5d,
	0x12, 0x16, 0x0a, 0x11, 0x53, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x52,
	0x59, 0x5f, 0x52, 0x45, 0x53, 0x10, 0xe9, 0x5d, 0x12, 0x19, 0x0a, 0x14, 0x53, 0x43, 0x5f, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x42, 0x4f, 0x4e, 0x55, 0x53,
	0x10, 0xea, 0x5d, 0x12, 0x17, 0x0a, 0x12, 0x43, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f,
	0x4d, 0x41, 0x52, 0x59, 0x32, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xeb, 0x5d, 0x12, 0x17, 0x0a, 0x12,
	0x53, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4d, 0x41, 0x52, 0x59, 0x32, 0x5f, 0x52,
	0x45, 0x53, 0x10, 0xec, 0x5d, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x53, 0x5f, 0x4e, 0x45, 0x58, 0x54,
	0x5f, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0xed, 0x5d, 0x12,
	0x18, 0x0a, 0x13, 0x43, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x53, 0x5f, 0x4c, 0x49,
	0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xef, 0x5d, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x43, 0x5f,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53,
	0x10, 0xf0, 0x5d, 0x2a, 0xdf, 0x01, 0x0a, 0x08, 0x46, 0x72, 0x75, 0x69, 0x74, 0x31, 0x49, 0x44,
	0x12, 0x10, 0x0a, 0x0c, 0x46, 0x72, 0x75, 0x69, 0x74, 0x31, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x72, 0x75, 0x69, 0x74, 0x31, 0x57, 0x69, 0x6c, 0x64,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x72, 0x75, 0x69, 0x74, 0x31, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x72, 0x75, 0x69, 0x74, 0x31, 0x53, 0x63, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x72, 0x75, 0x69, 0x74, 0x31,
	0x42, 0x61, 0x72, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x72, 0x75, 0x69, 0x74, 0x31, 0x43,
	0x68, 0x65, 0x72, 0x72, 0x79, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x72, 0x75, 0x69, 0x74,
	0x31, 0x42, 0x65, 0x6c, 0x6c, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x72, 0x75, 0x69, 0x74,
	0x31, 0x50, 0x69, 0x6e, 0x65, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a,
	0x46, 0x72, 0x75, 0x69, 0x74, 0x31, 0x47, 0x72, 0x61, 0x70, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b,
	0x46, 0x72, 0x75, 0x69, 0x74, 0x31, 0x4d, 0x61, 0x6e, 0x67, 0x6f, 0x10, 0x09, 0x12, 0x14, 0x0a,
	0x10, 0x46, 0x72, 0x75, 0x69, 0x74, 0x31, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x6c, 0x6f,
	0x6e, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x72, 0x75, 0x69, 0x74, 0x31, 0x42, 0x61, 0x6e,
	0x61, 0x6e, 0x61, 0x10, 0x0b, 0x2a, 0xae, 0x01, 0x0a, 0x08, 0x46, 0x72, 0x75, 0x69, 0x74, 0x32,
	0x49, 0x44, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x72, 0x75, 0x69, 0x74, 0x32, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x72, 0x75, 0x69, 0x74, 0x32, 0x57, 0x61,
	0x74, 0x65, 0x72, 0x6d, 0x65, 0x6c, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x72,
	0x75, 0x69, 0x74, 0x32, 0x47, 0x72, 0x61, 0x70, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x72,
	0x75, 0x69, 0x74, 0x32, 0x4d, 0x61, 0x6e, 0x67, 0x6f, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x46,
	0x72, 0x75, 0x69, 0x74, 0x32, 0x43, 0x68, 0x65, 0x72, 0x72, 0x79, 0x10, 0x04, 0x12, 0x10, 0x0a,
	0x0c, 0x46, 0x72, 0x75, 0x69, 0x74, 0x32, 0x42, 0x61, 0x6e, 0x61, 0x6e, 0x61, 0x10, 0x05, 0x12,
	0x10, 0x0a, 0x0c, 0x46, 0x72, 0x75, 0x69, 0x74, 0x32, 0x4f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x10,
	0x06, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x72, 0x75, 0x69, 0x74, 0x32, 0x50, 0x69, 0x6e, 0x65, 0x61,
	0x70, 0x70, 0x6c, 0x65, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x72, 0x75, 0x69, 0x74, 0x32,
	0x42, 0x6f, 0x6d, 0x62, 0x10, 0x08, 0x42, 0x0f, 0x5a, 0x0d, 0x72, 0x6f, 0x6f, 0x74, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_fruitmary_proto_rawDescOnce sync.Once
	file_protobuf_fruitmary_proto_rawDescData = file_protobuf_fruitmary_proto_rawDesc
)

func file_protobuf_fruitmary_proto_rawDescGZIP() []byte {
	file_protobuf_fruitmary_proto_rawDescOnce.Do(func() {
		file_protobuf_fruitmary_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_fruitmary_proto_rawDescData)
	})
	return file_protobuf_fruitmary_proto_rawDescData
}

var file_protobuf_fruitmary_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protobuf_fruitmary_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_protobuf_fruitmary_proto_goTypes = []interface{}{
	(FRUITMARYMSG)(0),                           // 0: protomsg.FRUITMARYMSG
	(Fruit1ID)(0),                               // 1: protomsg.Fruit1ID
	(Fruit2ID)(0),                               // 2: protomsg.Fruit2ID
	(*ENTER_GAME_FRUITMARY_REQ)(nil),            // 3: protomsg.ENTER_GAME_FRUITMARY_REQ
	(*ENTER_GAME_FRUITMARY_RES)(nil),            // 4: protomsg.ENTER_GAME_FRUITMARY_RES
	(*LEAVE_GAME_FRUITMARY_REQ)(nil),            // 5: protomsg.LEAVE_GAME_FRUITMARY_REQ
	(*LEAVE_GAME_FRUITMARY_RES)(nil),            // 6: protomsg.LEAVE_GAME_FRUITMARY_RES
	(*START_MARY_REQ)(nil),                      // 7: protomsg.START_MARY_REQ
	(*START_MARY_RES)(nil),                      // 8: protomsg.START_MARY_RES
	(*FRUITMARYPosition)(nil),                   // 9: protomsg.FRUITMARY_position
	(*FRUITMARY_Result)(nil),                    // 10: protomsg.FRUITMARY_Result
	(*UPDATE_MARY_BONUS)(nil),                   // 11: protomsg.UPDATE_MARY_BONUS
	(*START_MARY2_REQ)(nil),                     // 12: protomsg.START_MARY2_REQ
	(*START_MARY2_RES)(nil),                     // 13: protomsg.START_MARY2_RES
	(*Mary2_Result)(nil),                        // 14: protomsg.Mary2_Result
	(*NEXT_MARY_RESULT)(nil),                    // 15: protomsg.NEXT_MARY_RESULT
	(*PLAYERS_LIST_RES)(nil),                    // 16: protomsg.PLAYERS_LIST_RES
	(*ENTER_GAME_FRUITMARY_RES_FruitRatio)(nil), // 17: protomsg.ENTER_GAME_FRUITMARY_RES.FruitRatio
	nil,                        // 18: protomsg.ENTER_GAME_FRUITMARY_RES.RatioEntry
	(*AccountStorageData)(nil), // 19: protomsg.AccountStorageData
}
var file_protobuf_fruitmary_proto_depIdxs = []int32{
	18, // 0: protomsg.ENTER_GAME_FRUITMARY_RES.Ratio:type_name -> protomsg.ENTER_GAME_FRUITMARY_RES.RatioEntry
	13, // 1: protomsg.ENTER_GAME_FRUITMARY_RES.Mary2_Result:type_name -> protomsg.START_MARY2_RES
	10, // 2: protomsg.START_MARY_RES.Results:type_name -> protomsg.FRUITMARY_Result
	9,  // 3: protomsg.START_MARY_RES.FeePositions:type_name -> protomsg.FRUITMARY_position
	9,  // 4: protomsg.FRUITMARY_Result.Positions:type_name -> protomsg.FRUITMARY_position
	14, // 5: protomsg.START_MARY2_RES.Result:type_name -> protomsg.Mary2_Result
	19, // 6: protomsg.PLAYERS_LIST_RES.players:type_name -> protomsg.AccountStorageData
	2,  // 7: protomsg.ENTER_GAME_FRUITMARY_RES.FruitRatio.ID:type_name -> protomsg.Fruit2ID
	17, // 8: protomsg.ENTER_GAME_FRUITMARY_RES.RatioEntry.value:type_name -> protomsg.ENTER_GAME_FRUITMARY_RES.FruitRatio
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_protobuf_fruitmary_proto_init() }
func file_protobuf_fruitmary_proto_init() {
	if File_protobuf_fruitmary_proto != nil {
		return
	}
	file_protobuf_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protobuf_fruitmary_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ENTER_GAME_FRUITMARY_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_fruitmary_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ENTER_GAME_FRUITMARY_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_fruitmary_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LEAVE_GAME_FRUITMARY_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_fruitmary_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LEAVE_GAME_FRUITMARY_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_fruitmary_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*START_MARY_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_fruitmary_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*START_MARY_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_fruitmary_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRUITMARYPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_fruitmary_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FRUITMARY_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_fruitmary_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UPDATE_MARY_BONUS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_fruitmary_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*START_MARY2_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_fruitmary_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*START_MARY2_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_fruitmary_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mary2_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_fruitmary_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NEXT_MARY_RESULT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_fruitmary_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PLAYERS_LIST_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_fruitmary_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ENTER_GAME_FRUITMARY_RES_FruitRatio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_fruitmary_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_fruitmary_proto_goTypes,
		DependencyIndexes: file_protobuf_fruitmary_proto_depIdxs,
		EnumInfos:         file_protobuf_fruitmary_proto_enumTypes,
		MessageInfos:      file_protobuf_fruitmary_proto_msgTypes,
	}.Build()
	File_protobuf_fruitmary_proto = out.File
	file_protobuf_fruitmary_proto_rawDesc = nil
	file_protobuf_fruitmary_proto_goTypes = nil
	file_protobuf_fruitmary_proto_depIdxs = nil
}
