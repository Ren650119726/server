// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/hongbao.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 网络消息
type HBMSG int32

const (
	HBMSG_UNKNOW_HB                      HBMSG = 0
	HBMSG_CS_ENTER_GAME_HB_REQ           HBMSG = 19001
	HBMSG_SC_ENTER_GAME_HB_RES           HBMSG = 19002
	HBMSG_CS_LEAVE_GAME_HB_REQ           HBMSG = 19003
	HBMSG_SC_LEAVE_GAME_HB_RES           HBMSG = 19004
	HBMSG_CS_ASSIGN_HB_REQ               HBMSG = 19008
	HBMSG_SC_ASSIGN_HB_RES               HBMSG = 19009
	HBMSG_SC_BROADCAST_NEW_HB            HBMSG = 19010
	HBMSG_CS_GRAB_HB_REQ                 HBMSG = 19015
	HBMSG_SC_GRAB_HB_RES                 HBMSG = 19016
	HBMSG_SC_BROADCAST_UPDATE_HB         HBMSG = 19017
	HBMSG_SC_BROADCAST_UPDATE_PLAYERINFO HBMSG = 19018
	HBMSG_SC_BROADCAST_UPDATE_GRAB       HBMSG = 19019
	HBMSG_SC_BROADCAST_UPDATE_BOMB       HBMSG = 19020
	HBMSG_CS_HB_LIST_REQ                 HBMSG = 19023
	HBMSG_SC_HB_LIST_RES                 HBMSG = 19024
	HBMSG_CS_HB_INFO_REQ                 HBMSG = 19025
	HBMSG_SC_HB_INFO_RES                 HBMSG = 19026
	HBMSG_CS_PLAYERS_HB_LIST_REQ         HBMSG = 19030
	HBMSG_SC_PLAYERS_HB_LIST_RES         HBMSG = 19031
)

var HBMSG_name = map[int32]string{
	0:     "UNKNOW_HB",
	19001: "CS_ENTER_GAME_HB_REQ",
	19002: "SC_ENTER_GAME_HB_RES",
	19003: "CS_LEAVE_GAME_HB_REQ",
	19004: "SC_LEAVE_GAME_HB_RES",
	19008: "CS_ASSIGN_HB_REQ",
	19009: "SC_ASSIGN_HB_RES",
	19010: "SC_BROADCAST_NEW_HB",
	19015: "CS_GRAB_HB_REQ",
	19016: "SC_GRAB_HB_RES",
	19017: "SC_BROADCAST_UPDATE_HB",
	19018: "SC_BROADCAST_UPDATE_PLAYERINFO",
	19019: "SC_BROADCAST_UPDATE_GRAB",
	19020: "SC_BROADCAST_UPDATE_BOMB",
	19023: "CS_HB_LIST_REQ",
	19024: "SC_HB_LIST_RES",
	19025: "CS_HB_INFO_REQ",
	19026: "SC_HB_INFO_RES",
	19030: "CS_PLAYERS_HB_LIST_REQ",
	19031: "SC_PLAYERS_HB_LIST_RES",
}
var HBMSG_value = map[string]int32{
	"UNKNOW_HB":                      0,
	"CS_ENTER_GAME_HB_REQ":           19001,
	"SC_ENTER_GAME_HB_RES":           19002,
	"CS_LEAVE_GAME_HB_REQ":           19003,
	"SC_LEAVE_GAME_HB_RES":           19004,
	"CS_ASSIGN_HB_REQ":               19008,
	"SC_ASSIGN_HB_RES":               19009,
	"SC_BROADCAST_NEW_HB":            19010,
	"CS_GRAB_HB_REQ":                 19015,
	"SC_GRAB_HB_RES":                 19016,
	"SC_BROADCAST_UPDATE_HB":         19017,
	"SC_BROADCAST_UPDATE_PLAYERINFO": 19018,
	"SC_BROADCAST_UPDATE_GRAB":       19019,
	"SC_BROADCAST_UPDATE_BOMB":       19020,
	"CS_HB_LIST_REQ":                 19023,
	"SC_HB_LIST_RES":                 19024,
	"CS_HB_INFO_REQ":                 19025,
	"SC_HB_INFO_RES":                 19026,
	"CS_PLAYERS_HB_LIST_REQ":         19030,
	"SC_PLAYERS_HB_LIST_RES":         19031,
}

func (x HBMSG) String() string {
	return proto.EnumName(HBMSG_name, int32(x))
}
func (HBMSG) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

// 请求进入房间
type ENTER_GAME_HB_REQ struct {
	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	RoomID    uint32 `protobuf:"varint,2,opt,name=RoomID" json:"RoomID,omitempty"`
}

func (m *ENTER_GAME_HB_REQ) Reset()                    { *m = ENTER_GAME_HB_REQ{} }
func (m *ENTER_GAME_HB_REQ) String() string            { return proto.CompactTextString(m) }
func (*ENTER_GAME_HB_REQ) ProtoMessage()               {}
func (*ENTER_GAME_HB_REQ) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *ENTER_GAME_HB_REQ) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *ENTER_GAME_HB_REQ) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type HONGBAO struct {
	ID            uint32           `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	AssignerAccID uint32           `protobuf:"varint,2,opt,name=AssignerAccID" json:"AssignerAccID,omitempty"`
	AssignerName  string           `protobuf:"bytes,3,opt,name=AssignerName" json:"AssignerName,omitempty"`
	Value         uint64           `protobuf:"varint,4,opt,name=Value" json:"Value,omitempty"`
	Count         uint64           `protobuf:"varint,5,opt,name=Count" json:"Count,omitempty"`
	Spare         uint64           `protobuf:"varint,6,opt,name=Spare" json:"Spare,omitempty"`
	BombNumber    uint64           `protobuf:"varint,7,opt,name=BombNumber" json:"BombNumber,omitempty"`
	Time          string           `protobuf:"bytes,8,opt,name=Time" json:"Time,omitempty"`
	Profits       map[uint32]int64 `protobuf:"bytes,9,rep,name=profits" json:"profits,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *HONGBAO) Reset()                    { *m = HONGBAO{} }
func (m *HONGBAO) String() string            { return proto.CompactTextString(m) }
func (*HONGBAO) ProtoMessage()               {}
func (*HONGBAO) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *HONGBAO) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *HONGBAO) GetAssignerAccID() uint32 {
	if m != nil {
		return m.AssignerAccID
	}
	return 0
}

func (m *HONGBAO) GetAssignerName() string {
	if m != nil {
		return m.AssignerName
	}
	return ""
}

func (m *HONGBAO) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *HONGBAO) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *HONGBAO) GetSpare() uint64 {
	if m != nil {
		return m.Spare
	}
	return 0
}

func (m *HONGBAO) GetBombNumber() uint64 {
	if m != nil {
		return m.BombNumber
	}
	return 0
}

func (m *HONGBAO) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *HONGBAO) GetProfits() map[uint32]int64 {
	if m != nil {
		return m.Profits
	}
	return nil
}

type ENTER_GAME_HB_RES struct {
	RoomID         uint32                `protobuf:"varint,1,opt,name=RoomID" json:"RoomID,omitempty"`
	HongBaoList    []*HONGBAO            `protobuf:"bytes,2,rep,name=HongBaoList" json:"HongBaoList,omitempty"`
	LuckPlayer     *AccountStorageData   `protobuf:"bytes,3,opt,name=luckPlayer" json:"luckPlayer,omitempty"`
	BigWealth      *AccountStorageData   `protobuf:"bytes,4,opt,name=bigWealth" json:"bigWealth,omitempty"`
	RankPlayers    []*AccountStorageData `protobuf:"bytes,5,rep,name=RankPlayers" json:"RankPlayers,omitempty"`
	Conf_MinValue  uint64                `protobuf:"varint,6,opt,name=Conf_MinValue,json=ConfMinValue" json:"Conf_MinValue,omitempty"`
	Conf_MaxValue  uint64                `protobuf:"varint,7,opt,name=Conf_MaxValue,json=ConfMaxValue" json:"Conf_MaxValue,omitempty"`
	Conf_OnceCount uint32                `protobuf:"varint,8,opt,name=Conf_OnceCount,json=ConfOnceCount" json:"Conf_OnceCount,omitempty"`
	Conf_Pump      uint32                `protobuf:"varint,9,opt,name=Conf_Pump,json=ConfPump" json:"Conf_Pump,omitempty"`
	Ratio          map[uint32]int64      `protobuf:"bytes,10,rep,name=ratio" json:"ratio,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MaxSize        uint64                `protobuf:"varint,11,opt,name=maxSize" json:"maxSize,omitempty"`
}

func (m *ENTER_GAME_HB_RES) Reset()                    { *m = ENTER_GAME_HB_RES{} }
func (m *ENTER_GAME_HB_RES) String() string            { return proto.CompactTextString(m) }
func (*ENTER_GAME_HB_RES) ProtoMessage()               {}
func (*ENTER_GAME_HB_RES) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *ENTER_GAME_HB_RES) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *ENTER_GAME_HB_RES) GetHongBaoList() []*HONGBAO {
	if m != nil {
		return m.HongBaoList
	}
	return nil
}

func (m *ENTER_GAME_HB_RES) GetLuckPlayer() *AccountStorageData {
	if m != nil {
		return m.LuckPlayer
	}
	return nil
}

func (m *ENTER_GAME_HB_RES) GetBigWealth() *AccountStorageData {
	if m != nil {
		return m.BigWealth
	}
	return nil
}

func (m *ENTER_GAME_HB_RES) GetRankPlayers() []*AccountStorageData {
	if m != nil {
		return m.RankPlayers
	}
	return nil
}

func (m *ENTER_GAME_HB_RES) GetConf_MinValue() uint64 {
	if m != nil {
		return m.Conf_MinValue
	}
	return 0
}

func (m *ENTER_GAME_HB_RES) GetConf_MaxValue() uint64 {
	if m != nil {
		return m.Conf_MaxValue
	}
	return 0
}

func (m *ENTER_GAME_HB_RES) GetConf_OnceCount() uint32 {
	if m != nil {
		return m.Conf_OnceCount
	}
	return 0
}

func (m *ENTER_GAME_HB_RES) GetConf_Pump() uint32 {
	if m != nil {
		return m.Conf_Pump
	}
	return 0
}

func (m *ENTER_GAME_HB_RES) GetRatio() map[uint32]int64 {
	if m != nil {
		return m.Ratio
	}
	return nil
}

func (m *ENTER_GAME_HB_RES) GetMaxSize() uint64 {
	if m != nil {
		return m.MaxSize
	}
	return 0
}

// 请求退出房间
type LEAVE_GAME_HB_REQ struct {
	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	RoomID    uint32 `protobuf:"varint,2,opt,name=RoomID" json:"RoomID,omitempty"`
}

func (m *LEAVE_GAME_HB_REQ) Reset()                    { *m = LEAVE_GAME_HB_REQ{} }
func (m *LEAVE_GAME_HB_REQ) String() string            { return proto.CompactTextString(m) }
func (*LEAVE_GAME_HB_REQ) ProtoMessage()               {}
func (*LEAVE_GAME_HB_REQ) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func (m *LEAVE_GAME_HB_REQ) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *LEAVE_GAME_HB_REQ) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type LEAVE_GAME_HB_RES struct {
	Ret    uint32 `protobuf:"varint,1,opt,name=Ret" json:"Ret,omitempty"`
	RoomID uint32 `protobuf:"varint,2,opt,name=RoomID" json:"RoomID,omitempty"`
}

func (m *LEAVE_GAME_HB_RES) Reset()                    { *m = LEAVE_GAME_HB_RES{} }
func (m *LEAVE_GAME_HB_RES) String() string            { return proto.CompactTextString(m) }
func (*LEAVE_GAME_HB_RES) ProtoMessage()               {}
func (*LEAVE_GAME_HB_RES) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{4} }

func (m *LEAVE_GAME_HB_RES) GetRet() uint32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *LEAVE_GAME_HB_RES) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

// 发红包
type ASSIGN_HB_REQ struct {
	AccountID  uint32 `protobuf:"varint,1,opt,name=accountID" json:"accountID,omitempty"`
	Value      uint64 `protobuf:"varint,2,opt,name=Value" json:"Value,omitempty"`
	Count      uint32 `protobuf:"varint,3,opt,name=Count" json:"Count,omitempty"`
	BombNumber uint32 `protobuf:"varint,4,opt,name=BombNumber" json:"BombNumber,omitempty"`
	Num        uint32 `protobuf:"varint,5,opt,name=Num" json:"Num,omitempty"`
}

func (m *ASSIGN_HB_REQ) Reset()                    { *m = ASSIGN_HB_REQ{} }
func (m *ASSIGN_HB_REQ) String() string            { return proto.CompactTextString(m) }
func (*ASSIGN_HB_REQ) ProtoMessage()               {}
func (*ASSIGN_HB_REQ) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{5} }

func (m *ASSIGN_HB_REQ) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *ASSIGN_HB_REQ) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *ASSIGN_HB_REQ) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ASSIGN_HB_REQ) GetBombNumber() uint32 {
	if m != nil {
		return m.BombNumber
	}
	return 0
}

func (m *ASSIGN_HB_REQ) GetNum() uint32 {
	if m != nil {
		return m.Num
	}
	return 0
}

// 返回发红包结果
type ASSIGN_HB_RES struct {
	Ret uint64 `protobuf:"varint,1,opt,name=Ret" json:"Ret,omitempty"`
}

func (m *ASSIGN_HB_RES) Reset()                    { *m = ASSIGN_HB_RES{} }
func (m *ASSIGN_HB_RES) String() string            { return proto.CompactTextString(m) }
func (*ASSIGN_HB_RES) ProtoMessage()               {}
func (*ASSIGN_HB_RES) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{6} }

func (m *ASSIGN_HB_RES) GetRet() uint64 {
	if m != nil {
		return m.Ret
	}
	return 0
}

// 服务器广播添加一个新红包
type BROADCAST_NEW_HB struct {
	New *HONGBAO `protobuf:"bytes,1,opt,name=new" json:"new,omitempty"`
}

func (m *BROADCAST_NEW_HB) Reset()                    { *m = BROADCAST_NEW_HB{} }
func (m *BROADCAST_NEW_HB) String() string            { return proto.CompactTextString(m) }
func (*BROADCAST_NEW_HB) ProtoMessage()               {}
func (*BROADCAST_NEW_HB) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{7} }

func (m *BROADCAST_NEW_HB) GetNew() *HONGBAO {
	if m != nil {
		return m.New
	}
	return nil
}

// 抢红包
type GRAB_HB_REQ struct {
	AccountID uint32 `protobuf:"varint,1,opt,name=accountID" json:"accountID,omitempty"`
	ID        uint32 `protobuf:"varint,2,opt,name=ID" json:"ID,omitempty"`
}

func (m *GRAB_HB_REQ) Reset()                    { *m = GRAB_HB_REQ{} }
func (m *GRAB_HB_REQ) String() string            { return proto.CompactTextString(m) }
func (*GRAB_HB_REQ) ProtoMessage()               {}
func (*GRAB_HB_REQ) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{8} }

func (m *GRAB_HB_REQ) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *GRAB_HB_REQ) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

// 返回抢红包结果
type GRAB_HB_RES struct {
	Ret uint64 `protobuf:"varint,1,opt,name=Ret" json:"Ret,omitempty"`
}

func (m *GRAB_HB_RES) Reset()                    { *m = GRAB_HB_RES{} }
func (m *GRAB_HB_RES) String() string            { return proto.CompactTextString(m) }
func (*GRAB_HB_RES) ProtoMessage()               {}
func (*GRAB_HB_RES) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{9} }

func (m *GRAB_HB_RES) GetRet() uint64 {
	if m != nil {
		return m.Ret
	}
	return 0
}

// 服务器广播更新红包包数信息
type BROADCAST_UPDATE_HB struct {
	ID    uint32 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Spare uint32 `protobuf:"varint,2,opt,name=Spare" json:"Spare,omitempty"`
}

func (m *BROADCAST_UPDATE_HB) Reset()                    { *m = BROADCAST_UPDATE_HB{} }
func (m *BROADCAST_UPDATE_HB) String() string            { return proto.CompactTextString(m) }
func (*BROADCAST_UPDATE_HB) ProtoMessage()               {}
func (*BROADCAST_UPDATE_HB) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{10} }

func (m *BROADCAST_UPDATE_HB) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *BROADCAST_UPDATE_HB) GetSpare() uint32 {
	if m != nil {
		return m.Spare
	}
	return 0
}

// 服务器广播更新玩家信息
type BROADCAST_UPDATE_PLAYERINFO struct {
	LuckPlayer  *AccountStorageData   `protobuf:"bytes,1,opt,name=luckPlayer" json:"luckPlayer,omitempty"`
	BigWealth   *AccountStorageData   `protobuf:"bytes,2,opt,name=bigWealth" json:"bigWealth,omitempty"`
	RankPlayers []*AccountStorageData `protobuf:"bytes,3,rep,name=RankPlayers" json:"RankPlayers,omitempty"`
}

func (m *BROADCAST_UPDATE_PLAYERINFO) Reset()                    { *m = BROADCAST_UPDATE_PLAYERINFO{} }
func (m *BROADCAST_UPDATE_PLAYERINFO) String() string            { return proto.CompactTextString(m) }
func (*BROADCAST_UPDATE_PLAYERINFO) ProtoMessage()               {}
func (*BROADCAST_UPDATE_PLAYERINFO) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{11} }

func (m *BROADCAST_UPDATE_PLAYERINFO) GetLuckPlayer() *AccountStorageData {
	if m != nil {
		return m.LuckPlayer
	}
	return nil
}

func (m *BROADCAST_UPDATE_PLAYERINFO) GetBigWealth() *AccountStorageData {
	if m != nil {
		return m.BigWealth
	}
	return nil
}

func (m *BROADCAST_UPDATE_PLAYERINFO) GetRankPlayers() []*AccountStorageData {
	if m != nil {
		return m.RankPlayers
	}
	return nil
}

// 服务器广播玩家抢红包盈利
type BROADCAST_UPDATE_GRAB struct {
	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	HbID      uint32 `protobuf:"varint,2,opt,name=HbID" json:"HbID,omitempty"`
	Profit    int64  `protobuf:"varint,3,opt,name=Profit" json:"Profit,omitempty"`
}

func (m *BROADCAST_UPDATE_GRAB) Reset()                    { *m = BROADCAST_UPDATE_GRAB{} }
func (m *BROADCAST_UPDATE_GRAB) String() string            { return proto.CompactTextString(m) }
func (*BROADCAST_UPDATE_GRAB) ProtoMessage()               {}
func (*BROADCAST_UPDATE_GRAB) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{12} }

func (m *BROADCAST_UPDATE_GRAB) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *BROADCAST_UPDATE_GRAB) GetHbID() uint32 {
	if m != nil {
		return m.HbID
	}
	return 0
}

func (m *BROADCAST_UPDATE_GRAB) GetProfit() int64 {
	if m != nil {
		return m.Profit
	}
	return 0
}

// 服务器广播玩家发红包盈利
type BROADCAST_UPDATE_BOMB struct {
	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	HbID      uint32 `protobuf:"varint,2,opt,name=HbID" json:"HbID,omitempty"`
	Profit    int64  `protobuf:"varint,3,opt,name=Profit" json:"Profit,omitempty"`
}

func (m *BROADCAST_UPDATE_BOMB) Reset()                    { *m = BROADCAST_UPDATE_BOMB{} }
func (m *BROADCAST_UPDATE_BOMB) String() string            { return proto.CompactTextString(m) }
func (*BROADCAST_UPDATE_BOMB) ProtoMessage()               {}
func (*BROADCAST_UPDATE_BOMB) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{13} }

func (m *BROADCAST_UPDATE_BOMB) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *BROADCAST_UPDATE_BOMB) GetHbID() uint32 {
	if m != nil {
		return m.HbID
	}
	return 0
}

func (m *BROADCAST_UPDATE_BOMB) GetProfit() int64 {
	if m != nil {
		return m.Profit
	}
	return 0
}

// 请求HB玩家列表
type PLAYERS_HB_LIST_RES struct {
	Players []*AccountStorageData `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
}

func (m *PLAYERS_HB_LIST_RES) Reset()                    { *m = PLAYERS_HB_LIST_RES{} }
func (m *PLAYERS_HB_LIST_RES) String() string            { return proto.CompactTextString(m) }
func (*PLAYERS_HB_LIST_RES) ProtoMessage()               {}
func (*PLAYERS_HB_LIST_RES) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{14} }

func (m *PLAYERS_HB_LIST_RES) GetPlayers() []*AccountStorageData {
	if m != nil {
		return m.Players
	}
	return nil
}

// 请求发红包列表
type HB_LIST_REQ struct {
}

func (m *HB_LIST_REQ) Reset()                    { *m = HB_LIST_REQ{} }
func (m *HB_LIST_REQ) String() string            { return proto.CompactTextString(m) }
func (*HB_LIST_REQ) ProtoMessage()               {}
func (*HB_LIST_REQ) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{15} }

// 红包列表
type HB_LIST_RES struct {
	List []*HONGBAO `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *HB_LIST_RES) Reset()                    { *m = HB_LIST_RES{} }
func (m *HB_LIST_RES) String() string            { return proto.CompactTextString(m) }
func (*HB_LIST_RES) ProtoMessage()               {}
func (*HB_LIST_RES) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{16} }

func (m *HB_LIST_RES) GetList() []*HONGBAO {
	if m != nil {
		return m.List
	}
	return nil
}

// 请求HB详细信息
type HB_INFO_REQ struct {
	HbID uint32 `protobuf:"varint,1,opt,name=HbID" json:"HbID,omitempty"`
}

func (m *HB_INFO_REQ) Reset()                    { *m = HB_INFO_REQ{} }
func (m *HB_INFO_REQ) String() string            { return proto.CompactTextString(m) }
func (*HB_INFO_REQ) ProtoMessage()               {}
func (*HB_INFO_REQ) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{17} }

func (m *HB_INFO_REQ) GetHbID() uint32 {
	if m != nil {
		return m.HbID
	}
	return 0
}

// 请求HB详细信息
type HB_INFO_RES struct {
	HbID uint32                    `protobuf:"varint,1,opt,name=HbID" json:"HbID,omitempty"`
	List []*HB_INFO_RES_HBGrabInfo `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *HB_INFO_RES) Reset()                    { *m = HB_INFO_RES{} }
func (m *HB_INFO_RES) String() string            { return proto.CompactTextString(m) }
func (*HB_INFO_RES) ProtoMessage()               {}
func (*HB_INFO_RES) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{18} }

func (m *HB_INFO_RES) GetHbID() uint32 {
	if m != nil {
		return m.HbID
	}
	return 0
}

func (m *HB_INFO_RES) GetList() []*HB_INFO_RES_HBGrabInfo {
	if m != nil {
		return m.List
	}
	return nil
}

type HB_INFO_RES_HBGrabInfo struct {
	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Profit    int64  `protobuf:"varint,3,opt,name=profit" json:"profit,omitempty"`
}

func (m *HB_INFO_RES_HBGrabInfo) Reset()                    { *m = HB_INFO_RES_HBGrabInfo{} }
func (m *HB_INFO_RES_HBGrabInfo) String() string            { return proto.CompactTextString(m) }
func (*HB_INFO_RES_HBGrabInfo) ProtoMessage()               {}
func (*HB_INFO_RES_HBGrabInfo) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{18, 0} }

func (m *HB_INFO_RES_HBGrabInfo) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *HB_INFO_RES_HBGrabInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HB_INFO_RES_HBGrabInfo) GetProfit() int64 {
	if m != nil {
		return m.Profit
	}
	return 0
}

func init() {
	proto.RegisterType((*ENTER_GAME_HB_REQ)(nil), "protomsg.ENTER_GAME_HB_REQ")
	proto.RegisterType((*HONGBAO)(nil), "protomsg.HONGBAO")
	proto.RegisterType((*ENTER_GAME_HB_RES)(nil), "protomsg.ENTER_GAME_HB_RES")
	proto.RegisterType((*LEAVE_GAME_HB_REQ)(nil), "protomsg.LEAVE_GAME_HB_REQ")
	proto.RegisterType((*LEAVE_GAME_HB_RES)(nil), "protomsg.LEAVE_GAME_HB_RES")
	proto.RegisterType((*ASSIGN_HB_REQ)(nil), "protomsg.ASSIGN_HB_REQ")
	proto.RegisterType((*ASSIGN_HB_RES)(nil), "protomsg.ASSIGN_HB_RES")
	proto.RegisterType((*BROADCAST_NEW_HB)(nil), "protomsg.BROADCAST_NEW_HB")
	proto.RegisterType((*GRAB_HB_REQ)(nil), "protomsg.GRAB_HB_REQ")
	proto.RegisterType((*GRAB_HB_RES)(nil), "protomsg.GRAB_HB_RES")
	proto.RegisterType((*BROADCAST_UPDATE_HB)(nil), "protomsg.BROADCAST_UPDATE_HB")
	proto.RegisterType((*BROADCAST_UPDATE_PLAYERINFO)(nil), "protomsg.BROADCAST_UPDATE_PLAYERINFO")
	proto.RegisterType((*BROADCAST_UPDATE_GRAB)(nil), "protomsg.BROADCAST_UPDATE_GRAB")
	proto.RegisterType((*BROADCAST_UPDATE_BOMB)(nil), "protomsg.BROADCAST_UPDATE_BOMB")
	proto.RegisterType((*PLAYERS_HB_LIST_RES)(nil), "protomsg.PLAYERS_HB_LIST_RES")
	proto.RegisterType((*HB_LIST_REQ)(nil), "protomsg.HB_LIST_REQ")
	proto.RegisterType((*HB_LIST_RES)(nil), "protomsg.HB_LIST_RES")
	proto.RegisterType((*HB_INFO_REQ)(nil), "protomsg.HB_INFO_REQ")
	proto.RegisterType((*HB_INFO_RES)(nil), "protomsg.HB_INFO_RES")
	proto.RegisterType((*HB_INFO_RES_HBGrabInfo)(nil), "protomsg.HB_INFO_RES.HBGrabInfo")
	proto.RegisterEnum("protomsg.HBMSG", HBMSG_name, HBMSG_value)
}

func init() { proto.RegisterFile("protobuf/hongbao.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 1069 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x4f, 0x6f, 0x1b, 0x45,
	0x14, 0x67, 0x6c, 0x27, 0x8e, 0x9f, 0xeb, 0x30, 0x99, 0x84, 0x68, 0x49, 0xa3, 0x90, 0x6e, 0x5b,
	0x14, 0x71, 0x70, 0xa5, 0xb6, 0x82, 0x28, 0x2d, 0x48, 0xbb, 0x6b, 0x63, 0x5b, 0x24, 0xeb, 0x64,
	0x27, 0x4d, 0x05, 0x97, 0xd5, 0xda, 0x6c, 0x5c, 0xab, 0xf6, 0xae, 0xb5, 0x5e, 0x43, 0xc3, 0x57,
	0xe0, 0x6a, 0x3e, 0x07, 0x67, 0x0a, 0x07, 0xe0, 0xc2, 0x5f, 0xa9, 0xc0, 0x81, 0x7e, 0x1d, 0x34,
	0x33, 0xfb, 0x67, 0x9c, 0x75, 0x48, 0xab, 0xf6, 0xe4, 0x79, 0xbf, 0xf7, 0x7b, 0x33, 0xef, 0xff,
	0x1a, 0xd6, 0x47, 0x81, 0x1f, 0xfa, 0x9d, 0xc9, 0xe9, 0xad, 0x47, 0xbe, 0xd7, 0xeb, 0x38, 0x7e,
	0x95, 0x03, 0x64, 0x89, 0xff, 0x0c, 0xc7, 0xbd, 0x8d, 0xd5, 0x84, 0xf1, 0xb9, 0x13, 0x3a, 0x42,
	0xad, 0xb6, 0x60, 0xa5, 0x6e, 0x1e, 0xd7, 0x2d, 0xbb, 0xa1, 0x1d, 0xd4, 0xed, 0xa6, 0x6e, 0x5b,
	0xf5, 0x23, 0xb2, 0x09, 0x25, 0xad, 0xdb, 0xf5, 0x27, 0x5e, 0xd8, 0xaa, 0x29, 0x68, 0x1b, 0xed,
	0x54, 0xac, 0x14, 0x20, 0xeb, 0xb0, 0x68, 0xf9, 0xfe, 0xb0, 0x55, 0x53, 0x72, 0x5c, 0x15, 0x49,
	0xea, 0xb3, 0x1c, 0x14, 0x9b, 0x6d, 0xb3, 0xa1, 0x6b, 0x6d, 0xb2, 0x0c, 0xb9, 0xc4, 0x34, 0xd7,
	0xaa, 0x91, 0x1b, 0x50, 0xd1, 0xc6, 0xe3, 0x7e, 0xcf, 0x73, 0x03, 0xad, 0xdb, 0x4d, 0x4c, 0x67,
	0x41, 0xa2, 0xc2, 0x95, 0x18, 0x30, 0x9d, 0xa1, 0xab, 0xe4, 0xb7, 0xd1, 0x4e, 0xc9, 0x9a, 0xc1,
	0xc8, 0x1a, 0x2c, 0x9c, 0x38, 0x83, 0x89, 0xab, 0x14, 0xb6, 0xd1, 0x4e, 0xc1, 0x12, 0x02, 0x43,
	0x0d, 0xe6, 0x9e, 0xb2, 0x20, 0x50, 0x2e, 0x30, 0x94, 0x8e, 0x9c, 0xc0, 0x55, 0x16, 0x05, 0xca,
	0x05, 0xb2, 0x05, 0xa0, 0xfb, 0xc3, 0x8e, 0x39, 0x19, 0x76, 0xdc, 0x40, 0x29, 0x72, 0x95, 0x84,
	0x10, 0x02, 0x85, 0xe3, 0xfe, 0xd0, 0x55, 0x96, 0xf8, 0xeb, 0xfc, 0x4c, 0x76, 0xa1, 0x38, 0x0a,
	0xfc, 0xd3, 0x7e, 0x38, 0x56, 0x4a, 0xdb, 0xf9, 0x9d, 0xf2, 0xed, 0xad, 0x6a, 0x9c, 0xd7, 0x6a,
	0x14, 0x73, 0xf5, 0x50, 0x10, 0xea, 0x5e, 0x18, 0x9c, 0x59, 0x31, 0x7d, 0x63, 0x0f, 0xae, 0xc8,
	0x0a, 0x82, 0x21, 0xff, 0xd8, 0x3d, 0x8b, 0x52, 0xc3, 0x8e, 0xcc, 0xcb, 0x2f, 0x78, 0x44, 0x2c,
	0x27, 0x79, 0x4b, 0x08, 0x7b, 0xb9, 0x5d, 0xa4, 0x3e, 0x2d, 0x64, 0xab, 0x43, 0xa5, 0xfc, 0x23,
	0x39, 0xff, 0xe4, 0x0e, 0x94, 0x9b, 0xbe, 0xd7, 0xd3, 0x1d, 0x7f, 0xbf, 0x3f, 0x0e, 0x95, 0x1c,
	0xf7, 0x73, 0x25, 0xe3, 0xa7, 0x25, 0xb3, 0xc8, 0x7d, 0x80, 0xc1, 0xa4, 0xfb, 0xf8, 0x70, 0xe0,
	0x9c, 0xb9, 0x01, 0x4f, 0x78, 0xf9, 0xf6, 0x66, 0x6a, 0x13, 0x55, 0x9d, 0x86, 0x7e, 0xe0, 0xf4,
	0xdc, 0x9a, 0x13, 0x3a, 0x96, 0xc4, 0x27, 0x7b, 0x50, 0xea, 0xf4, 0x7b, 0x0f, 0x5d, 0x67, 0x10,
	0x3e, 0xe2, 0x05, 0xb9, 0xcc, 0x38, 0xa5, 0x93, 0x8f, 0xa0, 0x6c, 0x39, 0x5e, 0x74, 0xd3, 0x58,
	0x59, 0xe0, 0xee, 0xfe, 0xbf, 0xb5, 0x6c, 0x40, 0xae, 0x43, 0xc5, 0xf0, 0xbd, 0x53, 0xfb, 0xa0,
	0xef, 0x89, 0x86, 0x10, 0x45, 0xbe, 0xc2, 0xc0, 0x18, 0x4b, 0x49, 0xce, 0x13, 0x41, 0x2a, 0x4a,
	0xa4, 0x08, 0x23, 0x37, 0x61, 0x99, 0x93, 0xda, 0x5e, 0xd7, 0x15, 0x5d, 0xb4, 0x24, 0xba, 0x93,
	0xa1, 0x09, 0x48, 0xae, 0x42, 0x89, 0xd3, 0x0e, 0x27, 0xc3, 0x91, 0x52, 0xe2, 0x8c, 0x25, 0x06,
	0x30, 0x99, 0xdc, 0x87, 0x85, 0xc0, 0x09, 0xfb, 0xbe, 0x02, 0x3c, 0x8e, 0x77, 0xd3, 0x38, 0x32,
	0x05, 0xac, 0x5a, 0x8c, 0x28, 0xda, 0x44, 0x18, 0x11, 0x05, 0x8a, 0x43, 0xe7, 0x09, 0xed, 0x7f,
	0xe5, 0x2a, 0x65, 0xee, 0x60, 0x2c, 0x6e, 0xec, 0x02, 0xa4, 0xf4, 0x97, 0x6a, 0x9e, 0x16, 0xac,
	0xec, 0xd7, 0xb5, 0x93, 0xfa, 0x6b, 0x98, 0xec, 0x0f, 0xb3, 0x57, 0x51, 0xe6, 0x8b, 0xe5, 0x86,
	0xb1, 0x2f, 0x96, 0x1b, 0x5e, 0x68, 0xfe, 0x35, 0x82, 0x8a, 0x46, 0x69, 0xab, 0x61, 0x4a, 0x6e,
	0x38, 0xe7, 0xdd, 0x48, 0x80, 0x74, 0xc4, 0x73, 0x73, 0x47, 0x3c, 0xcf, 0xf9, 0xd1, 0x88, 0xcf,
	0x0e, 0x73, 0x81, 0xab, 0xe4, 0x61, 0xc6, 0x90, 0x37, 0x27, 0x43, 0xbe, 0x16, 0x2a, 0x16, 0x3b,
	0xaa, 0xd7, 0x66, 0x9d, 0x99, 0x09, 0xa4, 0xc0, 0x03, 0x51, 0x3f, 0x00, 0xac, 0x5b, 0x6d, 0xad,
	0x66, 0x68, 0xf4, 0xd8, 0x36, 0xeb, 0x0f, 0xed, 0xa6, 0x4e, 0xae, 0x43, 0xde, 0x73, 0xbf, 0xe4,
	0xac, 0xb9, 0x53, 0xc5, 0xb4, 0xea, 0x3d, 0x28, 0x37, 0x2c, 0x4d, 0x7f, 0xb1, 0x30, 0xc5, 0x8e,
	0xcc, 0xc5, 0x3b, 0x52, 0x7d, 0x47, 0x36, 0x9e, 0xe7, 0xd6, 0x3d, 0x58, 0x4d, 0xdd, 0x7a, 0x70,
	0x58, 0xd3, 0x8e, 0x59, 0x31, 0x32, 0xbb, 0x36, 0xd9, 0x7a, 0xe2, 0x6a, 0x21, 0xa8, 0xcf, 0x11,
	0x5c, 0xcd, 0x58, 0x1f, 0xee, 0x6b, 0x9f, 0xd6, 0xad, 0x96, 0xf9, 0x71, 0xfb, 0xdc, 0x22, 0x40,
	0xaf, 0xb2, 0x08, 0x72, 0xaf, 0xb4, 0x08, 0xf2, 0x2f, 0xb9, 0x08, 0x54, 0x07, 0xde, 0xca, 0x04,
	0xc6, 0x12, 0x79, 0x49, 0xb3, 0x13, 0x28, 0x34, 0x3b, 0x49, 0x01, 0xf8, 0x99, 0x75, 0xb0, 0x58,
	0xd6, 0xbc, 0xc9, 0xf2, 0x56, 0x24, 0xcd, 0x7d, 0x42, 0x6f, 0x1f, 0xbc, 0xce, 0x27, 0x0e, 0x60,
	0x55, 0x54, 0x83, 0xb2, 0x06, 0xd8, 0x6f, 0xd1, 0x63, 0xde, 0x05, 0xef, 0x43, 0x71, 0x14, 0x25,
	0x06, 0xbd, 0x40, 0x62, 0x62, 0xb2, 0x5a, 0x81, 0x72, 0x7a, 0xcd, 0x91, 0x7a, 0x57, 0x16, 0x29,
	0xb9, 0x09, 0x85, 0x01, 0xfb, 0x46, 0xa0, 0x8b, 0xbe, 0x11, 0x5c, 0xad, 0x5e, 0xe3, 0x56, 0xac,
	0x3d, 0x78, 0x3b, 0xc7, 0xe1, 0xa0, 0x34, 0x1c, 0xf5, 0x5b, 0x24, 0x73, 0xe8, 0x3c, 0x0e, 0xb9,
	0x1b, 0xbd, 0x26, 0xbe, 0x48, 0xdb, 0xd2, 0x6b, 0xa9, 0x61, 0xb5, 0xa9, 0x37, 0x02, 0xa7, 0xd3,
	0xf2, 0x4e, 0x7d, 0xf1, 0xf8, 0xc6, 0x09, 0x40, 0x8a, 0x5d, 0x9e, 0x68, 0xfe, 0x87, 0x21, 0x27,
	0x3e, 0xd9, 0xfc, 0x8f, 0xc2, 0x3a, 0x2c, 0x8e, 0x66, 0x12, 0x2d, 0xa4, 0xf7, 0xbe, 0x29, 0xc0,
	0x42, 0x53, 0x3f, 0xa0, 0x0d, 0x52, 0x81, 0xd2, 0x03, 0xf3, 0x13, 0xb3, 0xcd, 0xe6, 0x1b, 0xbf,
	0x41, 0x36, 0x60, 0xcd, 0xa0, 0x76, 0xe6, 0xdf, 0x10, 0xfe, 0x6e, 0x8a, 0x98, 0x8e, 0x1a, 0x19,
	0x1d, 0xc5, 0x4f, 0x85, 0xce, 0xa0, 0x76, 0x66, 0xd7, 0xe2, 0xef, 0x13, 0xbb, 0xcc, 0xf2, 0xc4,
	0x3f, 0x4c, 0x11, 0x59, 0x07, 0x6c, 0x50, 0x7b, 0x66, 0x31, 0xe2, 0x1f, 0x05, 0x4e, 0x8d, 0x19,
	0x9c, 0xe2, 0x9f, 0xa6, 0x88, 0xbc, 0x0d, 0xab, 0xd4, 0xb0, 0xcf, 0x2f, 0x26, 0xfc, 0xf3, 0x14,
	0x91, 0x35, 0x58, 0x36, 0xa8, 0x2d, 0xad, 0x1e, 0xfc, 0x8b, 0x40, 0xa9, 0x21, 0xa1, 0x14, 0xff,
	0x3a, 0x45, 0x64, 0x13, 0xd6, 0x67, 0xae, 0x49, 0x16, 0x09, 0xfe, 0x6d, 0x8a, 0xc8, 0x0d, 0xd8,
	0x9a, 0xa7, 0x4d, 0x17, 0x05, 0xfe, 0x7d, 0x8a, 0xc8, 0x16, 0x28, 0xf3, 0x58, 0xec, 0x29, 0xfc,
	0xc7, 0xc5, 0x7a, 0x36, 0x32, 0xf8, 0xcf, 0xc4, 0x5f, 0xa9, 0x41, 0xf1, 0xb3, 0xc4, 0x5f, 0xa9,
	0x4f, 0xf1, 0x5f, 0x32, 0x37, 0xee, 0x43, 0xfc, 0xb7, 0xcc, 0x8d, 0x1b, 0x08, 0xff, 0x23, 0x62,
	0x33, 0xa8, 0x9d, 0x9d, 0xa3, 0x23, 0xfc, 0x6f, 0x12, 0xf9, 0x9c, 0x29, 0xc3, 0xcf, 0xa7, 0x48,
	0x7f, 0xf3, 0xb3, 0x4a, 0xe0, 0xfb, 0xe1, 0xad, 0xb8, 0x3b, 0x3b, 0x8b, 0xfc, 0x74, 0xe7, 0xbf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xd3, 0xf2, 0x49, 0x01, 0x5a, 0x0b, 0x00, 0x00,
}
