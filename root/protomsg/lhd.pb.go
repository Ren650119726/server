// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: protobuf/lhd.proto

package protomsg

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

////////////////////////////////////////////////////// 网络消息 /////////////////////////////////////////////////////////////
type LHDMSG int32

const (
	LHDMSG_UNKNOW_LHD                          LHDMSG = 0
	LHDMSG_CS_ENTER_GAME_LHD_REQ               LHDMSG = 17001 // 玩家请求进入房间
	LHDMSG_SC_ENTER_GAME_LHD_RES               LHDMSG = 17002
	LHDMSG_CS_LEAVE_GAME_LHD_REQ               LHDMSG = 17003 // 玩家请求退出房间
	LHDMSG_SC_LEAVE_GAME_LHD_RES               LHDMSG = 17004
	LHDMSG_CS_BET_LHD_REQ                      LHDMSG = 17008 // 请求下注
	LHDMSG_SC_BET_LHD_RES                      LHDMSG = 17009
	LHDMSG_CS_CLEAN_BET_LHD_REQ                LHDMSG = 17010 // 请求清除下注
	LHDMSG_SC_CLEAN_BET_LHD_RES                LHDMSG = 17011
	LHDMSG_CS_PLAYERS_LHD_LIST_REQ             LHDMSG = 17015 // 请求在线玩家列表
	LHDMSG_SC_PLAYERS_LHD_LIST_RES             LHDMSG = 17016
	LHDMSG_SC_SWITCH_GAME_STATUS_BROADCAST_LHD LHDMSG = 17020 // 服务器主动广播，切换状态消息
	LHDMSG_SC_CLEAN_HISTORY_BROADCAST_LHD      LHDMSG = 17021 // 服务器主动广播，清除历史记录
)

// Enum value maps for LHDMSG.
var (
	LHDMSG_name = map[int32]string{
		0:     "UNKNOW_LHD",
		17001: "CS_ENTER_GAME_LHD_REQ",
		17002: "SC_ENTER_GAME_LHD_RES",
		17003: "CS_LEAVE_GAME_LHD_REQ",
		17004: "SC_LEAVE_GAME_LHD_RES",
		17008: "CS_BET_LHD_REQ",
		17009: "SC_BET_LHD_RES",
		17010: "CS_CLEAN_BET_LHD_REQ",
		17011: "SC_CLEAN_BET_LHD_RES",
		17015: "CS_PLAYERS_LHD_LIST_REQ",
		17016: "SC_PLAYERS_LHD_LIST_RES",
		17020: "SC_SWITCH_GAME_STATUS_BROADCAST_LHD",
		17021: "SC_CLEAN_HISTORY_BROADCAST_LHD",
	}
	LHDMSG_value = map[string]int32{
		"UNKNOW_LHD":                          0,
		"CS_ENTER_GAME_LHD_REQ":               17001,
		"SC_ENTER_GAME_LHD_RES":               17002,
		"CS_LEAVE_GAME_LHD_REQ":               17003,
		"SC_LEAVE_GAME_LHD_RES":               17004,
		"CS_BET_LHD_REQ":                      17008,
		"SC_BET_LHD_RES":                      17009,
		"CS_CLEAN_BET_LHD_REQ":                17010,
		"SC_CLEAN_BET_LHD_RES":                17011,
		"CS_PLAYERS_LHD_LIST_REQ":             17015,
		"SC_PLAYERS_LHD_LIST_RES":             17016,
		"SC_SWITCH_GAME_STATUS_BROADCAST_LHD": 17020,
		"SC_CLEAN_HISTORY_BROADCAST_LHD":      17021,
	}
)

func (x LHDMSG) Enum() *LHDMSG {
	p := new(LHDMSG)
	*p = x
	return p
}

func (x LHDMSG) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LHDMSG) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_lhd_proto_enumTypes[0].Descriptor()
}

func (LHDMSG) Type() protoreflect.EnumType {
	return &file_protobuf_lhd_proto_enumTypes[0]
}

func (x LHDMSG) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LHDMSG.Descriptor instead.
func (LHDMSG) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{0}
}

////////////////////////////////////////////////////// 游戏枚举 /////////////////////////////////////////////////////////////
// 下注区域
type LHDAREA int32

const (
	LHDAREA_LHD_AREA_Unknow LHDAREA = 0 // 无用的
	LHDAREA_LHD_AREA_DRAGON LHDAREA = 1 // 龙区域
	LHDAREA_LHD_AREA_TIGER  LHDAREA = 2 // 虎区域
	LHDAREA_LHD_AREA_PEACE  LHDAREA = 3 // 和区域
)

// Enum value maps for LHDAREA.
var (
	LHDAREA_name = map[int32]string{
		0: "LHD_AREA_Unknow",
		1: "LHD_AREA_DRAGON",
		2: "LHD_AREA_TIGER",
		3: "LHD_AREA_PEACE",
	}
	LHDAREA_value = map[string]int32{
		"LHD_AREA_Unknow": 0,
		"LHD_AREA_DRAGON": 1,
		"LHD_AREA_TIGER":  2,
		"LHD_AREA_PEACE":  3,
	}
)

func (x LHDAREA) Enum() *LHDAREA {
	p := new(LHDAREA)
	*p = x
	return p
}

func (x LHDAREA) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LHDAREA) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_lhd_proto_enumTypes[1].Descriptor()
}

func (LHDAREA) Type() protoreflect.EnumType {
	return &file_protobuf_lhd_proto_enumTypes[1]
}

func (x LHDAREA) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LHDAREA.Descriptor instead.
func (LHDAREA) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{1}
}

// 游戏状态
type LHDGAMESTATUS int32

const (
	LHDGAMESTATUS_LHD_GAMESTATUS_Unknow LHDGAMESTATUS = 0 // 无用的
	LHDGAMESTATUS_LHD_GAMESTATUS_WAIT   LHDGAMESTATUS = 1 // 等待开始
	LHDGAMESTATUS_LHD_GAMESTATUS_BET    LHDGAMESTATUS = 2 // 开始下注
	LHDGAMESTATUS_LHD_GAMESTATUS_STOP   LHDGAMESTATUS = 3 // 停止下注
	LHDGAMESTATUS_LHD_GAMESTATUS_SETTLE LHDGAMESTATUS = 4 // 结算
)

// Enum value maps for LHDGAMESTATUS.
var (
	LHDGAMESTATUS_name = map[int32]string{
		0: "LHD_GAMESTATUS_Unknow",
		1: "LHD_GAMESTATUS_WAIT",
		2: "LHD_GAMESTATUS_BET",
		3: "LHD_GAMESTATUS_STOP",
		4: "LHD_GAMESTATUS_SETTLE",
	}
	LHDGAMESTATUS_value = map[string]int32{
		"LHD_GAMESTATUS_Unknow": 0,
		"LHD_GAMESTATUS_WAIT":   1,
		"LHD_GAMESTATUS_BET":    2,
		"LHD_GAMESTATUS_STOP":   3,
		"LHD_GAMESTATUS_SETTLE": 4,
	}
)

func (x LHDGAMESTATUS) Enum() *LHDGAMESTATUS {
	p := new(LHDGAMESTATUS)
	*p = x
	return p
}

func (x LHDGAMESTATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LHDGAMESTATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_lhd_proto_enumTypes[2].Descriptor()
}

func (LHDGAMESTATUS) Type() protoreflect.EnumType {
	return &file_protobuf_lhd_proto_enumTypes[2]
}

func (x LHDGAMESTATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LHDGAMESTATUS.Descriptor instead.
func (LHDGAMESTATUS) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{2}
}

////////////////////////////////////////////////////// 消息数据结构 /////////////////////////////////////////////////////////////
// 请求进入房间
type ENTER_GAME_LHD_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"` //
	RoomID    uint32 `protobuf:"varint,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"`       // 房间ID
}

func (x *ENTER_GAME_LHD_REQ) Reset() {
	*x = ENTER_GAME_LHD_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ENTER_GAME_LHD_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ENTER_GAME_LHD_REQ) ProtoMessage() {}

func (x *ENTER_GAME_LHD_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ENTER_GAME_LHD_REQ.ProtoReflect.Descriptor instead.
func (*ENTER_GAME_LHD_REQ) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{0}
}

func (x *ENTER_GAME_LHD_REQ) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *ENTER_GAME_LHD_REQ) GetRoomID() uint32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

// 进入房间，服务器返回房间、游戏状态相关数据
type ENTER_GAME_LHD_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID         uint32                       `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`                // 房间ID
	HistoryWinners []*ENTER_GAME_LHD_RES_Winner `protobuf:"bytes,2,rep,name=HistoryWinners,proto3" json:"HistoryWinners,omitempty"` // 最近70局的获胜区域
	Bets           []int64                      `protobuf:"varint,3,rep,packed,name=bets,proto3" json:"bets,omitempty"`             // 当前房间可押注筹码值
	BetLimit       uint64                       `protobuf:"varint,4,opt,name=BetLimit,proto3" json:"BetLimit,omitempty"`            // 当前房间下注身上最少要带的钱
	Status         *StatusMsgLHD                `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`                 //  当前状态
}

func (x *ENTER_GAME_LHD_RES) Reset() {
	*x = ENTER_GAME_LHD_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ENTER_GAME_LHD_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ENTER_GAME_LHD_RES) ProtoMessage() {}

func (x *ENTER_GAME_LHD_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ENTER_GAME_LHD_RES.ProtoReflect.Descriptor instead.
func (*ENTER_GAME_LHD_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{1}
}

func (x *ENTER_GAME_LHD_RES) GetRoomID() uint32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

func (x *ENTER_GAME_LHD_RES) GetHistoryWinners() []*ENTER_GAME_LHD_RES_Winner {
	if x != nil {
		return x.HistoryWinners
	}
	return nil
}

func (x *ENTER_GAME_LHD_RES) GetBets() []int64 {
	if x != nil {
		return x.Bets
	}
	return nil
}

func (x *ENTER_GAME_LHD_RES) GetBetLimit() uint64 {
	if x != nil {
		return x.BetLimit
	}
	return 0
}

func (x *ENTER_GAME_LHD_RES) GetStatus() *StatusMsgLHD {
	if x != nil {
		return x.Status
	}
	return nil
}

// 请求退出房间
type LEAVE_GAME_LHD_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	RoomID    uint32 `protobuf:"varint,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"` // 房间ID
}

func (x *LEAVE_GAME_LHD_REQ) Reset() {
	*x = LEAVE_GAME_LHD_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LEAVE_GAME_LHD_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LEAVE_GAME_LHD_REQ) ProtoMessage() {}

func (x *LEAVE_GAME_LHD_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LEAVE_GAME_LHD_REQ.ProtoReflect.Descriptor instead.
func (*LEAVE_GAME_LHD_REQ) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{2}
}

func (x *LEAVE_GAME_LHD_REQ) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *LEAVE_GAME_LHD_REQ) GetRoomID() uint32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

type LEAVE_GAME_LHD_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    uint32 `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`       // 0.可以退出  1.不能退出房间
	RoomID uint32 `protobuf:"varint,2,opt,name=RoomID,proto3" json:"RoomID,omitempty"` // 房间ID
}

func (x *LEAVE_GAME_LHD_RES) Reset() {
	*x = LEAVE_GAME_LHD_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LEAVE_GAME_LHD_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LEAVE_GAME_LHD_RES) ProtoMessage() {}

func (x *LEAVE_GAME_LHD_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LEAVE_GAME_LHD_RES.ProtoReflect.Descriptor instead.
func (*LEAVE_GAME_LHD_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{3}
}

func (x *LEAVE_GAME_LHD_RES) GetRet() uint32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *LEAVE_GAME_LHD_RES) GetRoomID() uint32 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

////////////////////////////////////////////// 游戏 /////////////////////////////////////////////
// 服务器广播切换状态
type SWITCH_GAME_STATUS_BROADCAST_LHD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextStatus *StatusMsgLHD `protobuf:"bytes,1,opt,name=NextStatus,proto3" json:"NextStatus,omitempty"` // 切换下一个状态
}

func (x *SWITCH_GAME_STATUS_BROADCAST_LHD) Reset() {
	*x = SWITCH_GAME_STATUS_BROADCAST_LHD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SWITCH_GAME_STATUS_BROADCAST_LHD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SWITCH_GAME_STATUS_BROADCAST_LHD) ProtoMessage() {}

func (x *SWITCH_GAME_STATUS_BROADCAST_LHD) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SWITCH_GAME_STATUS_BROADCAST_LHD.ProtoReflect.Descriptor instead.
func (*SWITCH_GAME_STATUS_BROADCAST_LHD) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{4}
}

func (x *SWITCH_GAME_STATUS_BROADCAST_LHD) GetNextStatus() *StatusMsgLHD {
	if x != nil {
		return x.NextStatus
	}
	return nil
}

// 状态结构
type StatusMsgLHD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           LHDGAMESTATUS   `protobuf:"varint,1,opt,name=Status,proto3,enum=protomsg.LHDGAMESTATUS" json:"Status,omitempty"`                                                                                                 // (1.等待、2.押注、3.停止下注、4.结算)
	Status_StartTime uint64          `protobuf:"varint,2,opt,name=Status_StartTime,json=StatusStartTime,proto3" json:"Status_StartTime,omitempty"`                                                                                    // 状态开始时间						注:(服务器发的所有时间都是 utc+8 时间戳 毫秒)
	Status_EndTime   uint64          `protobuf:"varint,3,opt,name=Status_EndTime,json=StatusEndTime,proto3" json:"Status_EndTime,omitempty"`                                                                                          // 状态到期时间
	AreaBetVal       map[int32]int64 `protobuf:"bytes,4,rep,name=AreaBetVal,proto3" json:"AreaBetVal,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`                            // 3个区域所有人的总押注值
	AreaBetVal_Own   map[int32]int64 `protobuf:"bytes,5,rep,name=AreaBetVal_Own,json=AreaBetValOwn,proto3" json:"AreaBetVal_Own,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 3个区域自己的总押注值
	Status_Data      []byte          `protobuf:"bytes,6,opt,name=Status_Data,json=StatusData,proto3" json:"Status_Data,omitempty"`                                                                                                    // 根据房间状态解析 1.Status_Wait 2.Status_Bet 3.Status_Stop 4.Status_Settle
}

func (x *StatusMsgLHD) Reset() {
	*x = StatusMsgLHD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusMsgLHD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusMsgLHD) ProtoMessage() {}

func (x *StatusMsgLHD) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusMsgLHD.ProtoReflect.Descriptor instead.
func (*StatusMsgLHD) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{5}
}

func (x *StatusMsgLHD) GetStatus() LHDGAMESTATUS {
	if x != nil {
		return x.Status
	}
	return LHDGAMESTATUS_LHD_GAMESTATUS_Unknow
}

func (x *StatusMsgLHD) GetStatus_StartTime() uint64 {
	if x != nil {
		return x.Status_StartTime
	}
	return 0
}

func (x *StatusMsgLHD) GetStatus_EndTime() uint64 {
	if x != nil {
		return x.Status_EndTime
	}
	return 0
}

func (x *StatusMsgLHD) GetAreaBetVal() map[int32]int64 {
	if x != nil {
		return x.AreaBetVal
	}
	return nil
}

func (x *StatusMsgLHD) GetAreaBetVal_Own() map[int32]int64 {
	if x != nil {
		return x.AreaBetVal_Own
	}
	return nil
}

func (x *StatusMsgLHD) GetStatus_Data() []byte {
	if x != nil {
		return x.Status_Data
	}
	return nil
}

// 1.等待
type Status_Wait_LHD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Status_Wait_LHD) Reset() {
	*x = Status_Wait_LHD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status_Wait_LHD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status_Wait_LHD) ProtoMessage() {}

func (x *Status_Wait_LHD) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status_Wait_LHD.ProtoReflect.Descriptor instead.
func (*Status_Wait_LHD) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{6}
}

// 2.押注
type Status_Bet_LHD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Status_Bet_LHD) Reset() {
	*x = Status_Bet_LHD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status_Bet_LHD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status_Bet_LHD) ProtoMessage() {}

func (x *Status_Bet_LHD) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status_Bet_LHD.ProtoReflect.Descriptor instead.
func (*Status_Bet_LHD) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{7}
}

// 3.停止下注
type Status_Stop_LHD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Status_Stop_LHD) Reset() {
	*x = Status_Stop_LHD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status_Stop_LHD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status_Stop_LHD) ProtoMessage() {}

func (x *Status_Stop_LHD) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status_Stop_LHD.ProtoReflect.Descriptor instead.
func (*Status_Stop_LHD) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{8}
}

// 4.结算
type Status_Settle_LHD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinArea     LHDAREA         `protobuf:"varint,1,opt,name=WinArea,proto3,enum=protomsg.LHDAREA" json:"WinArea,omitempty"`                                                                    // 获胜区域 (龙、 虎、和)
	DragonCards *Card           `protobuf:"bytes,2,opt,name=DragonCards,proto3" json:"DragonCards,omitempty"`                                                                                   // 龙牌
	TigerCards  *Card           `protobuf:"bytes,3,opt,name=TigerCards,proto3" json:"TigerCards,omitempty"`                                                                                     // 虎牌
	Players     map[int32]int64 `protobuf:"bytes,4,rep,name=Players,proto3" json:"Players,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 所有盈利的玩家 key:AccountID val:获利 (不包含本金)
}

func (x *Status_Settle_LHD) Reset() {
	*x = Status_Settle_LHD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status_Settle_LHD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status_Settle_LHD) ProtoMessage() {}

func (x *Status_Settle_LHD) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status_Settle_LHD.ProtoReflect.Descriptor instead.
func (*Status_Settle_LHD) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{9}
}

func (x *Status_Settle_LHD) GetWinArea() LHDAREA {
	if x != nil {
		return x.WinArea
	}
	return LHDAREA_LHD_AREA_Unknow
}

func (x *Status_Settle_LHD) GetDragonCards() *Card {
	if x != nil {
		return x.DragonCards
	}
	return nil
}

func (x *Status_Settle_LHD) GetTigerCards() *Card {
	if x != nil {
		return x.TigerCards
	}
	return nil
}

func (x *Status_Settle_LHD) GetPlayers() map[int32]int64 {
	if x != nil {
		return x.Players
	}
	return nil
}

// 请求下注
type BET_LHD_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint32  `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`             // 客户端可发可不发,机器人下注用
	Area      LHDAREA `protobuf:"varint,2,opt,name=Area,proto3,enum=protomsg.LHDAREA" json:"Area,omitempty"` // 下注区域
	Bet       uint64  `protobuf:"varint,3,opt,name=Bet,proto3" json:"Bet,omitempty"`                         // 下注的筹码
	BetType   uint32  `protobuf:"varint,4,opt,name=BetType,proto3" json:"BetType,omitempty"`                 // 0 正常押注，1 续押
}

func (x *BET_LHD_REQ) Reset() {
	*x = BET_LHD_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BET_LHD_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BET_LHD_REQ) ProtoMessage() {}

func (x *BET_LHD_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BET_LHD_REQ.ProtoReflect.Descriptor instead.
func (*BET_LHD_REQ) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{10}
}

func (x *BET_LHD_REQ) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *BET_LHD_REQ) GetArea() LHDAREA {
	if x != nil {
		return x.Area
	}
	return LHDAREA_LHD_AREA_Unknow
}

func (x *BET_LHD_REQ) GetBet() uint64 {
	if x != nil {
		return x.Bet
	}
	return 0
}

func (x *BET_LHD_REQ) GetBetType() uint32 {
	if x != nil {
		return x.BetType
	}
	return 0
}

// 间隔 200 毫秒一次 广播玩家下注
type BET_LHD_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players    []*BET_LHD_RES_BetPlayer `protobuf:"bytes,1,rep,name=Players,proto3" json:"Players,omitempty"`                                                                                                 // 间隔时间内，所有玩家的下注
	AreaBetVal map[int32]int64          `protobuf:"bytes,2,rep,name=AreaBetVal,proto3" json:"AreaBetVal,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 3个区域的押注值
}

func (x *BET_LHD_RES) Reset() {
	*x = BET_LHD_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BET_LHD_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BET_LHD_RES) ProtoMessage() {}

func (x *BET_LHD_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BET_LHD_RES.ProtoReflect.Descriptor instead.
func (*BET_LHD_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{11}
}

func (x *BET_LHD_RES) GetPlayers() []*BET_LHD_RES_BetPlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *BET_LHD_RES) GetAreaBetVal() map[int32]int64 {
	if x != nil {
		return x.AreaBetVal
	}
	return nil
}

// 请求清除下注
type CLEAN_BET_LHD_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"` // 客户端可发可不发,机器人下注用
}

func (x *CLEAN_BET_LHD_REQ) Reset() {
	*x = CLEAN_BET_LHD_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLEAN_BET_LHD_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLEAN_BET_LHD_REQ) ProtoMessage() {}

func (x *CLEAN_BET_LHD_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLEAN_BET_LHD_REQ.ProtoReflect.Descriptor instead.
func (*CLEAN_BET_LHD_REQ) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{12}
}

func (x *CLEAN_BET_LHD_REQ) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

// 服务器广播清除下注
type CLEAN_BET_LHD_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID        uint32          `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`                                                                                                        // 清除的玩家
	PlayerAreaBetVal map[int32]int64 `protobuf:"bytes,2,rep,name=PlayerAreaBetVal,proto3" json:"PlayerAreaBetVal,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 玩家个人清除之前总押注值
	AreaBetVal       map[int32]int64 `protobuf:"bytes,3,rep,name=AreaBetVal,proto3" json:"AreaBetVal,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`             // 3个区域所有人的总押注值
}

func (x *CLEAN_BET_LHD_RES) Reset() {
	*x = CLEAN_BET_LHD_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLEAN_BET_LHD_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLEAN_BET_LHD_RES) ProtoMessage() {}

func (x *CLEAN_BET_LHD_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLEAN_BET_LHD_RES.ProtoReflect.Descriptor instead.
func (*CLEAN_BET_LHD_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{13}
}

func (x *CLEAN_BET_LHD_RES) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *CLEAN_BET_LHD_RES) GetPlayerAreaBetVal() map[int32]int64 {
	if x != nil {
		return x.PlayerAreaBetVal
	}
	return nil
}

func (x *CLEAN_BET_LHD_RES) GetAreaBetVal() map[int32]int64 {
	if x != nil {
		return x.AreaBetVal
	}
	return nil
}

// 请求LHD玩家列表
type PLAYERS_LHD_LIST_RES struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*AccountStorageData `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"` // 房间内所有的玩家
}

func (x *PLAYERS_LHD_LIST_RES) Reset() {
	*x = PLAYERS_LHD_LIST_RES{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PLAYERS_LHD_LIST_RES) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PLAYERS_LHD_LIST_RES) ProtoMessage() {}

func (x *PLAYERS_LHD_LIST_RES) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PLAYERS_LHD_LIST_RES.ProtoReflect.Descriptor instead.
func (*PLAYERS_LHD_LIST_RES) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{14}
}

func (x *PLAYERS_LHD_LIST_RES) GetPlayers() []*AccountStorageData {
	if x != nil {
		return x.Players
	}
	return nil
}

type ENTER_GAME_LHD_RES_Winner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WinArea LHDAREA `protobuf:"varint,1,opt,name=WinArea,proto3,enum=protomsg.LHDAREA" json:"WinArea,omitempty"` // 获胜区域 (龙、 虎、和)
}

func (x *ENTER_GAME_LHD_RES_Winner) Reset() {
	*x = ENTER_GAME_LHD_RES_Winner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ENTER_GAME_LHD_RES_Winner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ENTER_GAME_LHD_RES_Winner) ProtoMessage() {}

func (x *ENTER_GAME_LHD_RES_Winner) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ENTER_GAME_LHD_RES_Winner.ProtoReflect.Descriptor instead.
func (*ENTER_GAME_LHD_RES_Winner) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ENTER_GAME_LHD_RES_Winner) GetWinArea() LHDAREA {
	if x != nil {
		return x.WinArea
	}
	return LHDAREA_LHD_AREA_Unknow
}

type BET_LHD_RES_BetPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountID uint32  `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Area      LHDAREA `protobuf:"varint,2,opt,name=Area,proto3,enum=protomsg.LHDAREA" json:"Area,omitempty"` // 下注区域
	Bet       uint64  `protobuf:"varint,3,opt,name=Bet,proto3" json:"Bet,omitempty"`                         // 下注的筹码
}

func (x *BET_LHD_RES_BetPlayer) Reset() {
	*x = BET_LHD_RES_BetPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_lhd_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BET_LHD_RES_BetPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BET_LHD_RES_BetPlayer) ProtoMessage() {}

func (x *BET_LHD_RES_BetPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_lhd_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BET_LHD_RES_BetPlayer.ProtoReflect.Descriptor instead.
func (*BET_LHD_RES_BetPlayer) Descriptor() ([]byte, []int) {
	return file_protobuf_lhd_proto_rawDescGZIP(), []int{11, 0}
}

func (x *BET_LHD_RES_BetPlayer) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *BET_LHD_RES_BetPlayer) GetArea() LHDAREA {
	if x != nil {
		return x.Area
	}
	return LHDAREA_LHD_AREA_Unknow
}

func (x *BET_LHD_RES_BetPlayer) GetBet() uint64 {
	if x != nil {
		return x.Bet
	}
	return 0
}

var File_protobuf_lhd_proto protoreflect.FileDescriptor

var file_protobuf_lhd_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6c, 0x68, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x1a, 0x13,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x12, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d,
	0x45, 0x5f, 0x4c, 0x48, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22,
	0x90, 0x02, 0x0a, 0x12, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4c,
	0x48, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x4b,
	0x0a, 0x0e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73,
	0x67, 0x2e, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4c, 0x48, 0x44,
	0x5f, 0x52, 0x45, 0x53, 0x2e, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x0e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x62, 0x65, 0x74, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x42, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x42, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67,
	0x4c, 0x48, 0x44, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x35, 0x0a, 0x06, 0x57,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x41, 0x72, 0x65, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73,
	0x67, 0x2e, 0x4c, 0x48, 0x44, 0x41, 0x52, 0x45, 0x41, 0x52, 0x07, 0x57, 0x69, 0x6e, 0x41, 0x72,
	0x65, 0x61, 0x22, 0x4a, 0x0a, 0x12, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45,
	0x5f, 0x4c, 0x48, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x3e,
	0x0a, 0x12, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4c, 0x48, 0x44,
	0x5f, 0x52, 0x45, 0x53, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x5a,
	0x0a, 0x20, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x4c,
	0x48, 0x44, 0x12, 0x36, 0x0a, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73,
	0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x4c, 0x48, 0x44, 0x52, 0x0a,
	0x4e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xcd, 0x03, 0x0a, 0x0c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x4c, 0x48, 0x44, 0x12, 0x2f, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x48, 0x44, 0x47, 0x41, 0x4d, 0x45, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46,
	0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x42, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x4c, 0x48, 0x44, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x42,
	0x65, 0x74, 0x56, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x41, 0x72, 0x65, 0x61,
	0x42, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x50, 0x0a, 0x0e, 0x41, 0x72, 0x65, 0x61, 0x42, 0x65,
	0x74, 0x56, 0x61, 0x6c, 0x5f, 0x4f, 0x77, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4d, 0x73, 0x67, 0x4c, 0x48, 0x44, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x42, 0x65, 0x74, 0x56, 0x61,
	0x6c, 0x4f, 0x77, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x41, 0x72, 0x65, 0x61, 0x42,
	0x65, 0x74, 0x56, 0x61, 0x6c, 0x4f, 0x77, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x72, 0x65,
	0x61, 0x42, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a, 0x12, 0x41, 0x72, 0x65, 0x61,
	0x42, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x4f, 0x77, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x57, 0x61, 0x69, 0x74, 0x5f, 0x4c, 0x48, 0x44, 0x22, 0x10, 0x0a,
	0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x42, 0x65, 0x74, 0x5f, 0x4c, 0x48, 0x44, 0x22,
	0x11, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x5f, 0x4c,
	0x48, 0x44, 0x22, 0xa2, 0x02, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x53, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x4c, 0x48, 0x44, 0x12, 0x2b, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x41,
	0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x48, 0x44, 0x41, 0x52, 0x45, 0x41, 0x52, 0x07, 0x57, 0x69,
	0x6e, 0x41, 0x72, 0x65, 0x61, 0x12, 0x30, 0x0a, 0x0b, 0x44, 0x72, 0x61, 0x67, 0x6f, 0x6e, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x44, 0x72, 0x61, 0x67,
	0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x0a, 0x54, 0x69, 0x67, 0x65, 0x72,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x54, 0x69, 0x67,
	0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x6d, 0x73, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x53, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x5f, 0x4c, 0x48, 0x44, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7e, 0x0a, 0x0b, 0x42, 0x45, 0x54, 0x5f, 0x4c,
	0x48, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x48,
	0x44, 0x41, 0x52, 0x45, 0x41, 0x52, 0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x42,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x42, 0x65, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x42, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x42, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb2, 0x02, 0x0a, 0x0b, 0x42, 0x45, 0x54, 0x5f,
	0x4c, 0x48, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x39, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x6d, 0x73, 0x67, 0x2e, 0x42, 0x45, 0x54, 0x5f, 0x4c, 0x48, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x2e,
	0x42, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x42, 0x65, 0x74, 0x56, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73,
	0x67, 0x2e, 0x42, 0x45, 0x54, 0x5f, 0x4c, 0x48, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x2e, 0x41, 0x72,
	0x65, 0x61, 0x42, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x41,
	0x72, 0x65, 0x61, 0x42, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x1a, 0x62, 0x0a, 0x09, 0x42, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x48,
	0x44, 0x41, 0x52, 0x45, 0x41, 0x52, 0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x42,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x42, 0x65, 0x74, 0x1a, 0x3d, 0x0a,
	0x0f, 0x41, 0x72, 0x65, 0x61, 0x42, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x31, 0x0a, 0x11,
	0x43, 0x4c, 0x45, 0x41, 0x4e, 0x5f, 0x42, 0x45, 0x54, 0x5f, 0x4c, 0x48, 0x44, 0x5f, 0x52, 0x45,
	0x51, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x22,
	0xe1, 0x02, 0x0a, 0x11, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x5f, 0x42, 0x45, 0x54, 0x5f, 0x4c, 0x48,
	0x44, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x5d, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x65,
	0x61, 0x42, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x5f, 0x42,
	0x45, 0x54, 0x5f, 0x4c, 0x48, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x72, 0x65, 0x61, 0x42, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x42, 0x65, 0x74, 0x56,
	0x61, 0x6c, 0x12, 0x4b, 0x0a, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x42, 0x65, 0x74, 0x56, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73,
	0x67, 0x2e, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x5f, 0x42, 0x45, 0x54, 0x5f, 0x4c, 0x48, 0x44, 0x5f,
	0x52, 0x45, 0x53, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x42, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x41, 0x72, 0x65, 0x61, 0x42, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x1a,
	0x43, 0x0a, 0x15, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x42, 0x65, 0x74,
	0x56, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x72, 0x65, 0x61, 0x42, 0x65, 0x74, 0x56,
	0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x4e, 0x0a, 0x14, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x53, 0x5f, 0x4c,
	0x48, 0x44, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x12, 0x36, 0x0a, 0x07, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x2a, 0xff, 0x02, 0x0a, 0x06, 0x4c, 0x48, 0x44, 0x4d, 0x53, 0x47, 0x12, 0x0e,
	0x0a, 0x0a, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x5f, 0x4c, 0x48, 0x44, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x15, 0x43, 0x53, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f,
	0x4c, 0x48, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xe9, 0x84, 0x01, 0x12, 0x1b, 0x0a, 0x15, 0x53,
	0x43, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4c, 0x48, 0x44,
	0x5f, 0x52, 0x45, 0x53, 0x10, 0xea, 0x84, 0x01, 0x12, 0x1b, 0x0a, 0x15, 0x43, 0x53, 0x5f, 0x4c,
	0x45, 0x41, 0x56, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4c, 0x48, 0x44, 0x5f, 0x52, 0x45,
	0x51, 0x10, 0xeb, 0x84, 0x01, 0x12, 0x1b, 0x0a, 0x15, 0x53, 0x43, 0x5f, 0x4c, 0x45, 0x41, 0x56,
	0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4c, 0x48, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x10, 0xec,
	0x84, 0x01, 0x12, 0x14, 0x0a, 0x0e, 0x43, 0x53, 0x5f, 0x42, 0x45, 0x54, 0x5f, 0x4c, 0x48, 0x44,
	0x5f, 0x52, 0x45, 0x51, 0x10, 0xf0, 0x84, 0x01, 0x12, 0x14, 0x0a, 0x0e, 0x53, 0x43, 0x5f, 0x42,
	0x45, 0x54, 0x5f, 0x4c, 0x48, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x10, 0xf1, 0x84, 0x01, 0x12, 0x1a,
	0x0a, 0x14, 0x43, 0x53, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x5f, 0x42, 0x45, 0x54, 0x5f, 0x4c,
	0x48, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x10, 0xf2, 0x84, 0x01, 0x12, 0x1a, 0x0a, 0x14, 0x53, 0x43,
	0x5f, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x5f, 0x42, 0x45, 0x54, 0x5f, 0x4c, 0x48, 0x44, 0x5f, 0x52,
	0x45, 0x53, 0x10, 0xf3, 0x84, 0x01, 0x12, 0x1d, 0x0a, 0x17, 0x43, 0x53, 0x5f, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x53, 0x5f, 0x4c, 0x48, 0x44, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45,
	0x51, 0x10, 0xf7, 0x84, 0x01, 0x12, 0x1d, 0x0a, 0x17, 0x53, 0x43, 0x5f, 0x50, 0x4c, 0x41, 0x59,
	0x45, 0x52, 0x53, 0x5f, 0x4c, 0x48, 0x44, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53,
	0x10, 0xf8, 0x84, 0x01, 0x12, 0x29, 0x0a, 0x23, 0x53, 0x43, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43,
	0x48, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x52,
	0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x4c, 0x48, 0x44, 0x10, 0xfc, 0x84, 0x01, 0x12,
	0x24, 0x0a, 0x1e, 0x53, 0x43, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x5f, 0x48, 0x49, 0x53, 0x54,
	0x4f, 0x52, 0x59, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x4c, 0x48,
	0x44, 0x10, 0xfd, 0x84, 0x01, 0x2a, 0x5b, 0x0a, 0x07, 0x4c, 0x48, 0x44, 0x41, 0x52, 0x45, 0x41,
	0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x48, 0x44, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x5f, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x48, 0x44, 0x5f, 0x41, 0x52, 0x45,
	0x41, 0x5f, 0x44, 0x52, 0x41, 0x47, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x48,
	0x44, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x5f, 0x54, 0x49, 0x47, 0x45, 0x52, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x4c, 0x48, 0x44, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x5f, 0x50, 0x45, 0x41, 0x43, 0x45,
	0x10, 0x03, 0x2a, 0x8f, 0x01, 0x0a, 0x0d, 0x4c, 0x48, 0x44, 0x47, 0x41, 0x4d, 0x45, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x12, 0x19, 0x0a, 0x15, 0x4c, 0x48, 0x44, 0x5f, 0x47, 0x41, 0x4d, 0x45,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12,
	0x17, 0x0a, 0x13, 0x4c, 0x48, 0x44, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x48, 0x44, 0x5f,
	0x47, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x45, 0x54, 0x10, 0x02,
	0x12, 0x17, 0x0a, 0x13, 0x4c, 0x48, 0x44, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x4c, 0x48, 0x44,
	0x5f, 0x47, 0x41, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x54, 0x54,
	0x4c, 0x45, 0x10, 0x04, 0x42, 0x0f, 0x5a, 0x0d, 0x72, 0x6f, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_lhd_proto_rawDescOnce sync.Once
	file_protobuf_lhd_proto_rawDescData = file_protobuf_lhd_proto_rawDesc
)

func file_protobuf_lhd_proto_rawDescGZIP() []byte {
	file_protobuf_lhd_proto_rawDescOnce.Do(func() {
		file_protobuf_lhd_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_lhd_proto_rawDescData)
	})
	return file_protobuf_lhd_proto_rawDescData
}

var file_protobuf_lhd_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protobuf_lhd_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_protobuf_lhd_proto_goTypes = []interface{}{
	(LHDMSG)(0),                              // 0: protomsg.LHDMSG
	(LHDAREA)(0),                             // 1: protomsg.LHDAREA
	(LHDGAMESTATUS)(0),                       // 2: protomsg.LHDGAMESTATUS
	(*ENTER_GAME_LHD_REQ)(nil),               // 3: protomsg.ENTER_GAME_LHD_REQ
	(*ENTER_GAME_LHD_RES)(nil),               // 4: protomsg.ENTER_GAME_LHD_RES
	(*LEAVE_GAME_LHD_REQ)(nil),               // 5: protomsg.LEAVE_GAME_LHD_REQ
	(*LEAVE_GAME_LHD_RES)(nil),               // 6: protomsg.LEAVE_GAME_LHD_RES
	(*SWITCH_GAME_STATUS_BROADCAST_LHD)(nil), // 7: protomsg.SWITCH_GAME_STATUS_BROADCAST_LHD
	(*StatusMsgLHD)(nil),                     // 8: protomsg.StatusMsgLHD
	(*Status_Wait_LHD)(nil),                  // 9: protomsg.Status_Wait_LHD
	(*Status_Bet_LHD)(nil),                   // 10: protomsg.Status_Bet_LHD
	(*Status_Stop_LHD)(nil),                  // 11: protomsg.Status_Stop_LHD
	(*Status_Settle_LHD)(nil),                // 12: protomsg.Status_Settle_LHD
	(*BET_LHD_REQ)(nil),                      // 13: protomsg.BET_LHD_REQ
	(*BET_LHD_RES)(nil),                      // 14: protomsg.BET_LHD_RES
	(*CLEAN_BET_LHD_REQ)(nil),                // 15: protomsg.CLEAN_BET_LHD_REQ
	(*CLEAN_BET_LHD_RES)(nil),                // 16: protomsg.CLEAN_BET_LHD_RES
	(*PLAYERS_LHD_LIST_RES)(nil),             // 17: protomsg.PLAYERS_LHD_LIST_RES
	(*ENTER_GAME_LHD_RES_Winner)(nil),        // 18: protomsg.ENTER_GAME_LHD_RES.Winner
	nil,                                      // 19: protomsg.StatusMsgLHD.AreaBetValEntry
	nil,                                      // 20: protomsg.StatusMsgLHD.AreaBetValOwnEntry
	nil,                                      // 21: protomsg.Status_Settle_LHD.PlayersEntry
	(*BET_LHD_RES_BetPlayer)(nil),            // 22: protomsg.BET_LHD_RES.BetPlayer
	nil,                                      // 23: protomsg.BET_LHD_RES.AreaBetValEntry
	nil,                                      // 24: protomsg.CLEAN_BET_LHD_RES.PlayerAreaBetValEntry
	nil,                                      // 25: protomsg.CLEAN_BET_LHD_RES.AreaBetValEntry
	(*Card)(nil),                             // 26: protomsg.Card
	(*AccountStorageData)(nil),               // 27: protomsg.AccountStorageData
}
var file_protobuf_lhd_proto_depIdxs = []int32{
	18, // 0: protomsg.ENTER_GAME_LHD_RES.HistoryWinners:type_name -> protomsg.ENTER_GAME_LHD_RES.Winner
	8,  // 1: protomsg.ENTER_GAME_LHD_RES.Status:type_name -> protomsg.StatusMsgLHD
	8,  // 2: protomsg.SWITCH_GAME_STATUS_BROADCAST_LHD.NextStatus:type_name -> protomsg.StatusMsgLHD
	2,  // 3: protomsg.StatusMsgLHD.Status:type_name -> protomsg.LHDGAMESTATUS
	19, // 4: protomsg.StatusMsgLHD.AreaBetVal:type_name -> protomsg.StatusMsgLHD.AreaBetValEntry
	20, // 5: protomsg.StatusMsgLHD.AreaBetVal_Own:type_name -> protomsg.StatusMsgLHD.AreaBetValOwnEntry
	1,  // 6: protomsg.Status_Settle_LHD.WinArea:type_name -> protomsg.LHDAREA
	26, // 7: protomsg.Status_Settle_LHD.DragonCards:type_name -> protomsg.Card
	26, // 8: protomsg.Status_Settle_LHD.TigerCards:type_name -> protomsg.Card
	21, // 9: protomsg.Status_Settle_LHD.Players:type_name -> protomsg.Status_Settle_LHD.PlayersEntry
	1,  // 10: protomsg.BET_LHD_REQ.Area:type_name -> protomsg.LHDAREA
	22, // 11: protomsg.BET_LHD_RES.Players:type_name -> protomsg.BET_LHD_RES.BetPlayer
	23, // 12: protomsg.BET_LHD_RES.AreaBetVal:type_name -> protomsg.BET_LHD_RES.AreaBetValEntry
	24, // 13: protomsg.CLEAN_BET_LHD_RES.PlayerAreaBetVal:type_name -> protomsg.CLEAN_BET_LHD_RES.PlayerAreaBetValEntry
	25, // 14: protomsg.CLEAN_BET_LHD_RES.AreaBetVal:type_name -> protomsg.CLEAN_BET_LHD_RES.AreaBetValEntry
	27, // 15: protomsg.PLAYERS_LHD_LIST_RES.players:type_name -> protomsg.AccountStorageData
	1,  // 16: protomsg.ENTER_GAME_LHD_RES.Winner.WinArea:type_name -> protomsg.LHDAREA
	1,  // 17: protomsg.BET_LHD_RES.BetPlayer.Area:type_name -> protomsg.LHDAREA
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_protobuf_lhd_proto_init() }
func file_protobuf_lhd_proto_init() {
	if File_protobuf_lhd_proto != nil {
		return
	}
	file_protobuf_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protobuf_lhd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ENTER_GAME_LHD_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ENTER_GAME_LHD_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LEAVE_GAME_LHD_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LEAVE_GAME_LHD_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SWITCH_GAME_STATUS_BROADCAST_LHD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusMsgLHD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status_Wait_LHD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status_Bet_LHD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status_Stop_LHD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status_Settle_LHD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BET_LHD_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BET_LHD_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CLEAN_BET_LHD_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CLEAN_BET_LHD_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PLAYERS_LHD_LIST_RES); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ENTER_GAME_LHD_RES_Winner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_lhd_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BET_LHD_RES_BetPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_lhd_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_lhd_proto_goTypes,
		DependencyIndexes: file_protobuf_lhd_proto_depIdxs,
		EnumInfos:         file_protobuf_lhd_proto_enumTypes,
		MessageInfos:      file_protobuf_lhd_proto_msgTypes,
	}.Build()
	File_protobuf_lhd_proto = out.File
	file_protobuf_lhd_proto_rawDesc = nil
	file_protobuf_lhd_proto_goTypes = nil
	file_protobuf_lhd_proto_depIdxs = nil
}
