// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/lhd.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// //////////////////////////////////////////////////// 网络消息 /////////////////////////////////////////////////////////////
type LHDMSG int32

const (
	LHDMSG_UNKNOW_LHD                          LHDMSG = 0
	LHDMSG_CS_ENTER_GAME_LHD_REQ               LHDMSG = 17001
	LHDMSG_SC_ENTER_GAME_LHD_RES               LHDMSG = 17002
	LHDMSG_CS_LEAVE_GAME_LHD_REQ               LHDMSG = 17003
	LHDMSG_SC_LEAVE_GAME_LHD_RES               LHDMSG = 17004
	LHDMSG_CS_BET_LHD_REQ                      LHDMSG = 17008
	LHDMSG_SC_BET_LHD_RES                      LHDMSG = 17009
	LHDMSG_CS_CLEAN_BET_LHD_REQ                LHDMSG = 17010
	LHDMSG_SC_CLEAN_BET_LHD_RES                LHDMSG = 17011
	LHDMSG_CS_PLAYERS_LHD_LIST_REQ             LHDMSG = 17015
	LHDMSG_SC_PLAYERS_LHD_LIST_RES             LHDMSG = 17016
	LHDMSG_SC_SWITCH_GAME_STATUS_BROADCAST_LHD LHDMSG = 17020
	LHDMSG_SC_CLEAN_HISTORY_BROADCAST_LHD      LHDMSG = 17021
)

var LHDMSG_name = map[int32]string{
	0:     "UNKNOW_LHD",
	17001: "CS_ENTER_GAME_LHD_REQ",
	17002: "SC_ENTER_GAME_LHD_RES",
	17003: "CS_LEAVE_GAME_LHD_REQ",
	17004: "SC_LEAVE_GAME_LHD_RES",
	17008: "CS_BET_LHD_REQ",
	17009: "SC_BET_LHD_RES",
	17010: "CS_CLEAN_BET_LHD_REQ",
	17011: "SC_CLEAN_BET_LHD_RES",
	17015: "CS_PLAYERS_LHD_LIST_REQ",
	17016: "SC_PLAYERS_LHD_LIST_RES",
	17020: "SC_SWITCH_GAME_STATUS_BROADCAST_LHD",
	17021: "SC_CLEAN_HISTORY_BROADCAST_LHD",
}
var LHDMSG_value = map[string]int32{
	"UNKNOW_LHD":                          0,
	"CS_ENTER_GAME_LHD_REQ":               17001,
	"SC_ENTER_GAME_LHD_RES":               17002,
	"CS_LEAVE_GAME_LHD_REQ":               17003,
	"SC_LEAVE_GAME_LHD_RES":               17004,
	"CS_BET_LHD_REQ":                      17008,
	"SC_BET_LHD_RES":                      17009,
	"CS_CLEAN_BET_LHD_REQ":                17010,
	"SC_CLEAN_BET_LHD_RES":                17011,
	"CS_PLAYERS_LHD_LIST_REQ":             17015,
	"SC_PLAYERS_LHD_LIST_RES":             17016,
	"SC_SWITCH_GAME_STATUS_BROADCAST_LHD": 17020,
	"SC_CLEAN_HISTORY_BROADCAST_LHD":      17021,
}

func (x LHDMSG) String() string {
	return proto.EnumName(LHDMSG_name, int32(x))
}
func (LHDMSG) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

// //////////////////////////////////////////////////// 游戏枚举 /////////////////////////////////////////////////////////////
// 下注区域
type LHDAREA int32

const (
	LHDAREA_LHD_AREA_Unknow LHDAREA = 0
	LHDAREA_LHD_AREA_DRAGON LHDAREA = 1
	LHDAREA_LHD_AREA_TIGER  LHDAREA = 2
	LHDAREA_LHD_AREA_PEACE  LHDAREA = 3
)

var LHDAREA_name = map[int32]string{
	0: "LHD_AREA_Unknow",
	1: "LHD_AREA_DRAGON",
	2: "LHD_AREA_TIGER",
	3: "LHD_AREA_PEACE",
}
var LHDAREA_value = map[string]int32{
	"LHD_AREA_Unknow": 0,
	"LHD_AREA_DRAGON": 1,
	"LHD_AREA_TIGER":  2,
	"LHD_AREA_PEACE":  3,
}

func (x LHDAREA) String() string {
	return proto.EnumName(LHDAREA_name, int32(x))
}
func (LHDAREA) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

// 游戏状态
type LHDGAMESTATUS int32

const (
	LHDGAMESTATUS_LHD_GAMESTATUS_Unknow LHDGAMESTATUS = 0
	LHDGAMESTATUS_LHD_GAMESTATUS_WAIT   LHDGAMESTATUS = 1
	LHDGAMESTATUS_LHD_GAMESTATUS_BET    LHDGAMESTATUS = 2
	LHDGAMESTATUS_LHD_GAMESTATUS_STOP   LHDGAMESTATUS = 3
	LHDGAMESTATUS_LHD_GAMESTATUS_SETTLE LHDGAMESTATUS = 4
)

var LHDGAMESTATUS_name = map[int32]string{
	0: "LHD_GAMESTATUS_Unknow",
	1: "LHD_GAMESTATUS_WAIT",
	2: "LHD_GAMESTATUS_BET",
	3: "LHD_GAMESTATUS_STOP",
	4: "LHD_GAMESTATUS_SETTLE",
}
var LHDGAMESTATUS_value = map[string]int32{
	"LHD_GAMESTATUS_Unknow": 0,
	"LHD_GAMESTATUS_WAIT":   1,
	"LHD_GAMESTATUS_BET":    2,
	"LHD_GAMESTATUS_STOP":   3,
	"LHD_GAMESTATUS_SETTLE": 4,
}

func (x LHDGAMESTATUS) String() string {
	return proto.EnumName(LHDGAMESTATUS_name, int32(x))
}
func (LHDGAMESTATUS) EnumDescriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

// //////////////////////////////////////////////////// 消息数据结构 /////////////////////////////////////////////////////////////
// 请求进入房间
type ENTER_GAME_LHD_REQ struct {
	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	RoomID    uint32 `protobuf:"varint,2,opt,name=RoomID" json:"RoomID,omitempty"`
}

func (m *ENTER_GAME_LHD_REQ) Reset()                    { *m = ENTER_GAME_LHD_REQ{} }
func (m *ENTER_GAME_LHD_REQ) String() string            { return proto.CompactTextString(m) }
func (*ENTER_GAME_LHD_REQ) ProtoMessage()               {}
func (*ENTER_GAME_LHD_REQ) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *ENTER_GAME_LHD_REQ) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *ENTER_GAME_LHD_REQ) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

// 进入房间，服务器返回房间、游戏状态相关数据
type ENTER_GAME_LHD_RES struct {
	RoomID         uint32                       `protobuf:"varint,1,opt,name=RoomID" json:"RoomID,omitempty"`
	HistoryWinners []*ENTER_GAME_LHD_RES_Winner `protobuf:"bytes,2,rep,name=HistoryWinners" json:"HistoryWinners,omitempty"`
	Bets           []int64                      `protobuf:"varint,3,rep,packed,name=bets" json:"bets,omitempty"`
	BetLimit       uint64                       `protobuf:"varint,4,opt,name=BetLimit" json:"BetLimit,omitempty"`
	Status         *StatusMsgLHD                `protobuf:"bytes,5,opt,name=Status" json:"Status,omitempty"`
}

func (m *ENTER_GAME_LHD_RES) Reset()                    { *m = ENTER_GAME_LHD_RES{} }
func (m *ENTER_GAME_LHD_RES) String() string            { return proto.CompactTextString(m) }
func (*ENTER_GAME_LHD_RES) ProtoMessage()               {}
func (*ENTER_GAME_LHD_RES) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *ENTER_GAME_LHD_RES) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *ENTER_GAME_LHD_RES) GetHistoryWinners() []*ENTER_GAME_LHD_RES_Winner {
	if m != nil {
		return m.HistoryWinners
	}
	return nil
}

func (m *ENTER_GAME_LHD_RES) GetBets() []int64 {
	if m != nil {
		return m.Bets
	}
	return nil
}

func (m *ENTER_GAME_LHD_RES) GetBetLimit() uint64 {
	if m != nil {
		return m.BetLimit
	}
	return 0
}

func (m *ENTER_GAME_LHD_RES) GetStatus() *StatusMsgLHD {
	if m != nil {
		return m.Status
	}
	return nil
}

type ENTER_GAME_LHD_RES_Winner struct {
	WinArea LHDAREA `protobuf:"varint,1,opt,name=WinArea,enum=protomsg.LHDAREA" json:"WinArea,omitempty"`
}

func (m *ENTER_GAME_LHD_RES_Winner) Reset()                    { *m = ENTER_GAME_LHD_RES_Winner{} }
func (m *ENTER_GAME_LHD_RES_Winner) String() string            { return proto.CompactTextString(m) }
func (*ENTER_GAME_LHD_RES_Winner) ProtoMessage()               {}
func (*ENTER_GAME_LHD_RES_Winner) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1, 0} }

func (m *ENTER_GAME_LHD_RES_Winner) GetWinArea() LHDAREA {
	if m != nil {
		return m.WinArea
	}
	return LHDAREA_LHD_AREA_Unknow
}

// 请求退出房间
type LEAVE_GAME_LHD_REQ struct {
	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	RoomID    uint32 `protobuf:"varint,2,opt,name=RoomID" json:"RoomID,omitempty"`
}

func (m *LEAVE_GAME_LHD_REQ) Reset()                    { *m = LEAVE_GAME_LHD_REQ{} }
func (m *LEAVE_GAME_LHD_REQ) String() string            { return proto.CompactTextString(m) }
func (*LEAVE_GAME_LHD_REQ) ProtoMessage()               {}
func (*LEAVE_GAME_LHD_REQ) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{2} }

func (m *LEAVE_GAME_LHD_REQ) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *LEAVE_GAME_LHD_REQ) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type LEAVE_GAME_LHD_RES struct {
	Ret    uint32 `protobuf:"varint,1,opt,name=Ret" json:"Ret,omitempty"`
	RoomID uint32 `protobuf:"varint,2,opt,name=RoomID" json:"RoomID,omitempty"`
}

func (m *LEAVE_GAME_LHD_RES) Reset()                    { *m = LEAVE_GAME_LHD_RES{} }
func (m *LEAVE_GAME_LHD_RES) String() string            { return proto.CompactTextString(m) }
func (*LEAVE_GAME_LHD_RES) ProtoMessage()               {}
func (*LEAVE_GAME_LHD_RES) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{3} }

func (m *LEAVE_GAME_LHD_RES) GetRet() uint32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *LEAVE_GAME_LHD_RES) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

// //////////////////////////////////////////// 游戏 /////////////////////////////////////////////
// 服务器广播切换状态
type SWITCH_GAME_STATUS_BROADCAST_LHD struct {
	NextStatus *StatusMsgLHD `protobuf:"bytes,1,opt,name=NextStatus" json:"NextStatus,omitempty"`
}

func (m *SWITCH_GAME_STATUS_BROADCAST_LHD) Reset()         { *m = SWITCH_GAME_STATUS_BROADCAST_LHD{} }
func (m *SWITCH_GAME_STATUS_BROADCAST_LHD) String() string { return proto.CompactTextString(m) }
func (*SWITCH_GAME_STATUS_BROADCAST_LHD) ProtoMessage()    {}
func (*SWITCH_GAME_STATUS_BROADCAST_LHD) Descriptor() ([]byte, []int) {
	return fileDescriptor5, []int{4}
}

func (m *SWITCH_GAME_STATUS_BROADCAST_LHD) GetNextStatus() *StatusMsgLHD {
	if m != nil {
		return m.NextStatus
	}
	return nil
}

// 状态结构
type StatusMsgLHD struct {
	Status           LHDGAMESTATUS   `protobuf:"varint,1,opt,name=Status,enum=protomsg.LHDGAMESTATUS" json:"Status,omitempty"`
	Status_StartTime uint64          `protobuf:"varint,2,opt,name=Status_StartTime,json=StatusStartTime" json:"Status_StartTime,omitempty"`
	Status_EndTime   uint64          `protobuf:"varint,3,opt,name=Status_EndTime,json=StatusEndTime" json:"Status_EndTime,omitempty"`
	AreaBetVal       map[int32]int64 `protobuf:"bytes,4,rep,name=AreaBetVal" json:"AreaBetVal,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	AreaBetVal_Own   map[int32]int64 `protobuf:"bytes,5,rep,name=AreaBetVal_Own,json=AreaBetValOwn" json:"AreaBetVal_Own,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Status_Data      []byte          `protobuf:"bytes,6,opt,name=Status_Data,json=StatusData,proto3" json:"Status_Data,omitempty"`
}

func (m *StatusMsgLHD) Reset()                    { *m = StatusMsgLHD{} }
func (m *StatusMsgLHD) String() string            { return proto.CompactTextString(m) }
func (*StatusMsgLHD) ProtoMessage()               {}
func (*StatusMsgLHD) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{5} }

func (m *StatusMsgLHD) GetStatus() LHDGAMESTATUS {
	if m != nil {
		return m.Status
	}
	return LHDGAMESTATUS_LHD_GAMESTATUS_Unknow
}

func (m *StatusMsgLHD) GetStatus_StartTime() uint64 {
	if m != nil {
		return m.Status_StartTime
	}
	return 0
}

func (m *StatusMsgLHD) GetStatus_EndTime() uint64 {
	if m != nil {
		return m.Status_EndTime
	}
	return 0
}

func (m *StatusMsgLHD) GetAreaBetVal() map[int32]int64 {
	if m != nil {
		return m.AreaBetVal
	}
	return nil
}

func (m *StatusMsgLHD) GetAreaBetVal_Own() map[int32]int64 {
	if m != nil {
		return m.AreaBetVal_Own
	}
	return nil
}

func (m *StatusMsgLHD) GetStatus_Data() []byte {
	if m != nil {
		return m.Status_Data
	}
	return nil
}

// 1.等待
type Status_Wait_LHD struct {
}

func (m *Status_Wait_LHD) Reset()                    { *m = Status_Wait_LHD{} }
func (m *Status_Wait_LHD) String() string            { return proto.CompactTextString(m) }
func (*Status_Wait_LHD) ProtoMessage()               {}
func (*Status_Wait_LHD) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{6} }

// 2.押注
type Status_Bet_LHD struct {
}

func (m *Status_Bet_LHD) Reset()                    { *m = Status_Bet_LHD{} }
func (m *Status_Bet_LHD) String() string            { return proto.CompactTextString(m) }
func (*Status_Bet_LHD) ProtoMessage()               {}
func (*Status_Bet_LHD) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{7} }

// 3.停止下注
type Status_Stop_LHD struct {
}

func (m *Status_Stop_LHD) Reset()                    { *m = Status_Stop_LHD{} }
func (m *Status_Stop_LHD) String() string            { return proto.CompactTextString(m) }
func (*Status_Stop_LHD) ProtoMessage()               {}
func (*Status_Stop_LHD) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{8} }

// 4.结算
type Status_Settle_LHD struct {
	WinArea     LHDAREA         `protobuf:"varint,1,opt,name=WinArea,enum=protomsg.LHDAREA" json:"WinArea,omitempty"`
	DragonCards *Card           `protobuf:"bytes,2,opt,name=DragonCards" json:"DragonCards,omitempty"`
	TigerCards  *Card           `protobuf:"bytes,3,opt,name=TigerCards" json:"TigerCards,omitempty"`
	Players     map[int32]int64 `protobuf:"bytes,4,rep,name=Players" json:"Players,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *Status_Settle_LHD) Reset()                    { *m = Status_Settle_LHD{} }
func (m *Status_Settle_LHD) String() string            { return proto.CompactTextString(m) }
func (*Status_Settle_LHD) ProtoMessage()               {}
func (*Status_Settle_LHD) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{9} }

func (m *Status_Settle_LHD) GetWinArea() LHDAREA {
	if m != nil {
		return m.WinArea
	}
	return LHDAREA_LHD_AREA_Unknow
}

func (m *Status_Settle_LHD) GetDragonCards() *Card {
	if m != nil {
		return m.DragonCards
	}
	return nil
}

func (m *Status_Settle_LHD) GetTigerCards() *Card {
	if m != nil {
		return m.TigerCards
	}
	return nil
}

func (m *Status_Settle_LHD) GetPlayers() map[int32]int64 {
	if m != nil {
		return m.Players
	}
	return nil
}

// 请求下注
type BET_LHD_REQ struct {
	AccountID uint32  `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	Area      LHDAREA `protobuf:"varint,2,opt,name=Area,enum=protomsg.LHDAREA" json:"Area,omitempty"`
	Bet       uint64  `protobuf:"varint,3,opt,name=Bet" json:"Bet,omitempty"`
}

func (m *BET_LHD_REQ) Reset()                    { *m = BET_LHD_REQ{} }
func (m *BET_LHD_REQ) String() string            { return proto.CompactTextString(m) }
func (*BET_LHD_REQ) ProtoMessage()               {}
func (*BET_LHD_REQ) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{10} }

func (m *BET_LHD_REQ) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *BET_LHD_REQ) GetArea() LHDAREA {
	if m != nil {
		return m.Area
	}
	return LHDAREA_LHD_AREA_Unknow
}

func (m *BET_LHD_REQ) GetBet() uint64 {
	if m != nil {
		return m.Bet
	}
	return 0
}

// 间隔 200 毫秒一次 广播玩家下注
type BET_LHD_RES struct {
	Players    []*BET_LHD_RES_BetPlayer `protobuf:"bytes,1,rep,name=Players" json:"Players,omitempty"`
	AreaBetVal map[int32]int64          `protobuf:"bytes,2,rep,name=AreaBetVal" json:"AreaBetVal,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *BET_LHD_RES) Reset()                    { *m = BET_LHD_RES{} }
func (m *BET_LHD_RES) String() string            { return proto.CompactTextString(m) }
func (*BET_LHD_RES) ProtoMessage()               {}
func (*BET_LHD_RES) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{11} }

func (m *BET_LHD_RES) GetPlayers() []*BET_LHD_RES_BetPlayer {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *BET_LHD_RES) GetAreaBetVal() map[int32]int64 {
	if m != nil {
		return m.AreaBetVal
	}
	return nil
}

type BET_LHD_RES_BetPlayer struct {
	AccountID uint32  `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	Area      LHDAREA `protobuf:"varint,2,opt,name=Area,enum=protomsg.LHDAREA" json:"Area,omitempty"`
	Bet       uint64  `protobuf:"varint,3,opt,name=Bet" json:"Bet,omitempty"`
}

func (m *BET_LHD_RES_BetPlayer) Reset()                    { *m = BET_LHD_RES_BetPlayer{} }
func (m *BET_LHD_RES_BetPlayer) String() string            { return proto.CompactTextString(m) }
func (*BET_LHD_RES_BetPlayer) ProtoMessage()               {}
func (*BET_LHD_RES_BetPlayer) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{11, 0} }

func (m *BET_LHD_RES_BetPlayer) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *BET_LHD_RES_BetPlayer) GetArea() LHDAREA {
	if m != nil {
		return m.Area
	}
	return LHDAREA_LHD_AREA_Unknow
}

func (m *BET_LHD_RES_BetPlayer) GetBet() uint64 {
	if m != nil {
		return m.Bet
	}
	return 0
}

// 请求清除下注
type CLEAN_BET_LHD_REQ struct {
	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
}

func (m *CLEAN_BET_LHD_REQ) Reset()                    { *m = CLEAN_BET_LHD_REQ{} }
func (m *CLEAN_BET_LHD_REQ) String() string            { return proto.CompactTextString(m) }
func (*CLEAN_BET_LHD_REQ) ProtoMessage()               {}
func (*CLEAN_BET_LHD_REQ) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{12} }

func (m *CLEAN_BET_LHD_REQ) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

// 服务器广播清除下注
type CLEAN_BET_LHD_RES struct {
	AccountID        uint32          `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	PlayerAreaBetVal map[int32]int64 `protobuf:"bytes,2,rep,name=PlayerAreaBetVal" json:"PlayerAreaBetVal,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	AreaBetVal       map[int32]int64 `protobuf:"bytes,3,rep,name=AreaBetVal" json:"AreaBetVal,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *CLEAN_BET_LHD_RES) Reset()                    { *m = CLEAN_BET_LHD_RES{} }
func (m *CLEAN_BET_LHD_RES) String() string            { return proto.CompactTextString(m) }
func (*CLEAN_BET_LHD_RES) ProtoMessage()               {}
func (*CLEAN_BET_LHD_RES) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{13} }

func (m *CLEAN_BET_LHD_RES) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *CLEAN_BET_LHD_RES) GetPlayerAreaBetVal() map[int32]int64 {
	if m != nil {
		return m.PlayerAreaBetVal
	}
	return nil
}

func (m *CLEAN_BET_LHD_RES) GetAreaBetVal() map[int32]int64 {
	if m != nil {
		return m.AreaBetVal
	}
	return nil
}

// 请求LHD玩家列表
type PLAYERS_LHD_LIST_RES struct {
	Players []*AccountStorageData `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
}

func (m *PLAYERS_LHD_LIST_RES) Reset()                    { *m = PLAYERS_LHD_LIST_RES{} }
func (m *PLAYERS_LHD_LIST_RES) String() string            { return proto.CompactTextString(m) }
func (*PLAYERS_LHD_LIST_RES) ProtoMessage()               {}
func (*PLAYERS_LHD_LIST_RES) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{14} }

func (m *PLAYERS_LHD_LIST_RES) GetPlayers() []*AccountStorageData {
	if m != nil {
		return m.Players
	}
	return nil
}

func init() {
	proto.RegisterType((*ENTER_GAME_LHD_REQ)(nil), "protomsg.ENTER_GAME_LHD_REQ")
	proto.RegisterType((*ENTER_GAME_LHD_RES)(nil), "protomsg.ENTER_GAME_LHD_RES")
	proto.RegisterType((*ENTER_GAME_LHD_RES_Winner)(nil), "protomsg.ENTER_GAME_LHD_RES.Winner")
	proto.RegisterType((*LEAVE_GAME_LHD_REQ)(nil), "protomsg.LEAVE_GAME_LHD_REQ")
	proto.RegisterType((*LEAVE_GAME_LHD_RES)(nil), "protomsg.LEAVE_GAME_LHD_RES")
	proto.RegisterType((*SWITCH_GAME_STATUS_BROADCAST_LHD)(nil), "protomsg.SWITCH_GAME_STATUS_BROADCAST_LHD")
	proto.RegisterType((*StatusMsgLHD)(nil), "protomsg.StatusMsgLHD")
	proto.RegisterType((*Status_Wait_LHD)(nil), "protomsg.Status_Wait_LHD")
	proto.RegisterType((*Status_Bet_LHD)(nil), "protomsg.Status_Bet_LHD")
	proto.RegisterType((*Status_Stop_LHD)(nil), "protomsg.Status_Stop_LHD")
	proto.RegisterType((*Status_Settle_LHD)(nil), "protomsg.Status_Settle_LHD")
	proto.RegisterType((*BET_LHD_REQ)(nil), "protomsg.BET_LHD_REQ")
	proto.RegisterType((*BET_LHD_RES)(nil), "protomsg.BET_LHD_RES")
	proto.RegisterType((*BET_LHD_RES_BetPlayer)(nil), "protomsg.BET_LHD_RES.BetPlayer")
	proto.RegisterType((*CLEAN_BET_LHD_REQ)(nil), "protomsg.CLEAN_BET_LHD_REQ")
	proto.RegisterType((*CLEAN_BET_LHD_RES)(nil), "protomsg.CLEAN_BET_LHD_RES")
	proto.RegisterType((*PLAYERS_LHD_LIST_RES)(nil), "protomsg.PLAYERS_LHD_LIST_RES")
	proto.RegisterEnum("protomsg.LHDMSG", LHDMSG_name, LHDMSG_value)
	proto.RegisterEnum("protomsg.LHDAREA", LHDAREA_name, LHDAREA_value)
	proto.RegisterEnum("protomsg.LHDGAMESTATUS", LHDGAMESTATUS_name, LHDGAMESTATUS_value)
}

func init() { proto.RegisterFile("protobuf/lhd.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 1060 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x72, 0xdb, 0x44,
	0x14, 0xae, 0x24, 0xc7, 0x69, 0x8f, 0x1b, 0x67, 0xb3, 0xf9, 0x33, 0xa6, 0x50, 0x8f, 0x4b, 0x18,
	0x27, 0x9d, 0x71, 0x68, 0x18, 0x3a, 0xd0, 0x19, 0x18, 0x64, 0x59, 0xc4, 0x26, 0x8a, 0x9d, 0xee,
	0x2a, 0xf5, 0xb4, 0x0c, 0xa3, 0x51, 0x1a, 0x11, 0x3c, 0x75, 0xa4, 0x8c, 0xbc, 0x21, 0xe4, 0xde,
	0xf7, 0xf0, 0x0c, 0x3c, 0x02, 0xef, 0xc1, 0x43, 0x70, 0xc9, 0xcf, 0x05, 0x3f, 0x17, 0x70, 0x01,
	0x03, 0xa3, 0x5d, 0x59, 0x92, 0x2d, 0x35, 0x69, 0xa6, 0x70, 0xe5, 0xdd, 0xef, 0x7c, 0xe7, 0xec,
	0x39, 0xdf, 0x39, 0xbb, 0x16, 0xe0, 0x13, 0xdf, 0x63, 0xde, 0xc1, 0xe9, 0x67, 0x9b, 0x83, 0xcf,
	0x0f, 0xeb, 0x7c, 0x83, 0xaf, 0xf3, 0x9f, 0xe3, 0xe1, 0x51, 0x79, 0x31, 0xb2, 0x1e, 0xda, 0xcc,
	0x16, 0xe6, 0xea, 0xc7, 0x80, 0xf5, 0x8e, 0xa9, 0x13, 0x6b, 0x5b, 0xdd, 0xd5, 0x2d, 0xa3, 0xd5,
	0xb4, 0x88, 0xfe, 0x10, 0xdf, 0x82, 0x1b, 0xea, 0xd3, 0xa7, 0xde, 0xa9, 0xcb, 0xda, 0xcd, 0x92,
	0x54, 0x91, 0x6a, 0x73, 0x24, 0x06, 0xf0, 0x0a, 0xe4, 0x89, 0xe7, 0x1d, 0xb7, 0x9b, 0x25, 0x99,
	0x9b, 0xc2, 0x5d, 0xf5, 0x6b, 0x39, 0x23, 0x18, 0x4d, 0xd0, 0xa5, 0x24, 0x1d, 0xef, 0x40, 0xb1,
	0xd5, 0x1f, 0x32, 0xcf, 0x3f, 0xef, 0xf5, 0x5d, 0xd7, 0xf1, 0x87, 0x25, 0xb9, 0xa2, 0xd4, 0x0a,
	0x5b, 0x77, 0xea, 0xe3, 0x94, 0xeb, 0xe9, 0x68, 0x75, 0xc1, 0x25, 0x53, 0xae, 0x18, 0x43, 0xee,
	0xc0, 0x61, 0xc3, 0x92, 0x52, 0x51, 0x6a, 0x0a, 0xe1, 0x6b, 0x5c, 0x86, 0xeb, 0x0d, 0x87, 0x19,
	0xfd, 0xe3, 0x3e, 0x2b, 0xe5, 0x2a, 0x52, 0x2d, 0x47, 0xa2, 0x3d, 0xae, 0x43, 0x9e, 0x32, 0x9b,
	0x9d, 0x0e, 0x4b, 0x33, 0x15, 0xa9, 0x56, 0xd8, 0x5a, 0x89, 0x0f, 0x15, 0xf8, 0xee, 0xf0, 0xc8,
	0x68, 0x35, 0x49, 0xc8, 0x2a, 0xbf, 0x03, 0x79, 0x71, 0x14, 0xbe, 0x0b, 0xb3, 0xbd, 0xbe, 0xab,
	0xfa, 0x8e, 0xcd, 0xeb, 0x29, 0x6e, 0x2d, 0xc4, 0xae, 0x46, 0xab, 0xa9, 0x12, 0x5d, 0x25, 0x63,
	0x46, 0x20, 0xaf, 0xa1, 0xab, 0x8f, 0xf4, 0xff, 0x42, 0xde, 0x0f, 0x32, 0x62, 0x51, 0x8c, 0x40,
	0x21, 0x0e, 0x0b, 0xa3, 0x04, 0xcb, 0xe7, 0xfa, 0x3f, 0x81, 0x0a, 0xed, 0xb5, 0x4d, 0xad, 0x25,
	0x02, 0x50, 0x53, 0x35, 0xf7, 0xa9, 0xd5, 0x20, 0x5d, 0xb5, 0xa9, 0xa9, 0xd4, 0x0c, 0x22, 0xe2,
	0xfb, 0x00, 0x1d, 0xe7, 0x4b, 0x16, 0x4a, 0x23, 0x5d, 0x28, 0x4d, 0x82, 0x59, 0xfd, 0x4e, 0x81,
	0x9b, 0x49, 0x23, 0xde, 0x8c, 0xf4, 0x15, 0x22, 0xad, 0x4e, 0x88, 0x14, 0x24, 0x20, 0xce, 0x1f,
	0x0b, 0x8c, 0xd7, 0x01, 0x89, 0x95, 0x45, 0x99, 0xed, 0x33, 0xb3, 0x7f, 0xec, 0xf0, 0xfc, 0x73,
	0x64, 0x5e, 0xe0, 0x11, 0x8c, 0xd7, 0xa0, 0x18, 0x52, 0x75, 0xf7, 0x90, 0x13, 0x15, 0x4e, 0x9c,
	0x13, 0x68, 0x08, 0xe2, 0x8f, 0x00, 0x82, 0x1e, 0x34, 0x1c, 0xf6, 0xc8, 0x1e, 0x94, 0x72, 0x7c,
	0xb6, 0xde, 0xcc, 0xae, 0xa5, 0x1e, 0x13, 0x75, 0x97, 0xf9, 0xe7, 0x24, 0xe1, 0x89, 0xf7, 0xa0,
	0x18, 0xef, 0xac, 0xee, 0x99, 0x5b, 0x9a, 0xe1, 0xb1, 0xd6, 0x2f, 0x8d, 0xd5, 0x3d, 0x73, 0x45,
	0xb8, 0xb9, 0x09, 0x0c, 0xdf, 0x86, 0x42, 0x58, 0x40, 0xd3, 0x66, 0x76, 0x29, 0x5f, 0x91, 0x6a,
	0x37, 0x09, 0x08, 0x28, 0x40, 0xca, 0xef, 0xc3, 0xfc, 0x54, 0x46, 0x41, 0x9f, 0x9f, 0x39, 0xe7,
	0x5c, 0xcd, 0x19, 0x12, 0x2c, 0xf1, 0x12, 0xcc, 0x7c, 0x61, 0x0f, 0x4e, 0x85, 0x4c, 0x0a, 0x11,
	0x9b, 0x07, 0xf2, 0xbb, 0x52, 0xf9, 0x43, 0xc0, 0xe9, 0x24, 0xae, 0x12, 0xa1, 0xba, 0x00, 0xa1,
	0xea, 0x56, 0xcf, 0xee, 0xb3, 0x60, 0x34, 0xaa, 0x28, 0x52, 0xbd, 0xe1, 0x08, 0x24, 0x26, 0x51,
	0xe6, 0x9d, 0x70, 0xe8, 0x1b, 0x19, 0x16, 0xc6, 0x98, 0xc3, 0xd8, 0xc0, 0xe1, 0x53, 0x75, 0x95,
	0x2b, 0x83, 0xdf, 0x82, 0x42, 0xd3, 0xb7, 0x8f, 0x3c, 0x57, 0xb3, 0xfd, 0xc3, 0x21, 0x4f, 0xad,
	0xb0, 0x55, 0x8c, 0x1d, 0x02, 0x98, 0x24, 0x29, 0xb8, 0x0e, 0x60, 0xf6, 0x8f, 0x1c, 0x5f, 0x38,
	0x28, 0x99, 0x0e, 0x09, 0x06, 0x6e, 0xc0, 0xec, 0xde, 0xc0, 0x3e, 0x0f, 0x5e, 0x1c, 0x31, 0x15,
	0xb5, 0xe9, 0x4e, 0x26, 0x92, 0xaf, 0x87, 0x54, 0xd1, 0xc8, 0xb1, 0x63, 0xf9, 0x01, 0xdc, 0x4c,
	0x1a, 0xae, 0x24, 0xee, 0x21, 0x14, 0x1a, 0xba, 0xf9, 0x82, 0xaf, 0xc1, 0x1a, 0xe4, 0xb8, 0x70,
	0xf2, 0xf3, 0x84, 0xe3, 0xe6, 0xe0, 0xfc, 0x86, 0xc3, 0xc2, 0x8b, 0x10, 0x2c, 0xab, 0xdf, 0xca,
	0xc9, 0x63, 0x28, 0x7e, 0x2f, 0xae, 0x5a, 0xe2, 0x55, 0xdf, 0x8e, 0x63, 0x25, 0x78, 0xf5, 0x86,
	0xc3, 0x04, 0x2f, 0x2a, 0x16, 0xeb, 0x13, 0x37, 0x49, 0xbc, 0xd2, 0x6b, 0xd9, 0xde, 0x17, 0x5c,
	0xa4, 0xf2, 0x01, 0xdc, 0x88, 0x82, 0xff, 0x4f, 0x55, 0xbf, 0xe4, 0xcd, 0xa9, 0xde, 0x83, 0x05,
	0xcd, 0xd0, 0xd5, 0x8e, 0xf5, 0xc2, 0x0d, 0xaa, 0x7e, 0x2f, 0xa7, 0x7d, 0xe8, 0x25, 0xe5, 0x7d,
	0x0a, 0x48, 0xc8, 0x90, 0x92, 0xf5, 0x5e, 0x62, 0x6e, 0xa7, 0x83, 0xd6, 0xa7, 0x7d, 0x84, 0xc4,
	0xa9, 0x50, 0x78, 0x67, 0xa2, 0x5f, 0x0a, 0x0f, 0x7c, 0xf7, 0xa2, 0xc0, 0x17, 0x75, 0x4d, 0x83,
	0xe5, 0xcc, 0x73, 0xaf, 0xf4, 0x22, 0xbd, 0x64, 0x5b, 0x3a, 0xb0, 0xb4, 0x67, 0xa8, 0x8f, 0x75,
	0x42, 0x79, 0xca, 0x46, 0x9b, 0x9a, 0x5c, 0xe5, 0xfb, 0x30, 0x7b, 0x32, 0x31, 0xd3, 0xb7, 0xe2,
	0x2a, 0x43, 0xb5, 0x29, 0xf3, 0x7c, 0xfb, 0xc8, 0x09, 0x9e, 0x55, 0x32, 0x26, 0x6f, 0xfc, 0x23,
	0x43, 0xde, 0x68, 0x35, 0x77, 0xe9, 0x36, 0x2e, 0x02, 0xec, 0x77, 0x76, 0x3a, 0xdd, 0x5e, 0x10,
	0x19, 0x5d, 0xc3, 0xaf, 0xc2, 0xb2, 0x46, 0xad, 0xf4, 0x37, 0x11, 0xfa, 0x61, 0x24, 0x05, 0x46,
	0xaa, 0xa5, 0x8d, 0x14, 0xfd, 0x28, 0x8c, 0x1a, 0xb5, 0xd2, 0x7f, 0xf7, 0xe8, 0xa7, 0xc8, 0x33,
	0xfd, 0xff, 0x8d, 0x7e, 0x1e, 0x49, 0x78, 0x09, 0x8a, 0x1a, 0x4d, 0x8e, 0x1c, 0xfa, 0x45, 0xa0,
	0x54, 0x4b, 0xb6, 0x09, 0xfd, 0x3a, 0x92, 0x70, 0x19, 0x96, 0x34, 0x6a, 0xa5, 0x86, 0x14, 0xfd,
	0x26, 0x6c, 0x54, 0x4b, 0xd9, 0x28, 0xfa, 0x7d, 0x24, 0xe1, 0xd7, 0x60, 0x55, 0xa3, 0x56, 0x86,
	0x8a, 0x0f, 0xd1, 0x1f, 0xc2, 0x4c, 0xb5, 0x2c, 0x33, 0x45, 0x7f, 0x8e, 0x24, 0xbc, 0x0e, 0x77,
	0xa8, 0x66, 0x5d, 0xf6, 0xf9, 0x80, 0xfe, 0x1a, 0x49, 0xf8, 0x0d, 0x78, 0x3d, 0x4a, 0xa2, 0xd5,
	0xa6, 0x66, 0x97, 0x3c, 0x9e, 0x62, 0xfd, 0x3d, 0x92, 0x36, 0x3e, 0x81, 0xd9, 0xf0, 0x2a, 0xe3,
	0x45, 0x98, 0x0f, 0xce, 0x0b, 0xd6, 0xd6, 0xbe, 0xfb, 0xcc, 0xf5, 0xce, 0xd0, 0xb5, 0x09, 0xb0,
	0x49, 0xd4, 0xed, 0x6e, 0x07, 0x49, 0x18, 0x43, 0x31, 0x02, 0xcd, 0xf6, 0xb6, 0x4e, 0x90, 0x3c,
	0x81, 0xed, 0xe9, 0xaa, 0xa6, 0x23, 0x65, 0xe3, 0x2b, 0x09, 0xe6, 0x26, 0xbe, 0x32, 0xf0, 0x2b,
	0xb0, 0x1c, 0xb0, 0x62, 0x24, 0x3e, 0x69, 0x15, 0x16, 0xa7, 0x4c, 0x3d, 0xb5, 0x6d, 0x22, 0x09,
	0xaf, 0x00, 0x9e, 0x32, 0x34, 0x74, 0x13, 0xc9, 0x19, 0x0e, 0xd4, 0xec, 0xee, 0x21, 0x25, 0xe3,
	0x10, 0xaa, 0x9b, 0xa6, 0xa1, 0xa3, 0x5c, 0x63, 0xfe, 0xc9, 0x9c, 0xef, 0x79, 0x6c, 0x73, 0x3c,
	0x9d, 0x07, 0x79, 0xbe, 0x7a, 0xfb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6c, 0x14, 0xa5, 0x4e,
	0xb3, 0x0b, 0x00, 0x00,
}
