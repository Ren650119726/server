// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/red2black.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// //////////////////////////////////////////////////// 网络消息 /////////////////////////////////////////////////////////////
type RED2BLACKMSG int32

const (
	RED2BLACKMSG_UNKNOW_RED2BLACK                RED2BLACKMSG = 0
	RED2BLACKMSG_CS_ENTER_GAME_RED2BLACK_REQ     RED2BLACKMSG = 60001
	RED2BLACKMSG_SC_ENTER_GAME_RED2BLACK_RES     RED2BLACKMSG = 60002
	RED2BLACKMSG_CS_LEAVE_GAME_RED2BLACK_REQ     RED2BLACKMSG = 60003
	RED2BLACKMSG_SC_LEAVE_GAME_RED2BLACK_RES     RED2BLACKMSG = 60004
	RED2BLACKMSG_CS_BET_RED2BLACK_REQ            RED2BLACKMSG = 60008
	RED2BLACKMSG_SC_BET_RED2BLACK_RES            RED2BLACKMSG = 60009
	RED2BLACKMSG_CS_CLEAN_BET_RED2BLACK_REQ      RED2BLACKMSG = 60010
	RED2BLACKMSG_SC_CLEAN_BET_RED2BLACK_RES      RED2BLACKMSG = 60011
	RED2BLACKMSG_CS_PLAYERS_RED2BLACK_LIST_REQ   RED2BLACKMSG = 60015
	RED2BLACKMSG_SC_PLAYERS_RED2BLACK_LIST_RES   RED2BLACKMSG = 60016
	RED2BLACKMSG_SC_SWITCH_GAME_STATUS_BROADCAST RED2BLACKMSG = 60020
)

var RED2BLACKMSG_name = map[int32]string{
	0:     "UNKNOW_RED2BLACK",
	60001: "CS_ENTER_GAME_RED2BLACK_REQ",
	60002: "SC_ENTER_GAME_RED2BLACK_RES",
	60003: "CS_LEAVE_GAME_RED2BLACK_REQ",
	60004: "SC_LEAVE_GAME_RED2BLACK_RES",
	60008: "CS_BET_RED2BLACK_REQ",
	60009: "SC_BET_RED2BLACK_RES",
	60010: "CS_CLEAN_BET_RED2BLACK_REQ",
	60011: "SC_CLEAN_BET_RED2BLACK_RES",
	60015: "CS_PLAYERS_RED2BLACK_LIST_REQ",
	60016: "SC_PLAYERS_RED2BLACK_LIST_RES",
	60020: "SC_SWITCH_GAME_STATUS_BROADCAST",
}
var RED2BLACKMSG_value = map[string]int32{
	"UNKNOW_RED2BLACK":                0,
	"CS_ENTER_GAME_RED2BLACK_REQ":     60001,
	"SC_ENTER_GAME_RED2BLACK_RES":     60002,
	"CS_LEAVE_GAME_RED2BLACK_REQ":     60003,
	"SC_LEAVE_GAME_RED2BLACK_RES":     60004,
	"CS_BET_RED2BLACK_REQ":            60008,
	"SC_BET_RED2BLACK_RES":            60009,
	"CS_CLEAN_BET_RED2BLACK_REQ":      60010,
	"SC_CLEAN_BET_RED2BLACK_RES":      60011,
	"CS_PLAYERS_RED2BLACK_LIST_REQ":   60015,
	"SC_PLAYERS_RED2BLACK_LIST_RES":   60016,
	"SC_SWITCH_GAME_STATUS_BROADCAST": 60020,
}

func (x RED2BLACKMSG) String() string {
	return proto.EnumName(RED2BLACKMSG_name, int32(x))
}
func (RED2BLACKMSG) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

// //////////////////////////////////////////////////// 游戏枚举 /////////////////////////////////////////////////////////////
// 下注区域
type RED2BLACKAREA int32

const (
	RED2BLACKAREA_RED2BLACK_AREA_Unknow RED2BLACKAREA = 0
	RED2BLACKAREA_RED2BLACK_AREA_RED    RED2BLACKAREA = 1
	RED2BLACKAREA_RED2BLACK_AREA_BLACK  RED2BLACKAREA = 2
	RED2BLACKAREA_RED2BLACK_AREA_LUCK   RED2BLACKAREA = 3
)

var RED2BLACKAREA_name = map[int32]string{
	0: "RED2BLACK_AREA_Unknow",
	1: "RED2BLACK_AREA_RED",
	2: "RED2BLACK_AREA_BLACK",
	3: "RED2BLACK_AREA_LUCK",
}
var RED2BLACKAREA_value = map[string]int32{
	"RED2BLACK_AREA_Unknow": 0,
	"RED2BLACK_AREA_RED":    1,
	"RED2BLACK_AREA_BLACK":  2,
	"RED2BLACK_AREA_LUCK":   3,
}

func (x RED2BLACKAREA) String() string {
	return proto.EnumName(RED2BLACKAREA_name, int32(x))
}
func (RED2BLACKAREA) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

// 牌型
type RED2BLACKCARDTYPE int32

const (
	RED2BLACKCARDTYPE_RED2BLACK_CARDTYPE_Unknow RED2BLACKCARDTYPE = 0
	RED2BLACKCARDTYPE_RED2BLACK_CARDTYPE_1      RED2BLACKCARDTYPE = 1
	RED2BLACKCARDTYPE_RED2BLACK_CARDTYPE_2      RED2BLACKCARDTYPE = 2
	RED2BLACKCARDTYPE_RED2BLACK_CARDTYPE_3      RED2BLACKCARDTYPE = 3
	RED2BLACKCARDTYPE_RED2BLACK_CARDTYPE_4      RED2BLACKCARDTYPE = 4
	RED2BLACKCARDTYPE_RED2BLACK_CARDTYPE_5      RED2BLACKCARDTYPE = 5
	RED2BLACKCARDTYPE_RED2BLACK_CARDTYPE_6      RED2BLACKCARDTYPE = 6
	RED2BLACKCARDTYPE_RED2BLACK_CARDTYPE_7      RED2BLACKCARDTYPE = 7
)

var RED2BLACKCARDTYPE_name = map[int32]string{
	0: "RED2BLACK_CARDTYPE_Unknow",
	1: "RED2BLACK_CARDTYPE_1",
	2: "RED2BLACK_CARDTYPE_2",
	3: "RED2BLACK_CARDTYPE_3",
	4: "RED2BLACK_CARDTYPE_4",
	5: "RED2BLACK_CARDTYPE_5",
	6: "RED2BLACK_CARDTYPE_6",
	7: "RED2BLACK_CARDTYPE_7",
}
var RED2BLACKCARDTYPE_value = map[string]int32{
	"RED2BLACK_CARDTYPE_Unknow": 0,
	"RED2BLACK_CARDTYPE_1":      1,
	"RED2BLACK_CARDTYPE_2":      2,
	"RED2BLACK_CARDTYPE_3":      3,
	"RED2BLACK_CARDTYPE_4":      4,
	"RED2BLACK_CARDTYPE_5":      5,
	"RED2BLACK_CARDTYPE_6":      6,
	"RED2BLACK_CARDTYPE_7":      7,
}

func (x RED2BLACKCARDTYPE) String() string {
	return proto.EnumName(RED2BLACKCARDTYPE_name, int32(x))
}
func (RED2BLACKCARDTYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

// 游戏状态
type RED2BLACKGAMESTATUS int32

const (
	RED2BLACKGAMESTATUS_RED2BLACK_GAMESTATUS_Unknow RED2BLACKGAMESTATUS = 0
	RED2BLACKGAMESTATUS_RED2BLACK_GAMESTATUS_WAIT   RED2BLACKGAMESTATUS = 1
	RED2BLACKGAMESTATUS_RED2BLACK_GAMESTATUS_BET    RED2BLACKGAMESTATUS = 2
	RED2BLACKGAMESTATUS_RED2BLACK_GAMESTATUS_STOP   RED2BLACKGAMESTATUS = 3
	RED2BLACKGAMESTATUS_RED2BLACK_GAMESTATUS_SETTLE RED2BLACKGAMESTATUS = 4
)

var RED2BLACKGAMESTATUS_name = map[int32]string{
	0: "RED2BLACK_GAMESTATUS_Unknow",
	1: "RED2BLACK_GAMESTATUS_WAIT",
	2: "RED2BLACK_GAMESTATUS_BET",
	3: "RED2BLACK_GAMESTATUS_STOP",
	4: "RED2BLACK_GAMESTATUS_SETTLE",
}
var RED2BLACKGAMESTATUS_value = map[string]int32{
	"RED2BLACK_GAMESTATUS_Unknow": 0,
	"RED2BLACK_GAMESTATUS_WAIT":   1,
	"RED2BLACK_GAMESTATUS_BET":    2,
	"RED2BLACK_GAMESTATUS_STOP":   3,
	"RED2BLACK_GAMESTATUS_SETTLE": 4,
}

func (x RED2BLACKGAMESTATUS) String() string {
	return proto.EnumName(RED2BLACKGAMESTATUS_name, int32(x))
}
func (RED2BLACKGAMESTATUS) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

// //////////////////////////////////////////////////// 消息数据结构 /////////////////////////////////////////////////////////////
// 请求进入房间
type ENTER_GAME_RED2BLACK_REQ struct {
	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	RoomID    uint32 `protobuf:"varint,2,opt,name=RoomID" json:"RoomID,omitempty"`
}

func (m *ENTER_GAME_RED2BLACK_REQ) Reset()                    { *m = ENTER_GAME_RED2BLACK_REQ{} }
func (m *ENTER_GAME_RED2BLACK_REQ) String() string            { return proto.CompactTextString(m) }
func (*ENTER_GAME_RED2BLACK_REQ) ProtoMessage()               {}
func (*ENTER_GAME_RED2BLACK_REQ) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *ENTER_GAME_RED2BLACK_REQ) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *ENTER_GAME_RED2BLACK_REQ) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

// 进入房间，服务器返回房间、游戏状态相关数据
type ENTER_GAME_RED2BLACK_RES struct {
	RoomID         uint32                             `protobuf:"varint,1,opt,name=RoomID" json:"RoomID,omitempty"`
	HistoryWinners []*ENTER_GAME_RED2BLACK_RES_Winner `protobuf:"bytes,2,rep,name=HistoryWinners" json:"HistoryWinners,omitempty"`
	Bets           []int64                            `protobuf:"varint,3,rep,packed,name=bets" json:"bets,omitempty"`
	ShowNum        uint32                             `protobuf:"varint,4,opt,name=ShowNum" json:"ShowNum,omitempty"`
	BetLimit       uint64                             `protobuf:"varint,5,opt,name=BetLimit" json:"BetLimit,omitempty"`
	Status         *StatusMsg                         `protobuf:"bytes,6,opt,name=Status" json:"Status,omitempty"`
}

func (m *ENTER_GAME_RED2BLACK_RES) Reset()                    { *m = ENTER_GAME_RED2BLACK_RES{} }
func (m *ENTER_GAME_RED2BLACK_RES) String() string            { return proto.CompactTextString(m) }
func (*ENTER_GAME_RED2BLACK_RES) ProtoMessage()               {}
func (*ENTER_GAME_RED2BLACK_RES) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *ENTER_GAME_RED2BLACK_RES) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *ENTER_GAME_RED2BLACK_RES) GetHistoryWinners() []*ENTER_GAME_RED2BLACK_RES_Winner {
	if m != nil {
		return m.HistoryWinners
	}
	return nil
}

func (m *ENTER_GAME_RED2BLACK_RES) GetBets() []int64 {
	if m != nil {
		return m.Bets
	}
	return nil
}

func (m *ENTER_GAME_RED2BLACK_RES) GetShowNum() uint32 {
	if m != nil {
		return m.ShowNum
	}
	return 0
}

func (m *ENTER_GAME_RED2BLACK_RES) GetBetLimit() uint64 {
	if m != nil {
		return m.BetLimit
	}
	return 0
}

func (m *ENTER_GAME_RED2BLACK_RES) GetStatus() *StatusMsg {
	if m != nil {
		return m.Status
	}
	return nil
}

type ENTER_GAME_RED2BLACK_RES_Winner struct {
	WinArea     RED2BLACKAREA     `protobuf:"varint,1,opt,name=WinArea,enum=protomsg.RED2BLACKAREA" json:"WinArea,omitempty"`
	WinCardType RED2BLACKCARDTYPE `protobuf:"varint,2,opt,name=WinCardType,enum=protomsg.RED2BLACKCARDTYPE" json:"WinCardType,omitempty"`
}

func (m *ENTER_GAME_RED2BLACK_RES_Winner) Reset()         { *m = ENTER_GAME_RED2BLACK_RES_Winner{} }
func (m *ENTER_GAME_RED2BLACK_RES_Winner) String() string { return proto.CompactTextString(m) }
func (*ENTER_GAME_RED2BLACK_RES_Winner) ProtoMessage()    {}
func (*ENTER_GAME_RED2BLACK_RES_Winner) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{1, 0}
}

func (m *ENTER_GAME_RED2BLACK_RES_Winner) GetWinArea() RED2BLACKAREA {
	if m != nil {
		return m.WinArea
	}
	return RED2BLACKAREA_RED2BLACK_AREA_Unknow
}

func (m *ENTER_GAME_RED2BLACK_RES_Winner) GetWinCardType() RED2BLACKCARDTYPE {
	if m != nil {
		return m.WinCardType
	}
	return RED2BLACKCARDTYPE_RED2BLACK_CARDTYPE_Unknow
}

// 请求退出房间
type LEAVE_GAME_RED2BLACK_REQ struct {
	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	RoomID    uint32 `protobuf:"varint,2,opt,name=RoomID" json:"RoomID,omitempty"`
}

func (m *LEAVE_GAME_RED2BLACK_REQ) Reset()                    { *m = LEAVE_GAME_RED2BLACK_REQ{} }
func (m *LEAVE_GAME_RED2BLACK_REQ) String() string            { return proto.CompactTextString(m) }
func (*LEAVE_GAME_RED2BLACK_REQ) ProtoMessage()               {}
func (*LEAVE_GAME_RED2BLACK_REQ) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *LEAVE_GAME_RED2BLACK_REQ) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *LEAVE_GAME_RED2BLACK_REQ) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type LEAVE_GAME_RED2BLACK_RES struct {
	Ret    uint32 `protobuf:"varint,1,opt,name=Ret" json:"Ret,omitempty"`
	RoomID uint32 `protobuf:"varint,2,opt,name=RoomID" json:"RoomID,omitempty"`
}

func (m *LEAVE_GAME_RED2BLACK_RES) Reset()                    { *m = LEAVE_GAME_RED2BLACK_RES{} }
func (m *LEAVE_GAME_RED2BLACK_RES) String() string            { return proto.CompactTextString(m) }
func (*LEAVE_GAME_RED2BLACK_RES) ProtoMessage()               {}
func (*LEAVE_GAME_RED2BLACK_RES) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *LEAVE_GAME_RED2BLACK_RES) GetRet() uint32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *LEAVE_GAME_RED2BLACK_RES) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

// //////////////////////////////////////////// 游戏 /////////////////////////////////////////////
// 服务器广播切换状态
type SWITCH_GAME_STATUS_BROADCAST struct {
	NextStatus *StatusMsg `protobuf:"bytes,1,opt,name=NextStatus" json:"NextStatus,omitempty"`
}

func (m *SWITCH_GAME_STATUS_BROADCAST) Reset()                    { *m = SWITCH_GAME_STATUS_BROADCAST{} }
func (m *SWITCH_GAME_STATUS_BROADCAST) String() string            { return proto.CompactTextString(m) }
func (*SWITCH_GAME_STATUS_BROADCAST) ProtoMessage()               {}
func (*SWITCH_GAME_STATUS_BROADCAST) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *SWITCH_GAME_STATUS_BROADCAST) GetNextStatus() *StatusMsg {
	if m != nil {
		return m.NextStatus
	}
	return nil
}

// 状态结构
type StatusMsg struct {
	Status           RED2BLACKGAMESTATUS `protobuf:"varint,1,opt,name=Status,enum=protomsg.RED2BLACKGAMESTATUS" json:"Status,omitempty"`
	Status_StartTime uint64              `protobuf:"varint,2,opt,name=Status_StartTime,json=StatusStartTime" json:"Status_StartTime,omitempty"`
	Status_EndTime   uint64              `protobuf:"varint,3,opt,name=Status_EndTime,json=StatusEndTime" json:"Status_EndTime,omitempty"`
	RedCards         []*Card             `protobuf:"bytes,4,rep,name=RedCards" json:"RedCards,omitempty"`
	BlackCards       []*Card             `protobuf:"bytes,5,rep,name=BlackCards" json:"BlackCards,omitempty"`
	AreaBetVal       map[int32]int64     `protobuf:"bytes,6,rep,name=AreaBetVal" json:"AreaBetVal,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	AreaBetVal_Own   map[int32]int64     `protobuf:"bytes,7,rep,name=AreaBetVal_Own,json=AreaBetValOwn" json:"AreaBetVal_Own,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Status_Data      []byte              `protobuf:"bytes,8,opt,name=Status_Data,json=StatusData,proto3" json:"Status_Data,omitempty"`
}

func (m *StatusMsg) Reset()                    { *m = StatusMsg{} }
func (m *StatusMsg) String() string            { return proto.CompactTextString(m) }
func (*StatusMsg) ProtoMessage()               {}
func (*StatusMsg) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *StatusMsg) GetStatus() RED2BLACKGAMESTATUS {
	if m != nil {
		return m.Status
	}
	return RED2BLACKGAMESTATUS_RED2BLACK_GAMESTATUS_Unknow
}

func (m *StatusMsg) GetStatus_StartTime() uint64 {
	if m != nil {
		return m.Status_StartTime
	}
	return 0
}

func (m *StatusMsg) GetStatus_EndTime() uint64 {
	if m != nil {
		return m.Status_EndTime
	}
	return 0
}

func (m *StatusMsg) GetRedCards() []*Card {
	if m != nil {
		return m.RedCards
	}
	return nil
}

func (m *StatusMsg) GetBlackCards() []*Card {
	if m != nil {
		return m.BlackCards
	}
	return nil
}

func (m *StatusMsg) GetAreaBetVal() map[int32]int64 {
	if m != nil {
		return m.AreaBetVal
	}
	return nil
}

func (m *StatusMsg) GetAreaBetVal_Own() map[int32]int64 {
	if m != nil {
		return m.AreaBetVal_Own
	}
	return nil
}

func (m *StatusMsg) GetStatus_Data() []byte {
	if m != nil {
		return m.Status_Data
	}
	return nil
}

// 1.等待
type Status_Wait struct {
}

func (m *Status_Wait) Reset()                    { *m = Status_Wait{} }
func (m *Status_Wait) String() string            { return proto.CompactTextString(m) }
func (*Status_Wait) ProtoMessage()               {}
func (*Status_Wait) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

// 2.押注
type Status_Bet struct {
}

func (m *Status_Bet) Reset()                    { *m = Status_Bet{} }
func (m *Status_Bet) String() string            { return proto.CompactTextString(m) }
func (*Status_Bet) ProtoMessage()               {}
func (*Status_Bet) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

// 3.停止下注
type Status_Stop struct {
}

func (m *Status_Stop) Reset()                    { *m = Status_Stop{} }
func (m *Status_Stop) String() string            { return proto.CompactTextString(m) }
func (*Status_Stop) ProtoMessage()               {}
func (*Status_Stop) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{8} }

// 4.结算
type Status_Settle struct {
	WinArea      RED2BLACKAREA     `protobuf:"varint,1,opt,name=WinArea,enum=protomsg.RED2BLACKAREA" json:"WinArea,omitempty"`
	WinCardType  RED2BLACKCARDTYPE `protobuf:"varint,2,opt,name=WinCardType,enum=protomsg.RED2BLACKCARDTYPE" json:"WinCardType,omitempty"`
	LossCardType RED2BLACKCARDTYPE `protobuf:"varint,3,opt,name=LossCardType,enum=protomsg.RED2BLACKCARDTYPE" json:"LossCardType,omitempty"`
	WinOdds      uint64            `protobuf:"varint,4,opt,name=winOdds" json:"winOdds,omitempty"`
	Players      map[int32]int64   `protobuf:"bytes,5,rep,name=Players" json:"Players,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *Status_Settle) Reset()                    { *m = Status_Settle{} }
func (m *Status_Settle) String() string            { return proto.CompactTextString(m) }
func (*Status_Settle) ProtoMessage()               {}
func (*Status_Settle) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

func (m *Status_Settle) GetWinArea() RED2BLACKAREA {
	if m != nil {
		return m.WinArea
	}
	return RED2BLACKAREA_RED2BLACK_AREA_Unknow
}

func (m *Status_Settle) GetWinCardType() RED2BLACKCARDTYPE {
	if m != nil {
		return m.WinCardType
	}
	return RED2BLACKCARDTYPE_RED2BLACK_CARDTYPE_Unknow
}

func (m *Status_Settle) GetLossCardType() RED2BLACKCARDTYPE {
	if m != nil {
		return m.LossCardType
	}
	return RED2BLACKCARDTYPE_RED2BLACK_CARDTYPE_Unknow
}

func (m *Status_Settle) GetWinOdds() uint64 {
	if m != nil {
		return m.WinOdds
	}
	return 0
}

func (m *Status_Settle) GetPlayers() map[int32]int64 {
	if m != nil {
		return m.Players
	}
	return nil
}

// 请求下注
type BET_RED2BLACK_REQ struct {
	AccountID uint32        `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	Area      RED2BLACKAREA `protobuf:"varint,2,opt,name=Area,enum=protomsg.RED2BLACKAREA" json:"Area,omitempty"`
	Bet       uint64        `protobuf:"varint,3,opt,name=Bet" json:"Bet,omitempty"`
}

func (m *BET_RED2BLACK_REQ) Reset()                    { *m = BET_RED2BLACK_REQ{} }
func (m *BET_RED2BLACK_REQ) String() string            { return proto.CompactTextString(m) }
func (*BET_RED2BLACK_REQ) ProtoMessage()               {}
func (*BET_RED2BLACK_REQ) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{10} }

func (m *BET_RED2BLACK_REQ) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *BET_RED2BLACK_REQ) GetArea() RED2BLACKAREA {
	if m != nil {
		return m.Area
	}
	return RED2BLACKAREA_RED2BLACK_AREA_Unknow
}

func (m *BET_RED2BLACK_REQ) GetBet() uint64 {
	if m != nil {
		return m.Bet
	}
	return 0
}

// 间隔 200 毫秒一次 广播玩家下注
type BET_RED2BLACK_RES struct {
	Players    []*BET_RED2BLACK_RES_BetPlayer `protobuf:"bytes,1,rep,name=Players" json:"Players,omitempty"`
	AreaBetVal map[int32]int64                `protobuf:"bytes,2,rep,name=AreaBetVal" json:"AreaBetVal,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *BET_RED2BLACK_RES) Reset()                    { *m = BET_RED2BLACK_RES{} }
func (m *BET_RED2BLACK_RES) String() string            { return proto.CompactTextString(m) }
func (*BET_RED2BLACK_RES) ProtoMessage()               {}
func (*BET_RED2BLACK_RES) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{11} }

func (m *BET_RED2BLACK_RES) GetPlayers() []*BET_RED2BLACK_RES_BetPlayer {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *BET_RED2BLACK_RES) GetAreaBetVal() map[int32]int64 {
	if m != nil {
		return m.AreaBetVal
	}
	return nil
}

type BET_RED2BLACK_RES_BetPlayer struct {
	AccountID uint32        `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	Area      RED2BLACKAREA `protobuf:"varint,2,opt,name=Area,enum=protomsg.RED2BLACKAREA" json:"Area,omitempty"`
	Bet       uint64        `protobuf:"varint,3,opt,name=Bet" json:"Bet,omitempty"`
}

func (m *BET_RED2BLACK_RES_BetPlayer) Reset()                    { *m = BET_RED2BLACK_RES_BetPlayer{} }
func (m *BET_RED2BLACK_RES_BetPlayer) String() string            { return proto.CompactTextString(m) }
func (*BET_RED2BLACK_RES_BetPlayer) ProtoMessage()               {}
func (*BET_RED2BLACK_RES_BetPlayer) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{11, 0} }

func (m *BET_RED2BLACK_RES_BetPlayer) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *BET_RED2BLACK_RES_BetPlayer) GetArea() RED2BLACKAREA {
	if m != nil {
		return m.Area
	}
	return RED2BLACKAREA_RED2BLACK_AREA_Unknow
}

func (m *BET_RED2BLACK_RES_BetPlayer) GetBet() uint64 {
	if m != nil {
		return m.Bet
	}
	return 0
}

// 请求清除下注
type CLEAN_BET_RED2BLACK_REQ struct {
	AccountID uint32 `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
}

func (m *CLEAN_BET_RED2BLACK_REQ) Reset()                    { *m = CLEAN_BET_RED2BLACK_REQ{} }
func (m *CLEAN_BET_RED2BLACK_REQ) String() string            { return proto.CompactTextString(m) }
func (*CLEAN_BET_RED2BLACK_REQ) ProtoMessage()               {}
func (*CLEAN_BET_RED2BLACK_REQ) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{12} }

func (m *CLEAN_BET_RED2BLACK_REQ) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

// 服务器广播清除下注
type CLEAN_BET_RED2BLACK_RES struct {
	AccountID  uint32          `protobuf:"varint,1,opt,name=AccountID" json:"AccountID,omitempty"`
	AreaBetVal map[int32]int64 `protobuf:"bytes,2,rep,name=AreaBetVal" json:"AreaBetVal,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *CLEAN_BET_RED2BLACK_RES) Reset()                    { *m = CLEAN_BET_RED2BLACK_RES{} }
func (m *CLEAN_BET_RED2BLACK_RES) String() string            { return proto.CompactTextString(m) }
func (*CLEAN_BET_RED2BLACK_RES) ProtoMessage()               {}
func (*CLEAN_BET_RED2BLACK_RES) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{13} }

func (m *CLEAN_BET_RED2BLACK_RES) GetAccountID() uint32 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *CLEAN_BET_RED2BLACK_RES) GetAreaBetVal() map[int32]int64 {
	if m != nil {
		return m.AreaBetVal
	}
	return nil
}

// 请求RED2BLACK玩家列表
type PLAYERS_RED2BLACK_LIST_RES struct {
	Players []*AccountStorageData `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
}

func (m *PLAYERS_RED2BLACK_LIST_RES) Reset()                    { *m = PLAYERS_RED2BLACK_LIST_RES{} }
func (m *PLAYERS_RED2BLACK_LIST_RES) String() string            { return proto.CompactTextString(m) }
func (*PLAYERS_RED2BLACK_LIST_RES) ProtoMessage()               {}
func (*PLAYERS_RED2BLACK_LIST_RES) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{14} }

func (m *PLAYERS_RED2BLACK_LIST_RES) GetPlayers() []*AccountStorageData {
	if m != nil {
		return m.Players
	}
	return nil
}

func init() {
	proto.RegisterType((*ENTER_GAME_RED2BLACK_REQ)(nil), "protomsg.ENTER_GAME_RED2BLACK_REQ")
	proto.RegisterType((*ENTER_GAME_RED2BLACK_RES)(nil), "protomsg.ENTER_GAME_RED2BLACK_RES")
	proto.RegisterType((*ENTER_GAME_RED2BLACK_RES_Winner)(nil), "protomsg.ENTER_GAME_RED2BLACK_RES.Winner")
	proto.RegisterType((*LEAVE_GAME_RED2BLACK_REQ)(nil), "protomsg.LEAVE_GAME_RED2BLACK_REQ")
	proto.RegisterType((*LEAVE_GAME_RED2BLACK_RES)(nil), "protomsg.LEAVE_GAME_RED2BLACK_RES")
	proto.RegisterType((*SWITCH_GAME_STATUS_BROADCAST)(nil), "protomsg.SWITCH_GAME_STATUS_BROADCAST")
	proto.RegisterType((*StatusMsg)(nil), "protomsg.StatusMsg")
	proto.RegisterType((*Status_Wait)(nil), "protomsg.Status_Wait")
	proto.RegisterType((*Status_Bet)(nil), "protomsg.Status_Bet")
	proto.RegisterType((*Status_Stop)(nil), "protomsg.Status_Stop")
	proto.RegisterType((*Status_Settle)(nil), "protomsg.Status_Settle")
	proto.RegisterType((*BET_RED2BLACK_REQ)(nil), "protomsg.BET_RED2BLACK_REQ")
	proto.RegisterType((*BET_RED2BLACK_RES)(nil), "protomsg.BET_RED2BLACK_RES")
	proto.RegisterType((*BET_RED2BLACK_RES_BetPlayer)(nil), "protomsg.BET_RED2BLACK_RES.BetPlayer")
	proto.RegisterType((*CLEAN_BET_RED2BLACK_REQ)(nil), "protomsg.CLEAN_BET_RED2BLACK_REQ")
	proto.RegisterType((*CLEAN_BET_RED2BLACK_RES)(nil), "protomsg.CLEAN_BET_RED2BLACK_RES")
	proto.RegisterType((*PLAYERS_RED2BLACK_LIST_RES)(nil), "protomsg.PLAYERS_RED2BLACK_LIST_RES")
	proto.RegisterEnum("protomsg.RED2BLACKMSG", RED2BLACKMSG_name, RED2BLACKMSG_value)
	proto.RegisterEnum("protomsg.RED2BLACKAREA", RED2BLACKAREA_name, RED2BLACKAREA_value)
	proto.RegisterEnum("protomsg.RED2BLACKCARDTYPE", RED2BLACKCARDTYPE_name, RED2BLACKCARDTYPE_value)
	proto.RegisterEnum("protomsg.RED2BLACKGAMESTATUS", RED2BLACKGAMESTATUS_name, RED2BLACKGAMESTATUS_value)
}

func init() { proto.RegisterFile("protobuf/red2black.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 1134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x4f, 0x53, 0xdb, 0x46,
	0x14, 0x8f, 0x2c, 0x63, 0xc3, 0x03, 0x9b, 0xcd, 0x42, 0x83, 0x62, 0x60, 0x70, 0x9d, 0xd2, 0x71,
	0x60, 0xc6, 0x19, 0x4c, 0x93, 0x74, 0x32, 0x93, 0xa6, 0x92, 0xac, 0x49, 0x18, 0x8c, 0x0d, 0xbb,
	0x22, 0x9e, 0xf4, 0xa2, 0x11, 0x58, 0x25, 0x1e, 0x40, 0x62, 0xec, 0x75, 0xa9, 0xfb, 0x5d, 0x7a,
	0xed, 0x17, 0xe8, 0xa7, 0x68, 0xcf, 0x3e, 0xf4, 0xda, 0x3f, 0x87, 0xb4, 0x3d, 0xb4, 0x87, 0x1e,
	0x7a, 0xec, 0x48, 0x2b, 0x4b, 0xf2, 0x1f, 0x39, 0xc3, 0xa4, 0xed, 0xc9, 0xbb, 0xef, 0xfd, 0xde,
	0xef, 0xbd, 0xfd, 0xbd, 0xb7, 0x6b, 0x81, 0x74, 0xd5, 0x76, 0x98, 0x73, 0xd2, 0xfd, 0xfc, 0x41,
	0xdb, 0x6a, 0x96, 0x4f, 0x2e, 0xcc, 0xd3, 0xf3, 0x92, 0x67, 0xc2, 0xb3, 0xde, 0xcf, 0x65, 0xe7,
	0x2c, 0xb7, 0x14, 0x60, 0x9a, 0x26, 0x33, 0xb9, 0xbb, 0x70, 0x08, 0x92, 0x56, 0xd3, 0x35, 0x62,
	0x3c, 0x97, 0x0f, 0x34, 0x83, 0x68, 0x95, 0xb2, 0x52, 0x95, 0xd5, 0x7d, 0x83, 0x68, 0x47, 0x78,
	0x0d, 0xe6, 0xe4, 0xd3, 0x53, 0xa7, 0x6b, 0xb3, 0xbd, 0x8a, 0x24, 0xe4, 0x85, 0x62, 0x86, 0x84,
	0x06, 0x7c, 0x07, 0x52, 0xc4, 0x71, 0x2e, 0xf7, 0x2a, 0x52, 0xc2, 0x73, 0xf9, 0xbb, 0xc2, 0xdf,
	0x89, 0x58, 0x4a, 0x1a, 0x09, 0x12, 0xa2, 0x41, 0xf8, 0x08, 0xb2, 0x2f, 0x5a, 0x1d, 0xe6, 0xb4,
	0x7b, 0x8d, 0x96, 0x6d, 0x5b, 0xed, 0x8e, 0x94, 0xc8, 0x8b, 0xc5, 0xf9, 0xf2, 0xfd, 0xd2, 0xa0,
	0xfc, 0x52, 0x1c, 0x67, 0x89, 0x47, 0x90, 0x11, 0x02, 0x8c, 0x21, 0x79, 0x62, 0xb1, 0x8e, 0x24,
	0xe6, 0xc5, 0xa2, 0x48, 0xbc, 0x35, 0x96, 0x20, 0x4d, 0x5f, 0x3b, 0xd7, 0xb5, 0xee, 0xa5, 0x94,
	0xf4, 0xf2, 0x0f, 0xb6, 0x38, 0x07, 0xb3, 0x8a, 0xc5, 0xaa, 0xad, 0xcb, 0x16, 0x93, 0x66, 0xf2,
	0x42, 0x31, 0x49, 0x82, 0x3d, 0xde, 0x86, 0x14, 0x65, 0x26, 0xeb, 0x76, 0xa4, 0x54, 0x5e, 0x28,
	0xce, 0x97, 0x97, 0xc2, 0xa2, 0xb8, 0xfd, 0xa0, 0x73, 0x46, 0x7c, 0x48, 0xee, 0x2b, 0x48, 0xf1,
	0x0a, 0xf0, 0x0e, 0xa4, 0x1b, 0x2d, 0x5b, 0x6e, 0x5b, 0xa6, 0x77, 0xd8, 0x6c, 0x79, 0x25, 0x8c,
	0x0b, 0x4e, 0x20, 0x13, 0x4d, 0x26, 0x03, 0x1c, 0x7e, 0x0a, 0xf3, 0x8d, 0x96, 0xad, 0x9a, 0xed,
	0xa6, 0xde, 0xbb, 0xb2, 0x3c, 0x61, 0xb3, 0xe5, 0xd5, 0x09, 0x61, 0xaa, 0x4c, 0x2a, 0xfa, 0xab,
	0x43, 0x8d, 0x44, 0xf1, 0x6e, 0x33, 0xab, 0x9a, 0xfc, 0x52, 0xfb, 0xf7, 0x9a, 0x59, 0x89, 0x65,
	0xa4, 0x18, 0x81, 0x48, 0x2c, 0xe6, 0x73, 0xb9, 0xcb, 0x58, 0x16, 0x0a, 0x6b, 0xb4, 0xb1, 0xa7,
	0xab, 0x2f, 0x38, 0x0d, 0xd5, 0x65, 0xfd, 0x98, 0x1a, 0x0a, 0xa9, 0xcb, 0x15, 0x55, 0xa6, 0x3a,
	0xde, 0x05, 0xa8, 0x59, 0x5f, 0x32, 0x5f, 0x64, 0x21, 0x5e, 0xe4, 0x08, 0xac, 0xf0, 0x4d, 0x12,
	0xe6, 0x02, 0x0f, 0x7e, 0x18, 0xf4, 0x88, 0x6b, 0xbd, 0x3e, 0x41, 0x34, 0x37, 0x39, 0xcf, 0x3d,
	0xe8, 0x16, 0xbe, 0x0f, 0x88, 0xaf, 0x0c, 0xca, 0xcc, 0x36, 0xd3, 0x5b, 0x97, 0x5c, 0xf5, 0x24,
	0x59, 0xe4, 0xf6, 0xc0, 0x8c, 0x37, 0x21, 0xeb, 0x43, 0x35, 0xbb, 0xe9, 0x01, 0x45, 0x0f, 0x98,
	0xe1, 0x56, 0xdf, 0x88, 0xb7, 0x60, 0x96, 0x58, 0x4d, 0xb7, 0x25, 0x1d, 0x29, 0xe9, 0xcd, 0x70,
	0x36, 0x2c, 0xc5, 0x35, 0x93, 0xc0, 0x8f, 0x4b, 0x00, 0x8a, 0x7b, 0x55, 0x39, 0x7a, 0x66, 0x22,
	0x3a, 0x82, 0xc0, 0x2a, 0x80, 0x3b, 0x26, 0x8a, 0xc5, 0x5e, 0x9a, 0x17, 0x52, 0xca, 0xc3, 0xdf,
	0x9b, 0xa0, 0x53, 0x29, 0x44, 0x69, 0x36, 0x6b, 0xf7, 0x48, 0x24, 0x0c, 0x1f, 0x40, 0x36, 0xdc,
	0x19, 0xf5, 0x6b, 0x5b, 0x4a, 0x7b, 0x44, 0x1f, 0x4e, 0x27, 0xaa, 0x5f, 0xdb, 0x9c, 0x2b, 0x33,
	0x64, 0xc3, 0x1b, 0x30, 0xef, 0xcb, 0x52, 0x31, 0x99, 0x29, 0xcd, 0xe6, 0x85, 0xe2, 0x02, 0x01,
	0x6e, 0x72, 0x2d, 0xb9, 0xa7, 0xb0, 0x38, 0x52, 0x8e, 0x3b, 0x39, 0xe7, 0x56, 0xcf, 0xeb, 0xd4,
	0x0c, 0x71, 0x97, 0x78, 0x19, 0x66, 0xbe, 0x30, 0x2f, 0xba, 0x5c, 0x7c, 0x91, 0xf0, 0xcd, 0x93,
	0xc4, 0xc7, 0x42, 0xee, 0x53, 0xc0, 0xe3, 0x45, 0xdc, 0x84, 0xa1, 0x90, 0x09, 0x2a, 0x6c, 0x98,
	0x2d, 0x56, 0x58, 0x00, 0xbf, 0x3a, 0x43, 0xb1, 0x58, 0xc4, 0x49, 0x99, 0x73, 0x55, 0xf8, 0x21,
	0x01, 0x99, 0xc1, 0xde, 0x62, 0xec, 0xc2, 0xfa, 0xff, 0x6f, 0x31, 0x7e, 0x06, 0x0b, 0x55, 0xa7,
	0xd3, 0x09, 0xe2, 0xc5, 0xb7, 0xc7, 0x0f, 0x05, 0xb8, 0xaf, 0xdc, 0x75, 0xcb, 0xae, 0x37, 0xbd,
	0x09, 0x74, 0x47, 0x74, 0xb0, 0xc5, 0x9f, 0x40, 0xfa, 0xf0, 0xc2, 0xec, 0xb9, 0xef, 0x2b, 0x9f,
	0xb6, 0x0f, 0x46, 0x9b, 0xee, 0x1f, 0xbb, 0xe4, 0xc3, 0x78, 0xcb, 0x07, 0x41, 0xb9, 0x27, 0xb0,
	0x10, 0x75, 0xdc, 0xa8, 0x0d, 0x57, 0x70, 0x5b, 0xd1, 0xf4, 0x1b, 0xbd, 0x4a, 0xdb, 0x90, 0xf4,
	0x84, 0x4f, 0x4c, 0x17, 0xde, 0x03, 0xb9, 0xb5, 0x28, 0x16, 0xf3, 0x2f, 0xa5, 0xbb, 0x2c, 0x7c,
	0x9f, 0x18, 0x4f, 0x49, 0xf1, 0xb3, 0x50, 0x03, 0xc1, 0xd3, 0x60, 0x33, 0xe4, 0x1d, 0x43, 0x97,
	0x14, 0x8b, 0x71, 0x74, 0x20, 0x02, 0xde, 0x1f, 0xba, 0x85, 0xfc, 0x7f, 0x6a, 0x7b, 0x1a, 0xc7,
	0x94, 0xdb, 0x98, 0x7b, 0x0d, 0x73, 0x41, 0x8a, 0xff, 0x54, 0x8d, 0x77, 0xbc, 0x87, 0x85, 0xc7,
	0xb0, 0xa2, 0x56, 0x35, 0xb9, 0x66, 0xdc, 0xb0, 0x89, 0x85, 0xef, 0x84, 0xb8, 0x48, 0xfa, 0x96,
	0x03, 0x1f, 0x4d, 0x10, 0x7a, 0x27, 0xf2, 0x3c, 0x4e, 0x26, 0x9d, 0x2a, 0xf7, 0x3b, 0x8a, 0xa0,
	0x43, 0xee, 0xb0, 0x2a, 0xbf, 0xd2, 0x08, 0x8d, 0xe4, 0xac, 0xee, 0x51, 0xdd, 0x3b, 0xcd, 0x23,
	0x48, 0x5f, 0x0d, 0x4d, 0xd6, 0x5a, 0x58, 0xac, 0x7f, 0x2a, 0xca, 0x9c, 0xb6, 0x79, 0x66, 0xb9,
	0x0f, 0x23, 0x19, 0x80, 0xb7, 0xbe, 0x16, 0x61, 0x21, 0xa0, 0x3b, 0xa0, 0xcf, 0xf1, 0x32, 0xa0,
	0xe3, 0xda, 0x7e, 0xad, 0xde, 0x08, 0xb3, 0xa0, 0x5b, 0xf8, 0x7d, 0x58, 0x55, 0xa9, 0x11, 0xf7,
	0xb5, 0x86, 0x7e, 0xec, 0x8b, 0x2e, 0x84, 0xaa, 0x71, 0x10, 0x8a, 0x7e, 0xe2, 0x10, 0x95, 0x1a,
	0x71, 0x9f, 0x09, 0xe8, 0xe7, 0x80, 0x25, 0xee, 0x7f, 0x1f, 0xfd, 0xd2, 0x17, 0x71, 0x0e, 0x96,
	0x55, 0x3a, 0x3e, 0x0a, 0xe8, 0x0d, 0xf7, 0x51, 0x75, 0xbc, 0x2f, 0xe8, 0xd7, 0xbe, 0x88, 0xf3,
	0x90, 0x53, 0xa9, 0x11, 0x33, 0x48, 0xe8, 0x37, 0x8e, 0xa0, 0x6a, 0x0c, 0x82, 0xa2, 0xdf, 0xfb,
	0x22, 0xbe, 0x07, 0xeb, 0x2a, 0x35, 0x62, 0xfb, 0x70, 0x84, 0xfe, 0xe0, 0x20, 0xaa, 0xc6, 0x83,
	0x28, 0xfa, 0xb3, 0x2f, 0xe2, 0x4d, 0xd8, 0xa0, 0xaa, 0x31, 0xed, 0xd3, 0x04, 0xfd, 0xd5, 0x17,
	0xb7, 0xba, 0x90, 0x19, 0xba, 0x62, 0xf8, 0x2e, 0xbc, 0x17, 0x32, 0xba, 0x16, 0xe3, 0xd8, 0x3e,
	0xb7, 0x9d, 0x6b, 0x74, 0x0b, 0xdf, 0x01, 0x3c, 0xe2, 0x22, 0x5a, 0x05, 0x09, 0x58, 0x82, 0xe5,
	0x11, 0x3b, 0x6f, 0x6b, 0x02, 0xaf, 0xc0, 0xd2, 0x88, 0xa7, 0x7a, 0xac, 0xee, 0x23, 0x71, 0xeb,
	0x8d, 0x00, 0xb7, 0xc7, 0x9e, 0x7a, 0xbc, 0x0e, 0x77, 0x43, 0xf8, 0xc0, 0x1a, 0xe6, 0x1f, 0xca,
	0x13, 0xb8, 0x77, 0x46, 0x2b, 0x08, 0x3c, 0x65, 0x94, 0x88, 0xf1, 0xec, 0x22, 0x31, 0xc6, 0xf3,
	0x11, 0x4a, 0xc6, 0x78, 0x1e, 0xa2, 0x99, 0x18, 0xcf, 0x23, 0x94, 0x8a, 0xf1, 0x3c, 0x46, 0xe9,
	0xad, 0x6f, 0x85, 0x88, 0x08, 0xe1, 0x67, 0x1a, 0xde, 0x80, 0xd5, 0x30, 0x22, 0xb4, 0x87, 0xc7,
	0x1d, 0x52, 0x23, 0x02, 0x68, 0xc8, 0x7b, 0x3a, 0x12, 0xf0, 0x1a, 0x48, 0x13, 0xdd, 0x8a, 0xa6,
	0xa3, 0x44, 0x6c, 0x30, 0xd5, 0xeb, 0x87, 0x48, 0x8c, 0x4d, 0x4e, 0x35, 0x5d, 0xaf, 0x6a, 0x28,
	0xa9, 0x2c, 0x7e, 0x96, 0x69, 0x3b, 0x0e, 0x7b, 0x30, 0xb8, 0xe4, 0x27, 0x29, 0x6f, 0xb5, 0xfb,
	0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x11, 0xb9, 0x4a, 0x20, 0x8e, 0x0d, 0x00, 0x00,
}
