// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/hall.proto

package protomsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MSG int32

const (
	MSG_UNKNOW              MSG = 0
	MSG_CS_SYNC_SERVER_TIME MSG = 10001
	MSG_SC_SYNC_SERVER_TIME MSG = 10002
	MSG_CLIENT_KEEPALIVE    MSG = 10003
	MSG_SC_KICK_OUT_HALL    MSG = 10004
	MSG_CS_LOGIN_HALL_REQ   MSG = 10010
	MSG_SC_LOGIN_HALL_RES   MSG = 10011
	MSG_CS_BIND_PHONE       MSG = 10016
	MSG_SC_BIND_PHONE       MSG = 10017
)

var MSG_name = map[int32]string{
	0:     "UNKNOW",
	10001: "CS_SYNC_SERVER_TIME",
	10002: "SC_SYNC_SERVER_TIME",
	10003: "CLIENT_KEEPALIVE",
	10004: "SC_KICK_OUT_HALL",
	10010: "CS_LOGIN_HALL_REQ",
	10011: "SC_LOGIN_HALL_RES",
	10016: "CS_BIND_PHONE",
	10017: "SC_BIND_PHONE",
}
var MSG_value = map[string]int32{
	"UNKNOW":              0,
	"CS_SYNC_SERVER_TIME": 10001,
	"SC_SYNC_SERVER_TIME": 10002,
	"CLIENT_KEEPALIVE":    10003,
	"SC_KICK_OUT_HALL":    10004,
	"CS_LOGIN_HALL_REQ":   10010,
	"SC_LOGIN_HALL_RES":   10011,
	"CS_BIND_PHONE":       10016,
	"SC_BIND_PHONE":       10017,
}

func (x MSG) String() string {
	return proto.EnumName(MSG_name, int32(x))
}
func (MSG) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// 请求同步服务器时间 10002
type SYNC_SERVER_TIME struct {
	ServerTimeStamp uint64 `protobuf:"varint,1,opt,name=ServerTimeStamp" json:"ServerTimeStamp,omitempty"`
}

func (m *SYNC_SERVER_TIME) Reset()                    { *m = SYNC_SERVER_TIME{} }
func (m *SYNC_SERVER_TIME) String() string            { return proto.CompactTextString(m) }
func (*SYNC_SERVER_TIME) ProtoMessage()               {}
func (*SYNC_SERVER_TIME) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *SYNC_SERVER_TIME) GetServerTimeStamp() uint64 {
	if m != nil {
		return m.ServerTimeStamp
	}
	return 0
}

// 服务器踢下线 10011
type KICK_OUT_HALL struct {
	Ret uint32 `protobuf:"varint,1,opt,name=Ret" json:"Ret,omitempty"`
}

func (m *KICK_OUT_HALL) Reset()                    { *m = KICK_OUT_HALL{} }
func (m *KICK_OUT_HALL) String() string            { return proto.CompactTextString(m) }
func (*KICK_OUT_HALL) ProtoMessage()               {}
func (*KICK_OUT_HALL) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *KICK_OUT_HALL) GetRet() uint32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

// 客户端请求登陆 10010
type LOGIN_HALL_REQ struct {
	LoginType uint32 `protobuf:"varint,1,opt,name=LoginType" json:"LoginType,omitempty"`
	OSType    uint32 `protobuf:"varint,2,opt,name=OSType" json:"OSType,omitempty"`
	Unique    string `protobuf:"bytes,3,opt,name=Unique" json:"Unique,omitempty"`
	Sign      string `protobuf:"bytes,4,opt,name=Sign" json:"Sign,omitempty"`
}

func (m *LOGIN_HALL_REQ) Reset()                    { *m = LOGIN_HALL_REQ{} }
func (m *LOGIN_HALL_REQ) String() string            { return proto.CompactTextString(m) }
func (*LOGIN_HALL_REQ) ProtoMessage()               {}
func (*LOGIN_HALL_REQ) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *LOGIN_HALL_REQ) GetLoginType() uint32 {
	if m != nil {
		return m.LoginType
	}
	return 0
}

func (m *LOGIN_HALL_REQ) GetOSType() uint32 {
	if m != nil {
		return m.OSType
	}
	return 0
}

func (m *LOGIN_HALL_REQ) GetUnique() string {
	if m != nil {
		return m.Unique
	}
	return ""
}

func (m *LOGIN_HALL_REQ) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

// 客户端请求登陆 10011
type LOGIN_HALL_RES struct {
	Ret         uint32              `protobuf:"varint,1,opt,name=Ret" json:"Ret,omitempty"`
	Account     *AccountStorageData `protobuf:"bytes,2,opt,name=Account" json:"Account,omitempty"`
	AccountData *AccountGameData    `protobuf:"bytes,3,opt,name=AccountData" json:"AccountData,omitempty"`
}

func (m *LOGIN_HALL_RES) Reset()                    { *m = LOGIN_HALL_RES{} }
func (m *LOGIN_HALL_RES) String() string            { return proto.CompactTextString(m) }
func (*LOGIN_HALL_RES) ProtoMessage()               {}
func (*LOGIN_HALL_RES) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *LOGIN_HALL_RES) GetRet() uint32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *LOGIN_HALL_RES) GetAccount() *AccountStorageData {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *LOGIN_HALL_RES) GetAccountData() *AccountGameData {
	if m != nil {
		return m.AccountData
	}
	return nil
}

// 客户端请求登陆 10016
type BIND_PHONE_REQ struct {
	Phone string `protobuf:"bytes,1,opt,name=Phone" json:"Phone,omitempty"`
}

func (m *BIND_PHONE_REQ) Reset()                    { *m = BIND_PHONE_REQ{} }
func (m *BIND_PHONE_REQ) String() string            { return proto.CompactTextString(m) }
func (*BIND_PHONE_REQ) ProtoMessage()               {}
func (*BIND_PHONE_REQ) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *BIND_PHONE_REQ) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

// 客户端请求登陆 10017
type BIND_PHONE_RESP struct {
	Ret uint32 `protobuf:"varint,1,opt,name=Ret" json:"Ret,omitempty"`
}

func (m *BIND_PHONE_RESP) Reset()                    { *m = BIND_PHONE_RESP{} }
func (m *BIND_PHONE_RESP) String() string            { return proto.CompactTextString(m) }
func (*BIND_PHONE_RESP) ProtoMessage()               {}
func (*BIND_PHONE_RESP) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *BIND_PHONE_RESP) GetRet() uint32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func init() {
	proto.RegisterType((*SYNC_SERVER_TIME)(nil), "protomsg.SYNC_SERVER_TIME")
	proto.RegisterType((*KICK_OUT_HALL)(nil), "protomsg.KICK_OUT_HALL")
	proto.RegisterType((*LOGIN_HALL_REQ)(nil), "protomsg.LOGIN_HALL_REQ")
	proto.RegisterType((*LOGIN_HALL_RES)(nil), "protomsg.LOGIN_HALL_RES")
	proto.RegisterType((*BIND_PHONE_REQ)(nil), "protomsg.BIND_PHONE_REQ")
	proto.RegisterType((*BIND_PHONE_RESP)(nil), "protomsg.BIND_PHONE_RESP")
	proto.RegisterEnum("protomsg.MSG", MSG_name, MSG_value)
}

func init() { proto.RegisterFile("protobuf/hall.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xcf, 0x6e, 0x13, 0x31,
	0x10, 0xc6, 0x59, 0x12, 0x02, 0x99, 0x28, 0x8d, 0x71, 0xa1, 0x0a, 0xa8, 0x87, 0xb2, 0x48, 0x28,
	0xe2, 0x90, 0x4a, 0x45, 0xe2, 0x02, 0x97, 0xd4, 0xb5, 0xd2, 0x55, 0xb6, 0xde, 0xe0, 0xd9, 0x14,
	0xc1, 0xc5, 0x72, 0xcb, 0x92, 0x46, 0x6a, 0xd6, 0x61, 0x71, 0x90, 0x78, 0x0c, 0xfe, 0x48, 0x48,
	0x70, 0x81, 0xe7, 0xe1, 0xa5, 0xaa, 0x38, 0x1b, 0x25, 0x9b, 0x3d, 0x79, 0xe6, 0xf7, 0x7d, 0x96,
	0x3d, 0xdf, 0xc0, 0xee, 0x2c, 0x33, 0xd6, 0x5c, 0xcc, 0x3f, 0x1e, 0x5e, 0xe9, 0xeb, 0xeb, 0xae,
	0xeb, 0xe8, 0x3d, 0x77, 0x4c, 0x3f, 0x8f, 0x1f, 0xaf, 0xe5, 0x0f, 0xda, 0xea, 0xa5, 0xec, 0xbf,
	0x06, 0x82, 0xef, 0x04, 0x53, 0xc8, 0xe5, 0x39, 0x97, 0x2a, 0x0e, 0xce, 0x38, 0xed, 0x40, 0x0b,
	0x93, 0xec, 0x4b, 0x92, 0xc5, 0x93, 0x69, 0x82, 0x56, 0x4f, 0x67, 0x6d, 0xef, 0xc0, 0xeb, 0x54,
	0xe5, 0x36, 0xf6, 0x9f, 0x40, 0x73, 0x10, 0xb0, 0x81, 0x8a, 0x46, 0xb1, 0x3a, 0xed, 0x85, 0x21,
	0x25, 0x50, 0x91, 0x89, 0x75, 0xf6, 0xa6, 0x5c, 0x94, 0x7e, 0x06, 0x3b, 0x61, 0xd4, 0x0f, 0x84,
	0xd3, 0x95, 0xe4, 0x6f, 0xe8, 0x3e, 0xd4, 0x43, 0x33, 0x9e, 0xa4, 0xf1, 0xd7, 0x59, 0x92, 0x3b,
	0xd7, 0x80, 0xee, 0x41, 0x2d, 0x42, 0x27, 0xdd, 0x76, 0x52, 0xde, 0x2d, 0xf8, 0x28, 0x9d, 0x7c,
	0x9a, 0x27, 0xed, 0xca, 0x81, 0xd7, 0xa9, 0xcb, 0xbc, 0xa3, 0x14, 0xaa, 0x38, 0x19, 0xa7, 0xed,
	0xaa, 0xa3, 0xae, 0xf6, 0x7f, 0x79, 0x5b, 0x8f, 0x62, 0xf9, 0x63, 0xf4, 0x25, 0xdc, 0xed, 0x5d,
	0x5e, 0x9a, 0x79, 0x6a, 0xdd, 0x4b, 0x8d, 0xa3, 0xfd, 0xee, 0x2a, 0xaa, 0x6e, 0x2e, 0xa0, 0x35,
	0x99, 0x1e, 0x27, 0x27, 0xda, 0x6a, 0xb9, 0x32, 0xd3, 0x57, 0xd0, 0xc8, 0xcb, 0x05, 0x77, 0xbf,
	0x69, 0x1c, 0x3d, 0x2a, 0xdd, 0xed, 0xeb, 0xe9, 0xf2, 0xe2, 0xa6, 0xdb, 0x7f, 0x06, 0x3b, 0xc7,
	0x81, 0x38, 0x51, 0xc3, 0xd3, 0x48, 0x70, 0x97, 0xc6, 0x03, 0xb8, 0x33, 0xbc, 0x32, 0xe9, 0x32,
	0x89, 0xba, 0x5c, 0x36, 0xfe, 0x53, 0x68, 0x15, 0x7c, 0x38, 0x2c, 0x4f, 0xf0, 0xfc, 0xbf, 0x07,
	0x95, 0x33, 0xec, 0x53, 0x80, 0xda, 0x48, 0x0c, 0x44, 0xf4, 0x96, 0xdc, 0xa2, 0x6d, 0xd8, 0x65,
	0xa8, 0xb6, 0x57, 0x4a, 0xbe, 0x89, 0x85, 0x82, 0xac, 0xac, 0x7c, 0x17, 0xf4, 0x21, 0x10, 0x16,
	0x06, 0x5c, 0xc4, 0x6a, 0xc0, 0xf9, 0xb0, 0x17, 0x06, 0xe7, 0x9c, 0xfc, 0x70, 0x18, 0x99, 0x2a,
	0xec, 0x97, 0xfc, 0x14, 0x74, 0x0f, 0xee, 0x33, 0x54, 0xc5, 0x9d, 0x92, 0xdf, 0x8e, 0x23, 0x2b,
	0x72, 0x24, 0x7f, 0x04, 0xa5, 0xd0, 0x64, 0xa8, 0xd6, 0xd3, 0x90, 0xbf, 0x8e, 0x21, 0xdb, 0x64,
	0xff, 0xc4, 0x71, 0xeb, 0x7d, 0x33, 0x33, 0xc6, 0x1e, 0xae, 0x82, 0xbc, 0xa8, 0xb9, 0xea, 0xc5,
	0x4d, 0x00, 0x00, 0x00, 0xff, 0xff, 0x92, 0x1c, 0x18, 0x34, 0xd7, 0x02, 0x00, 0x00,
}
